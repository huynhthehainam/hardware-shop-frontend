(this["webpackJsonpfuse-react-app"]=this["webpackJsonpfuse-react-app"]||[]).push([[183],{1767:function(e,n,t){"use strict";t.r(n),n.default="import '@fake-db';\nimport FuseAuthorization from '@fuse/core/FuseAuthorization';\nimport FuseLayout from '@fuse/core/FuseLayout';\nimport FuseTheme from '@fuse/core/FuseTheme';\nimport history from '@history';\nimport { Router } from 'react-router-dom';\nimport { SnackbarProvider } from 'notistack';\nimport { useSelector } from 'react-redux';\nimport rtlPlugin from 'stylis-plugin-rtl';\nimport createCache from '@emotion/cache';\nimport { CacheProvider } from '@emotion/react';\nimport { selectCurrLangDir } from 'app/store/i18nSlice';\nimport withAppProviders from './withAppProviders';\nimport { Auth } from './auth';\n\n// import axios from 'axios';\n/**\n * Axios HTTP Request defaults\n */\n// axios.defaults.baseURL = \"\";\n// axios.defaults.headers.common['Access-Control-Allow-Origin'] = '*';\n// axios.defaults.headers.common['Content-Type'] = 'application/x-www-form-urlencoded';\n\nconst emotionCacheOptions = {\n  rtl: {\n    key: 'muirtl',\n    stylisPlugins: [rtlPlugin],\n    prepend: true,\n  },\n  ltr: {\n    key: 'muiltr',\n    stylisPlugins: [],\n    prepend: true,\n  },\n};\n\nconst App = () => {\n  const langDirection = useSelector(selectCurrLangDir);\n\n  return (\n    <CacheProvider value={createCache(emotionCacheOptions[langDirection])}>\n      <Auth>\n        <Router history={history}>\n          <FuseAuthorization>\n            <FuseTheme>\n              <SnackbarProvider\n                maxSnack={5}\n                anchorOrigin={{\n                  vertical: 'bottom',\n                  horizontal: 'right',\n                }}\n                classes={{\n                  containerRoot: 'bottom-0 right-0 mb-52 md:mb-68 mr-8 lg:mr-80 z-99',\n                }}\n              >\n                <FuseLayout />\n              </SnackbarProvider>\n            </FuseTheme>\n          </FuseAuthorization>\n        </Router>\n      </Auth>\n    </CacheProvider>\n  );\n};\n\nexport default withAppProviders(App)();\n"},3234:function(e,n,t){"use strict";t.r(n);var o=t(168),r=t(200),s=t(43),i=t(0);n.default=function(){return Object(i.jsxs)(i.Fragment,{children:[Object(i.jsx)(r.a,{variant:"h4",className:"mb-40 font-700",children:"FuseTheme"}),Object(i.jsxs)(r.a,{className:"mb-16",component:"p",children:[Object(i.jsx)("code",{children:"FuseTheme"})," is the theming component of the Fuse React. It allows us to change predefined Material UI themes. It should wrap the ",Object(i.jsx)("code",{children:"FuseLayout"})," component."]}),Object(i.jsx)(r.a,{className:"mb-16",component:"p",children:Object(i.jsx)("code",{children:"src/app/App.js"})}),Object(i.jsx)(o.a,{component:"pre",className:"language-jsx",children:t(1767)}),Object(i.jsx)(r.a,{className:"text-20 mt-20 mb-10 font-700",variant:"h5",children:"Configuration"}),Object(i.jsxs)(r.a,{className:"mb-16",component:"p",children:["Please checkout",Object(i.jsx)(s.a,{className:"font-normal mx-4",to:"/documentation/theming/theme-schemes",children:"theming"}),"at documentation."]})]})}}}]);