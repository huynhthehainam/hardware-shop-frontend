(this["webpackJsonpfuse-react-app"]=this["webpackJsonpfuse-react-app"]||[]).push([[28],{1383:function(e,t,n){"use strict";n.d(t,"a",(function(){return R}));var a=n(17),i=n(168),r=n(1338),l=n(1346),o=n(1327),s=n(1350),c=n(1351),d=n(6),y=n(1),h=n(8),p=n(127),u=n(97),m=n.n(u),b=n(504),f=n(209),g=n(94),T=n(1386),j=n(50),O=n(14),S=n(1294),x=n(0),v=["children","name"];function w(e){var t=e.children,n=e.document,a=Object(j.a)();y.useEffect((function(){n.body.dir=a.direction}),[n,a.direction]);var i=y.useMemo((function(){return Object(f.a)({key:"iframe-demo-".concat(a.direction),prepend:!0,container:n.head,stylisPlugins:"rtl"===a.direction?[b.a]:[]})}),[n,a.direction]),r=y.useCallback((function(){return n.defaultView}),[n]);return Object(x.jsx)(T.a,{target:n.head,stylisPlugins:"rtl"===a.direction?[b.a]:[],children:Object(x.jsxs)(g.a,{value:i,children:[Object(x.jsx)(S.a,{styles:function(){return{html:{fontSize:"62.5%"}}}}),y.cloneElement(t,{window:r})]})})}var A=Object(O.a)("iframe")((function(e){var t=e.theme;return{backgroundColor:t.palette.background.default,flexGrow:1,height:400,border:0,boxShadow:t.shadows[1]}}));function L(e){var t,n=e.children,i=e.name,r=Object(p.a)(e,v),l="".concat(i," demo"),o=y.useRef(null),s=y.useReducer((function(){return!0}),!1),c=Object(a.a)(s,2),d=c[0],u=c[1];y.useEffect((function(){var e=o.current.contentDocument;null==e||"complete"!==e.readyState||d||u()}),[d]);var b=null===(t=o.current)||void 0===t?void 0:t.contentDocument;return Object(x.jsxs)(x.Fragment,{children:[Object(x.jsx)(A,Object(h.a)({onLoad:u,ref:o,title:l},r)),!1!==d?m.a.createPortal(Object(x.jsx)(w,{document:b,children:n}),b.body):null]})}var I=y.memo(L);function k(e){var t=Object(y.useState)(e.currentTabIndex),n=Object(a.a)(t,2),h=n[0],p=n[1],u=e.component,m=e.raw,b=e.iframe,f=e.className;return Object(x.jsxs)(l.a,{className:Object(d.default)(f,"shadow"),children:[Object(x.jsx)(r.a,{position:"static",color:"default",className:"shadow-0",children:Object(x.jsxs)(c.a,{classes:{root:"border-b-1",flexContainer:"justify-end"},value:h,onChange:function(e,t){p(t)},children:[u&&Object(x.jsx)(s.a,{classes:{root:"min-w-64"},icon:Object(x.jsx)(o.a,{children:"remove_red_eye"})}),m&&Object(x.jsx)(s.a,{classes:{root:"min-w-64"},icon:Object(x.jsx)(o.a,{children:"code"})})]})}),Object(x.jsxs)("div",{className:"flex justify-center max-w-full relative",children:[Object(x.jsx)("div",{className:0===h?"flex flex-1 max-w-full":"hidden",children:u&&(b?Object(x.jsx)(I,{children:Object(x.jsx)(u,{})}):Object(x.jsx)("div",{className:"p-24 flex flex-1 justify-center max-w-full",children:Object(x.jsx)(u,{})}))}),Object(x.jsx)("div",{className:1===h?"flex flex-1":"hidden",children:m&&Object(x.jsx)("div",{className:"flex flex-1",children:Object(x.jsx)(i.a,{component:"pre",className:"language-javascript w-full",sx:{borderRadius:"0!important"},children:m.default})})})]})]})}k.defaultProps={currentTabIndex:0};var R=k},2069:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return o}));var a=n(8),i=(n(1),n(1335)),r=n(1663),l=n(0);function o(){return Object(l.jsx)(r.a,{disablePortal:!0,id:"combo-box-demo",options:s,sx:{width:300},renderInput:function(e){return Object(l.jsx)(i.a,Object(a.a)(Object(a.a)({},e),{},{label:"Movie"}))}})}var s=[{label:"The Shawshank Redemption",year:1994},{label:"The Godfather",year:1972},{label:"The Godfather: Part II",year:1974},{label:"The Dark Knight",year:2008},{label:"12 Angry Men",year:1957},{label:"Schindler's List",year:1993},{label:"Pulp Fiction",year:1994},{label:"The Lord of the Rings: The Return of the King",year:2003},{label:"The Good, the Bad and the Ugly",year:1966},{label:"Fight Club",year:1999},{label:"The Lord of the Rings: The Fellowship of the Ring",year:2001},{label:"Star Wars: Episode V - The Empire Strikes Back",year:1980},{label:"Forrest Gump",year:1994},{label:"Inception",year:2010},{label:"The Lord of the Rings: The Two Towers",year:2002},{label:"One Flew Over the Cuckoo's Nest",year:1975},{label:"Goodfellas",year:1990},{label:"The Matrix",year:1999},{label:"Seven Samurai",year:1954},{label:"Star Wars: Episode IV - A New Hope",year:1977},{label:"City of God",year:2002},{label:"Se7en",year:1995},{label:"The Silence of the Lambs",year:1991},{label:"It's a Wonderful Life",year:1946},{label:"Life Is Beautiful",year:1997},{label:"The Usual Suspects",year:1995},{label:"L\xe9on: The Professional",year:1994},{label:"Spirited Away",year:2001},{label:"Saving Private Ryan",year:1998},{label:"Once Upon a Time in the West",year:1968},{label:"American History X",year:1998},{label:"Interstellar",year:2014},{label:"Casablanca",year:1942},{label:"City Lights",year:1931},{label:"Psycho",year:1960},{label:"The Green Mile",year:1999},{label:"The Intouchables",year:2011},{label:"Modern Times",year:1936},{label:"Raiders of the Lost Ark",year:1981},{label:"Rear Window",year:1954},{label:"The Pianist",year:2002},{label:"The Departed",year:2006},{label:"Terminator 2: Judgment Day",year:1991},{label:"Back to the Future",year:1985},{label:"Whiplash",year:2014},{label:"Gladiator",year:2e3},{label:"Memento",year:2e3},{label:"The Prestige",year:2006},{label:"The Lion King",year:1994},{label:"Apocalypse Now",year:1979},{label:"Alien",year:1979},{label:"Sunset Boulevard",year:1950},{label:"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb",year:1964},{label:"The Great Dictator",year:1940},{label:"Cinema Paradiso",year:1988},{label:"The Lives of Others",year:2006},{label:"Grave of the Fireflies",year:1988},{label:"Paths of Glory",year:1957},{label:"Django Unchained",year:2012},{label:"The Shining",year:1980},{label:"WALL\xb7E",year:2008},{label:"American Beauty",year:1999},{label:"The Dark Knight Rises",year:2012},{label:"Princess Mononoke",year:1997},{label:"Aliens",year:1986},{label:"Oldboy",year:2003},{label:"Once Upon a Time in America",year:1984},{label:"Witness for the Prosecution",year:1957},{label:"Das Boot",year:1981},{label:"Citizen Kane",year:1941},{label:"North by Northwest",year:1959},{label:"Vertigo",year:1958},{label:"Star Wars: Episode VI - Return of the Jedi",year:1983},{label:"Reservoir Dogs",year:1992},{label:"Braveheart",year:1995},{label:"M",year:1931},{label:"Requiem for a Dream",year:2e3},{label:"Am\xe9lie",year:2001},{label:"A Clockwork Orange",year:1971},{label:"Like Stars on Earth",year:2007},{label:"Taxi Driver",year:1976},{label:"Lawrence of Arabia",year:1962},{label:"Double Indemnity",year:1944},{label:"Eternal Sunshine of the Spotless Mind",year:2004},{label:"Amadeus",year:1984},{label:"To Kill a Mockingbird",year:1962},{label:"Toy Story 3",year:2010},{label:"Logan",year:2017},{label:"Full Metal Jacket",year:1987},{label:"Dangal",year:2016},{label:"The Sting",year:1973},{label:"2001: A Space Odyssey",year:1968},{label:"Singin' in the Rain",year:1952},{label:"Toy Story",year:1995},{label:"Bicycle Thieves",year:1948},{label:"The Kid",year:1921},{label:"Inglourious Basterds",year:2009},{label:"Snatch",year:2e3},{label:"3 Idiots",year:2009},{label:"Monty Python and the Holy Grail",year:1975}]},2070:function(e,t,n){"use strict";n.r(t),t.default="import * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\n\nexport default function ComboBox() {\n  return (\n    <Autocomplete\n      disablePortal\n      id=\"combo-box-demo\"\n      options={top100Films}\n      sx={{ width: 300 }}\n      renderInput={(params) => <TextField {...params} label=\"Movie\" />}\n    />\n  );\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n  { label: 'The Shawshank Redemption', year: 1994 },\n  { label: 'The Godfather', year: 1972 },\n  { label: 'The Godfather: Part II', year: 1974 },\n  { label: 'The Dark Knight', year: 2008 },\n  { label: '12 Angry Men', year: 1957 },\n  { label: \"Schindler's List\", year: 1993 },\n  { label: 'Pulp Fiction', year: 1994 },\n  {\n    label: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { label: 'The Good, the Bad and the Ugly', year: 1966 },\n  { label: 'Fight Club', year: 1999 },\n  {\n    label: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    label: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { label: 'Forrest Gump', year: 1994 },\n  { label: 'Inception', year: 2010 },\n  {\n    label: 'The Lord of the Rings: The Two Towers',\n    year: 2002,\n  },\n  { label: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { label: 'Goodfellas', year: 1990 },\n  { label: 'The Matrix', year: 1999 },\n  { label: 'Seven Samurai', year: 1954 },\n  {\n    label: 'Star Wars: Episode IV - A New Hope',\n    year: 1977,\n  },\n  { label: 'City of God', year: 2002 },\n  { label: 'Se7en', year: 1995 },\n  { label: 'The Silence of the Lambs', year: 1991 },\n  { label: \"It's a Wonderful Life\", year: 1946 },\n  { label: 'Life Is Beautiful', year: 1997 },\n  { label: 'The Usual Suspects', year: 1995 },\n  { label: 'L\xe9on: The Professional', year: 1994 },\n  { label: 'Spirited Away', year: 2001 },\n  { label: 'Saving Private Ryan', year: 1998 },\n  { label: 'Once Upon a Time in the West', year: 1968 },\n  { label: 'American History X', year: 1998 },\n  { label: 'Interstellar', year: 2014 },\n  { label: 'Casablanca', year: 1942 },\n  { label: 'City Lights', year: 1931 },\n  { label: 'Psycho', year: 1960 },\n  { label: 'The Green Mile', year: 1999 },\n  { label: 'The Intouchables', year: 2011 },\n  { label: 'Modern Times', year: 1936 },\n  { label: 'Raiders of the Lost Ark', year: 1981 },\n  { label: 'Rear Window', year: 1954 },\n  { label: 'The Pianist', year: 2002 },\n  { label: 'The Departed', year: 2006 },\n  { label: 'Terminator 2: Judgment Day', year: 1991 },\n  { label: 'Back to the Future', year: 1985 },\n  { label: 'Whiplash', year: 2014 },\n  { label: 'Gladiator', year: 2000 },\n  { label: 'Memento', year: 2000 },\n  { label: 'The Prestige', year: 2006 },\n  { label: 'The Lion King', year: 1994 },\n  { label: 'Apocalypse Now', year: 1979 },\n  { label: 'Alien', year: 1979 },\n  { label: 'Sunset Boulevard', year: 1950 },\n  {\n    label: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964,\n  },\n  { label: 'The Great Dictator', year: 1940 },\n  { label: 'Cinema Paradiso', year: 1988 },\n  { label: 'The Lives of Others', year: 2006 },\n  { label: 'Grave of the Fireflies', year: 1988 },\n  { label: 'Paths of Glory', year: 1957 },\n  { label: 'Django Unchained', year: 2012 },\n  { label: 'The Shining', year: 1980 },\n  { label: 'WALL\xb7E', year: 2008 },\n  { label: 'American Beauty', year: 1999 },\n  { label: 'The Dark Knight Rises', year: 2012 },\n  { label: 'Princess Mononoke', year: 1997 },\n  { label: 'Aliens', year: 1986 },\n  { label: 'Oldboy', year: 2003 },\n  { label: 'Once Upon a Time in America', year: 1984 },\n  { label: 'Witness for the Prosecution', year: 1957 },\n  { label: 'Das Boot', year: 1981 },\n  { label: 'Citizen Kane', year: 1941 },\n  { label: 'North by Northwest', year: 1959 },\n  { label: 'Vertigo', year: 1958 },\n  {\n    label: 'Star Wars: Episode VI - Return of the Jedi',\n    year: 1983,\n  },\n  { label: 'Reservoir Dogs', year: 1992 },\n  { label: 'Braveheart', year: 1995 },\n  { label: 'M', year: 1931 },\n  { label: 'Requiem for a Dream', year: 2000 },\n  { label: 'Am\xe9lie', year: 2001 },\n  { label: 'A Clockwork Orange', year: 1971 },\n  { label: 'Like Stars on Earth', year: 2007 },\n  { label: 'Taxi Driver', year: 1976 },\n  { label: 'Lawrence of Arabia', year: 1962 },\n  { label: 'Double Indemnity', year: 1944 },\n  {\n    label: 'Eternal Sunshine of the Spotless Mind',\n    year: 2004,\n  },\n  { label: 'Amadeus', year: 1984 },\n  { label: 'To Kill a Mockingbird', year: 1962 },\n  { label: 'Toy Story 3', year: 2010 },\n  { label: 'Logan', year: 2017 },\n  { label: 'Full Metal Jacket', year: 1987 },\n  { label: 'Dangal', year: 2016 },\n  { label: 'The Sting', year: 1973 },\n  { label: '2001: A Space Odyssey', year: 1968 },\n  { label: \"Singin' in the Rain\", year: 1952 },\n  { label: 'Toy Story', year: 1995 },\n  { label: 'Bicycle Thieves', year: 1948 },\n  { label: 'The Kid', year: 1921 },\n  { label: 'Inglourious Basterds', year: 2009 },\n  { label: 'Snatch', year: 2000 },\n  { label: '3 Idiots', year: 2009 },\n  { label: 'Monty Python and the Holy Grail', year: 1975 },\n];\n"},2071:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return d}));var a=n(8),i=n(17),r=n(1),l=n(1335),o=n(1663),s=n(1422),c=n(0);function d(){var e={options:y,getOptionLabel:function(e){return e.title}},t={options:y.map((function(e){return e.title}))},n=r.useState(null),d=Object(i.a)(n,2),h=d[0],p=d[1];return Object(c.jsxs)(s.a,{spacing:1,sx:{width:300},children:[Object(c.jsx)(o.a,Object(a.a)(Object(a.a)({},e),{},{id:"disable-close-on-select",disableCloseOnSelect:!0,renderInput:function(e){return Object(c.jsx)(l.a,Object(a.a)(Object(a.a)({},e),{},{label:"disableCloseOnSelect",variant:"standard"}))}})),Object(c.jsx)(o.a,Object(a.a)(Object(a.a)({},e),{},{id:"clear-on-escape",clearOnEscape:!0,renderInput:function(e){return Object(c.jsx)(l.a,Object(a.a)(Object(a.a)({},e),{},{label:"clearOnEscape",variant:"standard"}))}})),Object(c.jsx)(o.a,Object(a.a)(Object(a.a)({},e),{},{id:"disable-clearable",disableClearable:!0,renderInput:function(e){return Object(c.jsx)(l.a,Object(a.a)(Object(a.a)({},e),{},{label:"disableClearable",variant:"standard"}))}})),Object(c.jsx)(o.a,Object(a.a)(Object(a.a)({},e),{},{id:"include-input-in-list",includeInputInList:!0,renderInput:function(e){return Object(c.jsx)(l.a,Object(a.a)(Object(a.a)({},e),{},{label:"includeInputInList",variant:"standard"}))}})),Object(c.jsx)(o.a,Object(a.a)(Object(a.a)({},t),{},{id:"flat-demo",renderInput:function(e){return Object(c.jsx)(l.a,Object(a.a)(Object(a.a)({},e),{},{label:"flat",variant:"standard"}))}})),Object(c.jsx)(o.a,Object(a.a)(Object(a.a)({},e),{},{id:"controlled-demo",value:h,onChange:function(e,t){p(t)},renderInput:function(e){return Object(c.jsx)(l.a,Object(a.a)(Object(a.a)({},e),{},{label:"controlled",variant:"standard"}))}})),Object(c.jsx)(o.a,Object(a.a)(Object(a.a)({},e),{},{id:"auto-complete",autoComplete:!0,includeInputInList:!0,renderInput:function(e){return Object(c.jsx)(l.a,Object(a.a)(Object(a.a)({},e),{},{label:"autoComplete",variant:"standard"}))}})),Object(c.jsx)(o.a,Object(a.a)(Object(a.a)({},e),{},{id:"disable-list-wrap",disableListWrap:!0,renderInput:function(e){return Object(c.jsx)(l.a,Object(a.a)(Object(a.a)({},e),{},{label:"disableListWrap",variant:"standard"}))}})),Object(c.jsx)(o.a,Object(a.a)(Object(a.a)({},e),{},{id:"open-on-focus",openOnFocus:!0,renderInput:function(e){return Object(c.jsx)(l.a,Object(a.a)(Object(a.a)({},e),{},{label:"openOnFocus",variant:"standard"}))}})),Object(c.jsx)(o.a,Object(a.a)(Object(a.a)({},e),{},{id:"auto-highlight",autoHighlight:!0,renderInput:function(e){return Object(c.jsx)(l.a,Object(a.a)(Object(a.a)({},e),{},{label:"autoHighlight",variant:"standard"}))}})),Object(c.jsx)(o.a,Object(a.a)(Object(a.a)({},e),{},{id:"auto-select",autoSelect:!0,renderInput:function(e){return Object(c.jsx)(l.a,Object(a.a)(Object(a.a)({},e),{},{label:"autoSelect",variant:"standard"}))}})),Object(c.jsx)(o.a,Object(a.a)(Object(a.a)({},e),{},{id:"disabled",disabled:!0,renderInput:function(e){return Object(c.jsx)(l.a,Object(a.a)(Object(a.a)({},e),{},{label:"disabled",variant:"standard"}))}})),Object(c.jsx)(o.a,Object(a.a)(Object(a.a)({},e),{},{id:"disable-portal",disablePortal:!0,renderInput:function(e){return Object(c.jsx)(l.a,Object(a.a)(Object(a.a)({},e),{},{label:"disablePortal",variant:"standard"}))}})),Object(c.jsx)(o.a,Object(a.a)(Object(a.a)({},e),{},{id:"blur-on-select",blurOnSelect:!0,renderInput:function(e){return Object(c.jsx)(l.a,Object(a.a)(Object(a.a)({},e),{},{label:"blurOnSelect",variant:"standard"}))}})),Object(c.jsx)(o.a,Object(a.a)(Object(a.a)({},e),{},{id:"clear-on-blur",clearOnBlur:!0,renderInput:function(e){return Object(c.jsx)(l.a,Object(a.a)(Object(a.a)({},e),{},{label:"clearOnBlur",variant:"standard"}))}})),Object(c.jsx)(o.a,Object(a.a)(Object(a.a)({},e),{},{id:"select-on-focus",selectOnFocus:!0,renderInput:function(e){return Object(c.jsx)(l.a,Object(a.a)(Object(a.a)({},e),{},{label:"selectOnFocus",variant:"standard"}))}}))]})}var y=[{title:"The Shawshank Redemption",year:1994},{title:"The Godfather",year:1972},{title:"The Godfather: Part II",year:1974},{title:"The Dark Knight",year:2008},{title:"12 Angry Men",year:1957},{title:"Schindler's List",year:1993},{title:"Pulp Fiction",year:1994},{title:"The Lord of the Rings: The Return of the King",year:2003},{title:"The Good, the Bad and the Ugly",year:1966},{title:"Fight Club",year:1999},{title:"The Lord of the Rings: The Fellowship of the Ring",year:2001},{title:"Star Wars: Episode V - The Empire Strikes Back",year:1980},{title:"Forrest Gump",year:1994},{title:"Inception",year:2010},{title:"The Lord of the Rings: The Two Towers",year:2002},{title:"One Flew Over the Cuckoo's Nest",year:1975},{title:"Goodfellas",year:1990},{title:"The Matrix",year:1999},{title:"Seven Samurai",year:1954},{title:"Star Wars: Episode IV - A New Hope",year:1977},{title:"City of God",year:2002},{title:"Se7en",year:1995},{title:"The Silence of the Lambs",year:1991},{title:"It's a Wonderful Life",year:1946},{title:"Life Is Beautiful",year:1997},{title:"The Usual Suspects",year:1995},{title:"L\xe9on: The Professional",year:1994},{title:"Spirited Away",year:2001},{title:"Saving Private Ryan",year:1998},{title:"Once Upon a Time in the West",year:1968},{title:"American History X",year:1998},{title:"Interstellar",year:2014},{title:"Casablanca",year:1942},{title:"City Lights",year:1931},{title:"Psycho",year:1960},{title:"The Green Mile",year:1999},{title:"The Intouchables",year:2011},{title:"Modern Times",year:1936},{title:"Raiders of the Lost Ark",year:1981},{title:"Rear Window",year:1954},{title:"The Pianist",year:2002},{title:"The Departed",year:2006},{title:"Terminator 2: Judgment Day",year:1991},{title:"Back to the Future",year:1985},{title:"Whiplash",year:2014},{title:"Gladiator",year:2e3},{title:"Memento",year:2e3},{title:"The Prestige",year:2006},{title:"The Lion King",year:1994},{title:"Apocalypse Now",year:1979},{title:"Alien",year:1979},{title:"Sunset Boulevard",year:1950},{title:"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb",year:1964},{title:"The Great Dictator",year:1940},{title:"Cinema Paradiso",year:1988},{title:"The Lives of Others",year:2006},{title:"Grave of the Fireflies",year:1988},{title:"Paths of Glory",year:1957},{title:"Django Unchained",year:2012},{title:"The Shining",year:1980},{title:"WALL\xb7E",year:2008},{title:"American Beauty",year:1999},{title:"The Dark Knight Rises",year:2012},{title:"Princess Mononoke",year:1997},{title:"Aliens",year:1986},{title:"Oldboy",year:2003},{title:"Once Upon a Time in America",year:1984},{title:"Witness for the Prosecution",year:1957},{title:"Das Boot",year:1981},{title:"Citizen Kane",year:1941},{title:"North by Northwest",year:1959},{title:"Vertigo",year:1958},{title:"Star Wars: Episode VI - Return of the Jedi",year:1983},{title:"Reservoir Dogs",year:1992},{title:"Braveheart",year:1995},{title:"M",year:1931},{title:"Requiem for a Dream",year:2e3},{title:"Am\xe9lie",year:2001},{title:"A Clockwork Orange",year:1971},{title:"Like Stars on Earth",year:2007},{title:"Taxi Driver",year:1976},{title:"Lawrence of Arabia",year:1962},{title:"Double Indemnity",year:1944},{title:"Eternal Sunshine of the Spotless Mind",year:2004},{title:"Amadeus",year:1984},{title:"To Kill a Mockingbird",year:1962},{title:"Toy Story 3",year:2010},{title:"Logan",year:2017},{title:"Full Metal Jacket",year:1987},{title:"Dangal",year:2016},{title:"The Sting",year:1973},{title:"2001: A Space Odyssey",year:1968},{title:"Singin' in the Rain",year:1952},{title:"Toy Story",year:1995},{title:"Bicycle Thieves",year:1948},{title:"The Kid",year:1921},{title:"Inglourious Basterds",year:2009},{title:"Snatch",year:2e3},{title:"3 Idiots",year:2009},{title:"Monty Python and the Holy Grail",year:1975}]},2072:function(e,t,n){"use strict";n.r(t),t.default="import * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport Stack from '@mui/material/Stack';\n\nexport default function Playground() {\n  const defaultProps = {\n    options: top100Films,\n    getOptionLabel: (option) => option.title,\n  };\n\n  const flatProps = {\n    options: top100Films.map((option) => option.title),\n  };\n\n  const [value, setValue] = React.useState(null);\n\n  return (\n    <Stack spacing={1} sx={{ width: 300 }}>\n      <Autocomplete\n        {...defaultProps}\n        id=\"disable-close-on-select\"\n        disableCloseOnSelect\n        renderInput={(params) => (\n          <TextField {...params} label=\"disableCloseOnSelect\" variant=\"standard\" />\n        )}\n      />\n      <Autocomplete\n        {...defaultProps}\n        id=\"clear-on-escape\"\n        clearOnEscape\n        renderInput={(params) => (\n          <TextField {...params} label=\"clearOnEscape\" variant=\"standard\" />\n        )}\n      />\n      <Autocomplete\n        {...defaultProps}\n        id=\"disable-clearable\"\n        disableClearable\n        renderInput={(params) => (\n          <TextField {...params} label=\"disableClearable\" variant=\"standard\" />\n        )}\n      />\n      <Autocomplete\n        {...defaultProps}\n        id=\"include-input-in-list\"\n        includeInputInList\n        renderInput={(params) => (\n          <TextField {...params} label=\"includeInputInList\" variant=\"standard\" />\n        )}\n      />\n      <Autocomplete\n        {...flatProps}\n        id=\"flat-demo\"\n        renderInput={(params) => (\n          <TextField {...params} label=\"flat\" variant=\"standard\" />\n        )}\n      />\n      <Autocomplete\n        {...defaultProps}\n        id=\"controlled-demo\"\n        value={value}\n        onChange={(event, newValue) => {\n          setValue(newValue);\n        }}\n        renderInput={(params) => (\n          <TextField {...params} label=\"controlled\" variant=\"standard\" />\n        )}\n      />\n      <Autocomplete\n        {...defaultProps}\n        id=\"auto-complete\"\n        autoComplete\n        includeInputInList\n        renderInput={(params) => (\n          <TextField {...params} label=\"autoComplete\" variant=\"standard\" />\n        )}\n      />\n      <Autocomplete\n        {...defaultProps}\n        id=\"disable-list-wrap\"\n        disableListWrap\n        renderInput={(params) => (\n          <TextField {...params} label=\"disableListWrap\" variant=\"standard\" />\n        )}\n      />\n      <Autocomplete\n        {...defaultProps}\n        id=\"open-on-focus\"\n        openOnFocus\n        renderInput={(params) => (\n          <TextField {...params} label=\"openOnFocus\" variant=\"standard\" />\n        )}\n      />\n      <Autocomplete\n        {...defaultProps}\n        id=\"auto-highlight\"\n        autoHighlight\n        renderInput={(params) => (\n          <TextField {...params} label=\"autoHighlight\" variant=\"standard\" />\n        )}\n      />\n      <Autocomplete\n        {...defaultProps}\n        id=\"auto-select\"\n        autoSelect\n        renderInput={(params) => (\n          <TextField {...params} label=\"autoSelect\" variant=\"standard\" />\n        )}\n      />\n      <Autocomplete\n        {...defaultProps}\n        id=\"disabled\"\n        disabled\n        renderInput={(params) => (\n          <TextField {...params} label=\"disabled\" variant=\"standard\" />\n        )}\n      />\n      <Autocomplete\n        {...defaultProps}\n        id=\"disable-portal\"\n        disablePortal\n        renderInput={(params) => (\n          <TextField {...params} label=\"disablePortal\" variant=\"standard\" />\n        )}\n      />\n      <Autocomplete\n        {...defaultProps}\n        id=\"blur-on-select\"\n        blurOnSelect\n        renderInput={(params) => (\n          <TextField {...params} label=\"blurOnSelect\" variant=\"standard\" />\n        )}\n      />\n      <Autocomplete\n        {...defaultProps}\n        id=\"clear-on-blur\"\n        clearOnBlur\n        renderInput={(params) => (\n          <TextField {...params} label=\"clearOnBlur\" variant=\"standard\" />\n        )}\n      />\n      <Autocomplete\n        {...defaultProps}\n        id=\"select-on-focus\"\n        selectOnFocus\n        renderInput={(params) => (\n          <TextField {...params} label=\"selectOnFocus\" variant=\"standard\" />\n        )}\n      />\n    </Stack>\n  );\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n  { title: 'The Shawshank Redemption', year: 1994 },\n  { title: 'The Godfather', year: 1972 },\n  { title: 'The Godfather: Part II', year: 1974 },\n  { title: 'The Dark Knight', year: 2008 },\n  { title: '12 Angry Men', year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n  { title: 'Pulp Fiction', year: 1994 },\n  {\n    title: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\n  { title: 'Fight Club', year: 1999 },\n  {\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { title: 'Forrest Gump', year: 1994 },\n  { title: 'Inception', year: 2010 },\n  {\n    title: 'The Lord of the Rings: The Two Towers',\n    year: 2002,\n  },\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { title: 'Goodfellas', year: 1990 },\n  { title: 'The Matrix', year: 1999 },\n  { title: 'Seven Samurai', year: 1954 },\n  {\n    title: 'Star Wars: Episode IV - A New Hope',\n    year: 1977,\n  },\n  { title: 'City of God', year: 2002 },\n  { title: 'Se7en', year: 1995 },\n  { title: 'The Silence of the Lambs', year: 1991 },\n  { title: \"It's a Wonderful Life\", year: 1946 },\n  { title: 'Life Is Beautiful', year: 1997 },\n  { title: 'The Usual Suspects', year: 1995 },\n  { title: 'L\xe9on: The Professional', year: 1994 },\n  { title: 'Spirited Away', year: 2001 },\n  { title: 'Saving Private Ryan', year: 1998 },\n  { title: 'Once Upon a Time in the West', year: 1968 },\n  { title: 'American History X', year: 1998 },\n  { title: 'Interstellar', year: 2014 },\n  { title: 'Casablanca', year: 1942 },\n  { title: 'City Lights', year: 1931 },\n  { title: 'Psycho', year: 1960 },\n  { title: 'The Green Mile', year: 1999 },\n  { title: 'The Intouchables', year: 2011 },\n  { title: 'Modern Times', year: 1936 },\n  { title: 'Raiders of the Lost Ark', year: 1981 },\n  { title: 'Rear Window', year: 1954 },\n  { title: 'The Pianist', year: 2002 },\n  { title: 'The Departed', year: 2006 },\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\n  { title: 'Back to the Future', year: 1985 },\n  { title: 'Whiplash', year: 2014 },\n  { title: 'Gladiator', year: 2000 },\n  { title: 'Memento', year: 2000 },\n  { title: 'The Prestige', year: 2006 },\n  { title: 'The Lion King', year: 1994 },\n  { title: 'Apocalypse Now', year: 1979 },\n  { title: 'Alien', year: 1979 },\n  { title: 'Sunset Boulevard', year: 1950 },\n  {\n    title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964,\n  },\n  { title: 'The Great Dictator', year: 1940 },\n  { title: 'Cinema Paradiso', year: 1988 },\n  { title: 'The Lives of Others', year: 2006 },\n  { title: 'Grave of the Fireflies', year: 1988 },\n  { title: 'Paths of Glory', year: 1957 },\n  { title: 'Django Unchained', year: 2012 },\n  { title: 'The Shining', year: 1980 },\n  { title: 'WALL\xb7E', year: 2008 },\n  { title: 'American Beauty', year: 1999 },\n  { title: 'The Dark Knight Rises', year: 2012 },\n  { title: 'Princess Mononoke', year: 1997 },\n  { title: 'Aliens', year: 1986 },\n  { title: 'Oldboy', year: 2003 },\n  { title: 'Once Upon a Time in America', year: 1984 },\n  { title: 'Witness for the Prosecution', year: 1957 },\n  { title: 'Das Boot', year: 1981 },\n  { title: 'Citizen Kane', year: 1941 },\n  { title: 'North by Northwest', year: 1959 },\n  { title: 'Vertigo', year: 1958 },\n  {\n    title: 'Star Wars: Episode VI - Return of the Jedi',\n    year: 1983,\n  },\n  { title: 'Reservoir Dogs', year: 1992 },\n  { title: 'Braveheart', year: 1995 },\n  { title: 'M', year: 1931 },\n  { title: 'Requiem for a Dream', year: 2000 },\n  { title: 'Am\xe9lie', year: 2001 },\n  { title: 'A Clockwork Orange', year: 1971 },\n  { title: 'Like Stars on Earth', year: 2007 },\n  { title: 'Taxi Driver', year: 1976 },\n  { title: 'Lawrence of Arabia', year: 1962 },\n  { title: 'Double Indemnity', year: 1944 },\n  {\n    title: 'Eternal Sunshine of the Spotless Mind',\n    year: 2004,\n  },\n  { title: 'Amadeus', year: 1984 },\n  { title: 'To Kill a Mockingbird', year: 1962 },\n  { title: 'Toy Story 3', year: 2010 },\n  { title: 'Logan', year: 2017 },\n  { title: 'Full Metal Jacket', year: 1987 },\n  { title: 'Dangal', year: 2016 },\n  { title: 'The Sting', year: 1973 },\n  { title: '2001: A Space Odyssey', year: 1968 },\n  { title: \"Singin' in the Rain\", year: 1952 },\n  { title: 'Toy Story', year: 1995 },\n  { title: 'Bicycle Thieves', year: 1948 },\n  { title: 'The Kid', year: 1921 },\n  { title: 'Inglourious Basterds', year: 2009 },\n  { title: 'Snatch', year: 2000 },\n  { title: '3 Idiots', year: 2009 },\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\n];\n"},2073:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return s}));var a=n(8),i=(n(1),n(1389)),r=n(1335),l=n(1663),o=n(0);function s(){return Object(o.jsx)(l.a,{id:"country-select-demo",sx:{width:300},options:c,autoHighlight:!0,getOptionLabel:function(e){return e.label},renderOption:function(e,t){return Object(o.jsxs)(i.a,Object(a.a)(Object(a.a)({component:"li",sx:{"& > img":{mr:2,flexShrink:0}}},e),{},{children:[Object(o.jsx)("img",{loading:"lazy",width:"20",src:"https://flagcdn.com/w20/".concat(t.code.toLowerCase(),".png"),srcSet:"https://flagcdn.com/w40/".concat(t.code.toLowerCase(),".png 2x"),alt:""}),t.label," (",t.code,") +",t.phone]}))},renderInput:function(e){return Object(o.jsx)(r.a,Object(a.a)(Object(a.a)({},e),{},{label:"Choose a country",inputProps:Object(a.a)(Object(a.a)({},e.inputProps),{},{autoComplete:"new-password"})}))}})}var c=[{code:"AD",label:"Andorra",phone:"376"},{code:"AE",label:"United Arab Emirates",phone:"971"},{code:"AF",label:"Afghanistan",phone:"93"},{code:"AG",label:"Antigua and Barbuda",phone:"1-268"},{code:"AI",label:"Anguilla",phone:"1-264"},{code:"AL",label:"Albania",phone:"355"},{code:"AM",label:"Armenia",phone:"374"},{code:"AO",label:"Angola",phone:"244"},{code:"AQ",label:"Antarctica",phone:"672"},{code:"AR",label:"Argentina",phone:"54"},{code:"AS",label:"American Samoa",phone:"1-684"},{code:"AT",label:"Austria",phone:"43"},{code:"AU",label:"Australia",phone:"61",suggested:!0},{code:"AW",label:"Aruba",phone:"297"},{code:"AX",label:"Alland Islands",phone:"358"},{code:"AZ",label:"Azerbaijan",phone:"994"},{code:"BA",label:"Bosnia and Herzegovina",phone:"387"},{code:"BB",label:"Barbados",phone:"1-246"},{code:"BD",label:"Bangladesh",phone:"880"},{code:"BE",label:"Belgium",phone:"32"},{code:"BF",label:"Burkina Faso",phone:"226"},{code:"BG",label:"Bulgaria",phone:"359"},{code:"BH",label:"Bahrain",phone:"973"},{code:"BI",label:"Burundi",phone:"257"},{code:"BJ",label:"Benin",phone:"229"},{code:"BL",label:"Saint Barthelemy",phone:"590"},{code:"BM",label:"Bermuda",phone:"1-441"},{code:"BN",label:"Brunei Darussalam",phone:"673"},{code:"BO",label:"Bolivia",phone:"591"},{code:"BR",label:"Brazil",phone:"55"},{code:"BS",label:"Bahamas",phone:"1-242"},{code:"BT",label:"Bhutan",phone:"975"},{code:"BV",label:"Bouvet Island",phone:"47"},{code:"BW",label:"Botswana",phone:"267"},{code:"BY",label:"Belarus",phone:"375"},{code:"BZ",label:"Belize",phone:"501"},{code:"CA",label:"Canada",phone:"1",suggested:!0},{code:"CC",label:"Cocos (Keeling) Islands",phone:"61"},{code:"CD",label:"Congo, Democratic Republic of the",phone:"243"},{code:"CF",label:"Central African Republic",phone:"236"},{code:"CG",label:"Congo, Republic of the",phone:"242"},{code:"CH",label:"Switzerland",phone:"41"},{code:"CI",label:"Cote d'Ivoire",phone:"225"},{code:"CK",label:"Cook Islands",phone:"682"},{code:"CL",label:"Chile",phone:"56"},{code:"CM",label:"Cameroon",phone:"237"},{code:"CN",label:"China",phone:"86"},{code:"CO",label:"Colombia",phone:"57"},{code:"CR",label:"Costa Rica",phone:"506"},{code:"CU",label:"Cuba",phone:"53"},{code:"CV",label:"Cape Verde",phone:"238"},{code:"CW",label:"Curacao",phone:"599"},{code:"CX",label:"Christmas Island",phone:"61"},{code:"CY",label:"Cyprus",phone:"357"},{code:"CZ",label:"Czech Republic",phone:"420"},{code:"DE",label:"Germany",phone:"49",suggested:!0},{code:"DJ",label:"Djibouti",phone:"253"},{code:"DK",label:"Denmark",phone:"45"},{code:"DM",label:"Dominica",phone:"1-767"},{code:"DO",label:"Dominican Republic",phone:"1-809"},{code:"DZ",label:"Algeria",phone:"213"},{code:"EC",label:"Ecuador",phone:"593"},{code:"EE",label:"Estonia",phone:"372"},{code:"EG",label:"Egypt",phone:"20"},{code:"EH",label:"Western Sahara",phone:"212"},{code:"ER",label:"Eritrea",phone:"291"},{code:"ES",label:"Spain",phone:"34"},{code:"ET",label:"Ethiopia",phone:"251"},{code:"FI",label:"Finland",phone:"358"},{code:"FJ",label:"Fiji",phone:"679"},{code:"FK",label:"Falkland Islands (Malvinas)",phone:"500"},{code:"FM",label:"Micronesia, Federated States of",phone:"691"},{code:"FO",label:"Faroe Islands",phone:"298"},{code:"FR",label:"France",phone:"33",suggested:!0},{code:"GA",label:"Gabon",phone:"241"},{code:"GB",label:"United Kingdom",phone:"44"},{code:"GD",label:"Grenada",phone:"1-473"},{code:"GE",label:"Georgia",phone:"995"},{code:"GF",label:"French Guiana",phone:"594"},{code:"GG",label:"Guernsey",phone:"44"},{code:"GH",label:"Ghana",phone:"233"},{code:"GI",label:"Gibraltar",phone:"350"},{code:"GL",label:"Greenland",phone:"299"},{code:"GM",label:"Gambia",phone:"220"},{code:"GN",label:"Guinea",phone:"224"},{code:"GP",label:"Guadeloupe",phone:"590"},{code:"GQ",label:"Equatorial Guinea",phone:"240"},{code:"GR",label:"Greece",phone:"30"},{code:"GS",label:"South Georgia and the South Sandwich Islands",phone:"500"},{code:"GT",label:"Guatemala",phone:"502"},{code:"GU",label:"Guam",phone:"1-671"},{code:"GW",label:"Guinea-Bissau",phone:"245"},{code:"GY",label:"Guyana",phone:"592"},{code:"HK",label:"Hong Kong",phone:"852"},{code:"HM",label:"Heard Island and McDonald Islands",phone:"672"},{code:"HN",label:"Honduras",phone:"504"},{code:"HR",label:"Croatia",phone:"385"},{code:"HT",label:"Haiti",phone:"509"},{code:"HU",label:"Hungary",phone:"36"},{code:"ID",label:"Indonesia",phone:"62"},{code:"IE",label:"Ireland",phone:"353"},{code:"IL",label:"Israel",phone:"972"},{code:"IM",label:"Isle of Man",phone:"44"},{code:"IN",label:"India",phone:"91"},{code:"IO",label:"British Indian Ocean Territory",phone:"246"},{code:"IQ",label:"Iraq",phone:"964"},{code:"IR",label:"Iran, Islamic Republic of",phone:"98"},{code:"IS",label:"Iceland",phone:"354"},{code:"IT",label:"Italy",phone:"39"},{code:"JE",label:"Jersey",phone:"44"},{code:"JM",label:"Jamaica",phone:"1-876"},{code:"JO",label:"Jordan",phone:"962"},{code:"JP",label:"Japan",phone:"81",suggested:!0},{code:"KE",label:"Kenya",phone:"254"},{code:"KG",label:"Kyrgyzstan",phone:"996"},{code:"KH",label:"Cambodia",phone:"855"},{code:"KI",label:"Kiribati",phone:"686"},{code:"KM",label:"Comoros",phone:"269"},{code:"KN",label:"Saint Kitts and Nevis",phone:"1-869"},{code:"KP",label:"Korea, Democratic People's Republic of",phone:"850"},{code:"KR",label:"Korea, Republic of",phone:"82"},{code:"KW",label:"Kuwait",phone:"965"},{code:"KY",label:"Cayman Islands",phone:"1-345"},{code:"KZ",label:"Kazakhstan",phone:"7"},{code:"LA",label:"Lao People's Democratic Republic",phone:"856"},{code:"LB",label:"Lebanon",phone:"961"},{code:"LC",label:"Saint Lucia",phone:"1-758"},{code:"LI",label:"Liechtenstein",phone:"423"},{code:"LK",label:"Sri Lanka",phone:"94"},{code:"LR",label:"Liberia",phone:"231"},{code:"LS",label:"Lesotho",phone:"266"},{code:"LT",label:"Lithuania",phone:"370"},{code:"LU",label:"Luxembourg",phone:"352"},{code:"LV",label:"Latvia",phone:"371"},{code:"LY",label:"Libya",phone:"218"},{code:"MA",label:"Morocco",phone:"212"},{code:"MC",label:"Monaco",phone:"377"},{code:"MD",label:"Moldova, Republic of",phone:"373"},{code:"ME",label:"Montenegro",phone:"382"},{code:"MF",label:"Saint Martin (French part)",phone:"590"},{code:"MG",label:"Madagascar",phone:"261"},{code:"MH",label:"Marshall Islands",phone:"692"},{code:"MK",label:"Macedonia, the Former Yugoslav Republic of",phone:"389"},{code:"ML",label:"Mali",phone:"223"},{code:"MM",label:"Myanmar",phone:"95"},{code:"MN",label:"Mongolia",phone:"976"},{code:"MO",label:"Macao",phone:"853"},{code:"MP",label:"Northern Mariana Islands",phone:"1-670"},{code:"MQ",label:"Martinique",phone:"596"},{code:"MR",label:"Mauritania",phone:"222"},{code:"MS",label:"Montserrat",phone:"1-664"},{code:"MT",label:"Malta",phone:"356"},{code:"MU",label:"Mauritius",phone:"230"},{code:"MV",label:"Maldives",phone:"960"},{code:"MW",label:"Malawi",phone:"265"},{code:"MX",label:"Mexico",phone:"52"},{code:"MY",label:"Malaysia",phone:"60"},{code:"MZ",label:"Mozambique",phone:"258"},{code:"NA",label:"Namibia",phone:"264"},{code:"NC",label:"New Caledonia",phone:"687"},{code:"NE",label:"Niger",phone:"227"},{code:"NF",label:"Norfolk Island",phone:"672"},{code:"NG",label:"Nigeria",phone:"234"},{code:"NI",label:"Nicaragua",phone:"505"},{code:"NL",label:"Netherlands",phone:"31"},{code:"NO",label:"Norway",phone:"47"},{code:"NP",label:"Nepal",phone:"977"},{code:"NR",label:"Nauru",phone:"674"},{code:"NU",label:"Niue",phone:"683"},{code:"NZ",label:"New Zealand",phone:"64"},{code:"OM",label:"Oman",phone:"968"},{code:"PA",label:"Panama",phone:"507"},{code:"PE",label:"Peru",phone:"51"},{code:"PF",label:"French Polynesia",phone:"689"},{code:"PG",label:"Papua New Guinea",phone:"675"},{code:"PH",label:"Philippines",phone:"63"},{code:"PK",label:"Pakistan",phone:"92"},{code:"PL",label:"Poland",phone:"48"},{code:"PM",label:"Saint Pierre and Miquelon",phone:"508"},{code:"PN",label:"Pitcairn",phone:"870"},{code:"PR",label:"Puerto Rico",phone:"1"},{code:"PS",label:"Palestine, State of",phone:"970"},{code:"PT",label:"Portugal",phone:"351"},{code:"PW",label:"Palau",phone:"680"},{code:"PY",label:"Paraguay",phone:"595"},{code:"QA",label:"Qatar",phone:"974"},{code:"RE",label:"Reunion",phone:"262"},{code:"RO",label:"Romania",phone:"40"},{code:"RS",label:"Serbia",phone:"381"},{code:"RU",label:"Russian Federation",phone:"7"},{code:"RW",label:"Rwanda",phone:"250"},{code:"SA",label:"Saudi Arabia",phone:"966"},{code:"SB",label:"Solomon Islands",phone:"677"},{code:"SC",label:"Seychelles",phone:"248"},{code:"SD",label:"Sudan",phone:"249"},{code:"SE",label:"Sweden",phone:"46"},{code:"SG",label:"Singapore",phone:"65"},{code:"SH",label:"Saint Helena",phone:"290"},{code:"SI",label:"Slovenia",phone:"386"},{code:"SJ",label:"Svalbard and Jan Mayen",phone:"47"},{code:"SK",label:"Slovakia",phone:"421"},{code:"SL",label:"Sierra Leone",phone:"232"},{code:"SM",label:"San Marino",phone:"378"},{code:"SN",label:"Senegal",phone:"221"},{code:"SO",label:"Somalia",phone:"252"},{code:"SR",label:"Suriname",phone:"597"},{code:"SS",label:"South Sudan",phone:"211"},{code:"ST",label:"Sao Tome and Principe",phone:"239"},{code:"SV",label:"El Salvador",phone:"503"},{code:"SX",label:"Sint Maarten (Dutch part)",phone:"1-721"},{code:"SY",label:"Syrian Arab Republic",phone:"963"},{code:"SZ",label:"Swaziland",phone:"268"},{code:"TC",label:"Turks and Caicos Islands",phone:"1-649"},{code:"TD",label:"Chad",phone:"235"},{code:"TF",label:"French Southern Territories",phone:"262"},{code:"TG",label:"Togo",phone:"228"},{code:"TH",label:"Thailand",phone:"66"},{code:"TJ",label:"Tajikistan",phone:"992"},{code:"TK",label:"Tokelau",phone:"690"},{code:"TL",label:"Timor-Leste",phone:"670"},{code:"TM",label:"Turkmenistan",phone:"993"},{code:"TN",label:"Tunisia",phone:"216"},{code:"TO",label:"Tonga",phone:"676"},{code:"TR",label:"Turkey",phone:"90"},{code:"TT",label:"Trinidad and Tobago",phone:"1-868"},{code:"TV",label:"Tuvalu",phone:"688"},{code:"TW",label:"Taiwan, Province of China",phone:"886"},{code:"TZ",label:"United Republic of Tanzania",phone:"255"},{code:"UA",label:"Ukraine",phone:"380"},{code:"UG",label:"Uganda",phone:"256"},{code:"US",label:"United States",phone:"1",suggested:!0},{code:"UY",label:"Uruguay",phone:"598"},{code:"UZ",label:"Uzbekistan",phone:"998"},{code:"VA",label:"Holy See (Vatican City State)",phone:"379"},{code:"VC",label:"Saint Vincent and the Grenadines",phone:"1-784"},{code:"VE",label:"Venezuela",phone:"58"},{code:"VG",label:"British Virgin Islands",phone:"1-284"},{code:"VI",label:"US Virgin Islands",phone:"1-340"},{code:"VN",label:"Vietnam",phone:"84"},{code:"VU",label:"Vanuatu",phone:"678"},{code:"WF",label:"Wallis and Futuna",phone:"681"},{code:"WS",label:"Samoa",phone:"685"},{code:"XK",label:"Kosovo",phone:"383"},{code:"YE",label:"Yemen",phone:"967"},{code:"YT",label:"Mayotte",phone:"262"},{code:"ZA",label:"South Africa",phone:"27"},{code:"ZM",label:"Zambia",phone:"260"},{code:"ZW",label:"Zimbabwe",phone:"263"}]},2074:function(e,t,n){"use strict";n.r(t),t.default="import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\n\nexport default function CountrySelect() {\n  return (\n    <Autocomplete\n      id=\"country-select-demo\"\n      sx={{ width: 300 }}\n      options={countries}\n      autoHighlight\n      getOptionLabel={(option) => option.label}\n      renderOption={(props, option) => (\n        <Box component=\"li\" sx={{ '& > img': { mr: 2, flexShrink: 0 } }} {...props}>\n          <img\n            loading=\"lazy\"\n            width=\"20\"\n            src={`https://flagcdn.com/w20/${option.code.toLowerCase()}.png`}\n            srcSet={`https://flagcdn.com/w40/${option.code.toLowerCase()}.png 2x`}\n            alt=\"\"\n          />\n          {option.label} ({option.code}) +{option.phone}\n        </Box>\n      )}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label=\"Choose a country\"\n          inputProps={{\n            ...params.inputProps,\n            autoComplete: 'new-password', // disable autocomplete and autofill\n          }}\n        />\n      )}\n    />\n  );\n}\n\n// From https://bitbucket.org/atlassian/atlaskit-mk-2/raw/4ad0e56649c3e6c973e226b7efaeb28cb240ccb0/packages/core/select/src/data/countries.js\nconst countries = [\n  { code: 'AD', label: 'Andorra', phone: '376' },\n  {\n    code: 'AE',\n    label: 'United Arab Emirates',\n    phone: '971',\n  },\n  { code: 'AF', label: 'Afghanistan', phone: '93' },\n  {\n    code: 'AG',\n    label: 'Antigua and Barbuda',\n    phone: '1-268',\n  },\n  { code: 'AI', label: 'Anguilla', phone: '1-264' },\n  { code: 'AL', label: 'Albania', phone: '355' },\n  { code: 'AM', label: 'Armenia', phone: '374' },\n  { code: 'AO', label: 'Angola', phone: '244' },\n  { code: 'AQ', label: 'Antarctica', phone: '672' },\n  { code: 'AR', label: 'Argentina', phone: '54' },\n  { code: 'AS', label: 'American Samoa', phone: '1-684' },\n  { code: 'AT', label: 'Austria', phone: '43' },\n  {\n    code: 'AU',\n    label: 'Australia',\n    phone: '61',\n    suggested: true,\n  },\n  { code: 'AW', label: 'Aruba', phone: '297' },\n  { code: 'AX', label: 'Alland Islands', phone: '358' },\n  { code: 'AZ', label: 'Azerbaijan', phone: '994' },\n  {\n    code: 'BA',\n    label: 'Bosnia and Herzegovina',\n    phone: '387',\n  },\n  { code: 'BB', label: 'Barbados', phone: '1-246' },\n  { code: 'BD', label: 'Bangladesh', phone: '880' },\n  { code: 'BE', label: 'Belgium', phone: '32' },\n  { code: 'BF', label: 'Burkina Faso', phone: '226' },\n  { code: 'BG', label: 'Bulgaria', phone: '359' },\n  { code: 'BH', label: 'Bahrain', phone: '973' },\n  { code: 'BI', label: 'Burundi', phone: '257' },\n  { code: 'BJ', label: 'Benin', phone: '229' },\n  { code: 'BL', label: 'Saint Barthelemy', phone: '590' },\n  { code: 'BM', label: 'Bermuda', phone: '1-441' },\n  { code: 'BN', label: 'Brunei Darussalam', phone: '673' },\n  { code: 'BO', label: 'Bolivia', phone: '591' },\n  { code: 'BR', label: 'Brazil', phone: '55' },\n  { code: 'BS', label: 'Bahamas', phone: '1-242' },\n  { code: 'BT', label: 'Bhutan', phone: '975' },\n  { code: 'BV', label: 'Bouvet Island', phone: '47' },\n  { code: 'BW', label: 'Botswana', phone: '267' },\n  { code: 'BY', label: 'Belarus', phone: '375' },\n  { code: 'BZ', label: 'Belize', phone: '501' },\n  {\n    code: 'CA',\n    label: 'Canada',\n    phone: '1',\n    suggested: true,\n  },\n  {\n    code: 'CC',\n    label: 'Cocos (Keeling) Islands',\n    phone: '61',\n  },\n  {\n    code: 'CD',\n    label: 'Congo, Democratic Republic of the',\n    phone: '243',\n  },\n  {\n    code: 'CF',\n    label: 'Central African Republic',\n    phone: '236',\n  },\n  {\n    code: 'CG',\n    label: 'Congo, Republic of the',\n    phone: '242',\n  },\n  { code: 'CH', label: 'Switzerland', phone: '41' },\n  { code: 'CI', label: \"Cote d'Ivoire\", phone: '225' },\n  { code: 'CK', label: 'Cook Islands', phone: '682' },\n  { code: 'CL', label: 'Chile', phone: '56' },\n  { code: 'CM', label: 'Cameroon', phone: '237' },\n  { code: 'CN', label: 'China', phone: '86' },\n  { code: 'CO', label: 'Colombia', phone: '57' },\n  { code: 'CR', label: 'Costa Rica', phone: '506' },\n  { code: 'CU', label: 'Cuba', phone: '53' },\n  { code: 'CV', label: 'Cape Verde', phone: '238' },\n  { code: 'CW', label: 'Curacao', phone: '599' },\n  { code: 'CX', label: 'Christmas Island', phone: '61' },\n  { code: 'CY', label: 'Cyprus', phone: '357' },\n  { code: 'CZ', label: 'Czech Republic', phone: '420' },\n  {\n    code: 'DE',\n    label: 'Germany',\n    phone: '49',\n    suggested: true,\n  },\n  { code: 'DJ', label: 'Djibouti', phone: '253' },\n  { code: 'DK', label: 'Denmark', phone: '45' },\n  { code: 'DM', label: 'Dominica', phone: '1-767' },\n  {\n    code: 'DO',\n    label: 'Dominican Republic',\n    phone: '1-809',\n  },\n  { code: 'DZ', label: 'Algeria', phone: '213' },\n  { code: 'EC', label: 'Ecuador', phone: '593' },\n  { code: 'EE', label: 'Estonia', phone: '372' },\n  { code: 'EG', label: 'Egypt', phone: '20' },\n  { code: 'EH', label: 'Western Sahara', phone: '212' },\n  { code: 'ER', label: 'Eritrea', phone: '291' },\n  { code: 'ES', label: 'Spain', phone: '34' },\n  { code: 'ET', label: 'Ethiopia', phone: '251' },\n  { code: 'FI', label: 'Finland', phone: '358' },\n  { code: 'FJ', label: 'Fiji', phone: '679' },\n  {\n    code: 'FK',\n    label: 'Falkland Islands (Malvinas)',\n    phone: '500',\n  },\n  {\n    code: 'FM',\n    label: 'Micronesia, Federated States of',\n    phone: '691',\n  },\n  { code: 'FO', label: 'Faroe Islands', phone: '298' },\n  {\n    code: 'FR',\n    label: 'France',\n    phone: '33',\n    suggested: true,\n  },\n  { code: 'GA', label: 'Gabon', phone: '241' },\n  { code: 'GB', label: 'United Kingdom', phone: '44' },\n  { code: 'GD', label: 'Grenada', phone: '1-473' },\n  { code: 'GE', label: 'Georgia', phone: '995' },\n  { code: 'GF', label: 'French Guiana', phone: '594' },\n  { code: 'GG', label: 'Guernsey', phone: '44' },\n  { code: 'GH', label: 'Ghana', phone: '233' },\n  { code: 'GI', label: 'Gibraltar', phone: '350' },\n  { code: 'GL', label: 'Greenland', phone: '299' },\n  { code: 'GM', label: 'Gambia', phone: '220' },\n  { code: 'GN', label: 'Guinea', phone: '224' },\n  { code: 'GP', label: 'Guadeloupe', phone: '590' },\n  { code: 'GQ', label: 'Equatorial Guinea', phone: '240' },\n  { code: 'GR', label: 'Greece', phone: '30' },\n  {\n    code: 'GS',\n    label: 'South Georgia and the South Sandwich Islands',\n    phone: '500',\n  },\n  { code: 'GT', label: 'Guatemala', phone: '502' },\n  { code: 'GU', label: 'Guam', phone: '1-671' },\n  { code: 'GW', label: 'Guinea-Bissau', phone: '245' },\n  { code: 'GY', label: 'Guyana', phone: '592' },\n  { code: 'HK', label: 'Hong Kong', phone: '852' },\n  {\n    code: 'HM',\n    label: 'Heard Island and McDonald Islands',\n    phone: '672',\n  },\n  { code: 'HN', label: 'Honduras', phone: '504' },\n  { code: 'HR', label: 'Croatia', phone: '385' },\n  { code: 'HT', label: 'Haiti', phone: '509' },\n  { code: 'HU', label: 'Hungary', phone: '36' },\n  { code: 'ID', label: 'Indonesia', phone: '62' },\n  { code: 'IE', label: 'Ireland', phone: '353' },\n  { code: 'IL', label: 'Israel', phone: '972' },\n  { code: 'IM', label: 'Isle of Man', phone: '44' },\n  { code: 'IN', label: 'India', phone: '91' },\n  {\n    code: 'IO',\n    label: 'British Indian Ocean Territory',\n    phone: '246',\n  },\n  { code: 'IQ', label: 'Iraq', phone: '964' },\n  {\n    code: 'IR',\n    label: 'Iran, Islamic Republic of',\n    phone: '98',\n  },\n  { code: 'IS', label: 'Iceland', phone: '354' },\n  { code: 'IT', label: 'Italy', phone: '39' },\n  { code: 'JE', label: 'Jersey', phone: '44' },\n  { code: 'JM', label: 'Jamaica', phone: '1-876' },\n  { code: 'JO', label: 'Jordan', phone: '962' },\n  {\n    code: 'JP',\n    label: 'Japan',\n    phone: '81',\n    suggested: true,\n  },\n  { code: 'KE', label: 'Kenya', phone: '254' },\n  { code: 'KG', label: 'Kyrgyzstan', phone: '996' },\n  { code: 'KH', label: 'Cambodia', phone: '855' },\n  { code: 'KI', label: 'Kiribati', phone: '686' },\n  { code: 'KM', label: 'Comoros', phone: '269' },\n  {\n    code: 'KN',\n    label: 'Saint Kitts and Nevis',\n    phone: '1-869',\n  },\n  {\n    code: 'KP',\n    label: \"Korea, Democratic People's Republic of\",\n    phone: '850',\n  },\n  { code: 'KR', label: 'Korea, Republic of', phone: '82' },\n  { code: 'KW', label: 'Kuwait', phone: '965' },\n  { code: 'KY', label: 'Cayman Islands', phone: '1-345' },\n  { code: 'KZ', label: 'Kazakhstan', phone: '7' },\n  {\n    code: 'LA',\n    label: \"Lao People's Democratic Republic\",\n    phone: '856',\n  },\n  { code: 'LB', label: 'Lebanon', phone: '961' },\n  { code: 'LC', label: 'Saint Lucia', phone: '1-758' },\n  { code: 'LI', label: 'Liechtenstein', phone: '423' },\n  { code: 'LK', label: 'Sri Lanka', phone: '94' },\n  { code: 'LR', label: 'Liberia', phone: '231' },\n  { code: 'LS', label: 'Lesotho', phone: '266' },\n  { code: 'LT', label: 'Lithuania', phone: '370' },\n  { code: 'LU', label: 'Luxembourg', phone: '352' },\n  { code: 'LV', label: 'Latvia', phone: '371' },\n  { code: 'LY', label: 'Libya', phone: '218' },\n  { code: 'MA', label: 'Morocco', phone: '212' },\n  { code: 'MC', label: 'Monaco', phone: '377' },\n  {\n    code: 'MD',\n    label: 'Moldova, Republic of',\n    phone: '373',\n  },\n  { code: 'ME', label: 'Montenegro', phone: '382' },\n  {\n    code: 'MF',\n    label: 'Saint Martin (French part)',\n    phone: '590',\n  },\n  { code: 'MG', label: 'Madagascar', phone: '261' },\n  { code: 'MH', label: 'Marshall Islands', phone: '692' },\n  {\n    code: 'MK',\n    label: 'Macedonia, the Former Yugoslav Republic of',\n    phone: '389',\n  },\n  { code: 'ML', label: 'Mali', phone: '223' },\n  { code: 'MM', label: 'Myanmar', phone: '95' },\n  { code: 'MN', label: 'Mongolia', phone: '976' },\n  { code: 'MO', label: 'Macao', phone: '853' },\n  {\n    code: 'MP',\n    label: 'Northern Mariana Islands',\n    phone: '1-670',\n  },\n  { code: 'MQ', label: 'Martinique', phone: '596' },\n  { code: 'MR', label: 'Mauritania', phone: '222' },\n  { code: 'MS', label: 'Montserrat', phone: '1-664' },\n  { code: 'MT', label: 'Malta', phone: '356' },\n  { code: 'MU', label: 'Mauritius', phone: '230' },\n  { code: 'MV', label: 'Maldives', phone: '960' },\n  { code: 'MW', label: 'Malawi', phone: '265' },\n  { code: 'MX', label: 'Mexico', phone: '52' },\n  { code: 'MY', label: 'Malaysia', phone: '60' },\n  { code: 'MZ', label: 'Mozambique', phone: '258' },\n  { code: 'NA', label: 'Namibia', phone: '264' },\n  { code: 'NC', label: 'New Caledonia', phone: '687' },\n  { code: 'NE', label: 'Niger', phone: '227' },\n  { code: 'NF', label: 'Norfolk Island', phone: '672' },\n  { code: 'NG', label: 'Nigeria', phone: '234' },\n  { code: 'NI', label: 'Nicaragua', phone: '505' },\n  { code: 'NL', label: 'Netherlands', phone: '31' },\n  { code: 'NO', label: 'Norway', phone: '47' },\n  { code: 'NP', label: 'Nepal', phone: '977' },\n  { code: 'NR', label: 'Nauru', phone: '674' },\n  { code: 'NU', label: 'Niue', phone: '683' },\n  { code: 'NZ', label: 'New Zealand', phone: '64' },\n  { code: 'OM', label: 'Oman', phone: '968' },\n  { code: 'PA', label: 'Panama', phone: '507' },\n  { code: 'PE', label: 'Peru', phone: '51' },\n  { code: 'PF', label: 'French Polynesia', phone: '689' },\n  { code: 'PG', label: 'Papua New Guinea', phone: '675' },\n  { code: 'PH', label: 'Philippines', phone: '63' },\n  { code: 'PK', label: 'Pakistan', phone: '92' },\n  { code: 'PL', label: 'Poland', phone: '48' },\n  {\n    code: 'PM',\n    label: 'Saint Pierre and Miquelon',\n    phone: '508',\n  },\n  { code: 'PN', label: 'Pitcairn', phone: '870' },\n  { code: 'PR', label: 'Puerto Rico', phone: '1' },\n  {\n    code: 'PS',\n    label: 'Palestine, State of',\n    phone: '970',\n  },\n  { code: 'PT', label: 'Portugal', phone: '351' },\n  { code: 'PW', label: 'Palau', phone: '680' },\n  { code: 'PY', label: 'Paraguay', phone: '595' },\n  { code: 'QA', label: 'Qatar', phone: '974' },\n  { code: 'RE', label: 'Reunion', phone: '262' },\n  { code: 'RO', label: 'Romania', phone: '40' },\n  { code: 'RS', label: 'Serbia', phone: '381' },\n  { code: 'RU', label: 'Russian Federation', phone: '7' },\n  { code: 'RW', label: 'Rwanda', phone: '250' },\n  { code: 'SA', label: 'Saudi Arabia', phone: '966' },\n  { code: 'SB', label: 'Solomon Islands', phone: '677' },\n  { code: 'SC', label: 'Seychelles', phone: '248' },\n  { code: 'SD', label: 'Sudan', phone: '249' },\n  { code: 'SE', label: 'Sweden', phone: '46' },\n  { code: 'SG', label: 'Singapore', phone: '65' },\n  { code: 'SH', label: 'Saint Helena', phone: '290' },\n  { code: 'SI', label: 'Slovenia', phone: '386' },\n  {\n    code: 'SJ',\n    label: 'Svalbard and Jan Mayen',\n    phone: '47',\n  },\n  { code: 'SK', label: 'Slovakia', phone: '421' },\n  { code: 'SL', label: 'Sierra Leone', phone: '232' },\n  { code: 'SM', label: 'San Marino', phone: '378' },\n  { code: 'SN', label: 'Senegal', phone: '221' },\n  { code: 'SO', label: 'Somalia', phone: '252' },\n  { code: 'SR', label: 'Suriname', phone: '597' },\n  { code: 'SS', label: 'South Sudan', phone: '211' },\n  {\n    code: 'ST',\n    label: 'Sao Tome and Principe',\n    phone: '239',\n  },\n  { code: 'SV', label: 'El Salvador', phone: '503' },\n  {\n    code: 'SX',\n    label: 'Sint Maarten (Dutch part)',\n    phone: '1-721',\n  },\n  {\n    code: 'SY',\n    label: 'Syrian Arab Republic',\n    phone: '963',\n  },\n  { code: 'SZ', label: 'Swaziland', phone: '268' },\n  {\n    code: 'TC',\n    label: 'Turks and Caicos Islands',\n    phone: '1-649',\n  },\n  { code: 'TD', label: 'Chad', phone: '235' },\n  {\n    code: 'TF',\n    label: 'French Southern Territories',\n    phone: '262',\n  },\n  { code: 'TG', label: 'Togo', phone: '228' },\n  { code: 'TH', label: 'Thailand', phone: '66' },\n  { code: 'TJ', label: 'Tajikistan', phone: '992' },\n  { code: 'TK', label: 'Tokelau', phone: '690' },\n  { code: 'TL', label: 'Timor-Leste', phone: '670' },\n  { code: 'TM', label: 'Turkmenistan', phone: '993' },\n  { code: 'TN', label: 'Tunisia', phone: '216' },\n  { code: 'TO', label: 'Tonga', phone: '676' },\n  { code: 'TR', label: 'Turkey', phone: '90' },\n  {\n    code: 'TT',\n    label: 'Trinidad and Tobago',\n    phone: '1-868',\n  },\n  { code: 'TV', label: 'Tuvalu', phone: '688' },\n  {\n    code: 'TW',\n    label: 'Taiwan, Province of China',\n    phone: '886',\n  },\n  {\n    code: 'TZ',\n    label: 'United Republic of Tanzania',\n    phone: '255',\n  },\n  { code: 'UA', label: 'Ukraine', phone: '380' },\n  { code: 'UG', label: 'Uganda', phone: '256' },\n  {\n    code: 'US',\n    label: 'United States',\n    phone: '1',\n    suggested: true,\n  },\n  { code: 'UY', label: 'Uruguay', phone: '598' },\n  { code: 'UZ', label: 'Uzbekistan', phone: '998' },\n  {\n    code: 'VA',\n    label: 'Holy See (Vatican City State)',\n    phone: '379',\n  },\n  {\n    code: 'VC',\n    label: 'Saint Vincent and the Grenadines',\n    phone: '1-784',\n  },\n  { code: 'VE', label: 'Venezuela', phone: '58' },\n  {\n    code: 'VG',\n    label: 'British Virgin Islands',\n    phone: '1-284',\n  },\n  {\n    code: 'VI',\n    label: 'US Virgin Islands',\n    phone: '1-340',\n  },\n  { code: 'VN', label: 'Vietnam', phone: '84' },\n  { code: 'VU', label: 'Vanuatu', phone: '678' },\n  { code: 'WF', label: 'Wallis and Futuna', phone: '681' },\n  { code: 'WS', label: 'Samoa', phone: '685' },\n  { code: 'XK', label: 'Kosovo', phone: '383' },\n  { code: 'YE', label: 'Yemen', phone: '967' },\n  { code: 'YT', label: 'Mayotte', phone: '262' },\n  { code: 'ZA', label: 'South Africa', phone: '27' },\n  { code: 'ZM', label: 'Zambia', phone: '260' },\n  { code: 'ZW', label: 'Zimbabwe', phone: '263' },\n];\n"},2075:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return d}));var a=n(8),i=n(17),r=n(1),l=n(1335),o=n(1663),s=n(0),c=["Option 1","Option 2"];function d(){var e=r.useState(c[0]),t=Object(i.a)(e,2),n=t[0],d=t[1],y=r.useState(""),h=Object(i.a)(y,2),p=h[0],u=h[1];return Object(s.jsxs)("div",{children:[Object(s.jsx)("div",{children:"value: ".concat(null!==n?"'".concat(n,"'"):"null")}),Object(s.jsx)("div",{children:"inputValue: '".concat(p,"'")}),Object(s.jsx)("br",{}),Object(s.jsx)(o.a,{value:n,onChange:function(e,t){d(t)},inputValue:p,onInputChange:function(e,t){u(t)},id:"controllable-states-demo",options:c,sx:{width:300},renderInput:function(e){return Object(s.jsx)(l.a,Object(a.a)(Object(a.a)({},e),{},{label:"Controllable"}))}})]})}},2076:function(e,t,n){"use strict";n.r(t),t.default="import * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\n\nconst options = ['Option 1', 'Option 2'];\n\nexport default function ControllableStates() {\n  const [value, setValue] = React.useState(options[0]);\n  const [inputValue, setInputValue] = React.useState('');\n\n  return (\n    <div>\n      <div>{`value: ${value !== null ? `'${value}'` : 'null'}`}</div>\n      <div>{`inputValue: '${inputValue}'`}</div>\n      <br />\n      <Autocomplete\n        value={value}\n        onChange={(event, newValue) => {\n          setValue(newValue);\n        }}\n        inputValue={inputValue}\n        onInputChange={(event, newInputValue) => {\n          setInputValue(newInputValue);\n        }}\n        id=\"controllable-states-demo\"\n        options={options}\n        sx={{ width: 300 }}\n        renderInput={(params) => <TextField {...params} label=\"Controllable\" />}\n      />\n    </div>\n  );\n}\n"},2077:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return s}));var a=n(8),i=(n(1),n(1335)),r=n(1422),l=n(1663),o=n(0);function s(){return Object(o.jsxs)(r.a,{spacing:2,sx:{width:300},children:[Object(o.jsx)(l.a,{id:"free-solo-demo",freeSolo:!0,options:c.map((function(e){return e.title})),renderInput:function(e){return Object(o.jsx)(i.a,Object(a.a)(Object(a.a)({},e),{},{label:"freeSolo"}))}}),Object(o.jsx)(l.a,{freeSolo:!0,id:"free-solo-2-demo",disableClearable:!0,options:c.map((function(e){return e.title})),renderInput:function(e){return Object(o.jsx)(i.a,Object(a.a)(Object(a.a)({},e),{},{label:"Search input",InputProps:Object(a.a)(Object(a.a)({},e.InputProps),{},{type:"search"})}))}})]})}var c=[{title:"The Shawshank Redemption",year:1994},{title:"The Godfather",year:1972},{title:"The Godfather: Part II",year:1974},{title:"The Dark Knight",year:2008},{title:"12 Angry Men",year:1957},{title:"Schindler's List",year:1993},{title:"Pulp Fiction",year:1994},{title:"The Lord of the Rings: The Return of the King",year:2003},{title:"The Good, the Bad and the Ugly",year:1966},{title:"Fight Club",year:1999},{title:"The Lord of the Rings: The Fellowship of the Ring",year:2001},{title:"Star Wars: Episode V - The Empire Strikes Back",year:1980},{title:"Forrest Gump",year:1994},{title:"Inception",year:2010},{title:"The Lord of the Rings: The Two Towers",year:2002},{title:"One Flew Over the Cuckoo's Nest",year:1975},{title:"Goodfellas",year:1990},{title:"The Matrix",year:1999},{title:"Seven Samurai",year:1954},{title:"Star Wars: Episode IV - A New Hope",year:1977},{title:"City of God",year:2002},{title:"Se7en",year:1995},{title:"The Silence of the Lambs",year:1991},{title:"It's a Wonderful Life",year:1946},{title:"Life Is Beautiful",year:1997},{title:"The Usual Suspects",year:1995},{title:"L\xe9on: The Professional",year:1994},{title:"Spirited Away",year:2001},{title:"Saving Private Ryan",year:1998},{title:"Once Upon a Time in the West",year:1968},{title:"American History X",year:1998},{title:"Interstellar",year:2014},{title:"Casablanca",year:1942},{title:"City Lights",year:1931},{title:"Psycho",year:1960},{title:"The Green Mile",year:1999},{title:"The Intouchables",year:2011},{title:"Modern Times",year:1936},{title:"Raiders of the Lost Ark",year:1981},{title:"Rear Window",year:1954},{title:"The Pianist",year:2002},{title:"The Departed",year:2006},{title:"Terminator 2: Judgment Day",year:1991},{title:"Back to the Future",year:1985},{title:"Whiplash",year:2014},{title:"Gladiator",year:2e3},{title:"Memento",year:2e3},{title:"The Prestige",year:2006},{title:"The Lion King",year:1994},{title:"Apocalypse Now",year:1979},{title:"Alien",year:1979},{title:"Sunset Boulevard",year:1950},{title:"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb",year:1964},{title:"The Great Dictator",year:1940},{title:"Cinema Paradiso",year:1988},{title:"The Lives of Others",year:2006},{title:"Grave of the Fireflies",year:1988},{title:"Paths of Glory",year:1957},{title:"Django Unchained",year:2012},{title:"The Shining",year:1980},{title:"WALL\xb7E",year:2008},{title:"American Beauty",year:1999},{title:"The Dark Knight Rises",year:2012},{title:"Princess Mononoke",year:1997},{title:"Aliens",year:1986},{title:"Oldboy",year:2003},{title:"Once Upon a Time in America",year:1984},{title:"Witness for the Prosecution",year:1957},{title:"Das Boot",year:1981},{title:"Citizen Kane",year:1941},{title:"North by Northwest",year:1959},{title:"Vertigo",year:1958},{title:"Star Wars: Episode VI - Return of the Jedi",year:1983},{title:"Reservoir Dogs",year:1992},{title:"Braveheart",year:1995},{title:"M",year:1931},{title:"Requiem for a Dream",year:2e3},{title:"Am\xe9lie",year:2001},{title:"A Clockwork Orange",year:1971},{title:"Like Stars on Earth",year:2007},{title:"Taxi Driver",year:1976},{title:"Lawrence of Arabia",year:1962},{title:"Double Indemnity",year:1944},{title:"Eternal Sunshine of the Spotless Mind",year:2004},{title:"Amadeus",year:1984},{title:"To Kill a Mockingbird",year:1962},{title:"Toy Story 3",year:2010},{title:"Logan",year:2017},{title:"Full Metal Jacket",year:1987},{title:"Dangal",year:2016},{title:"The Sting",year:1973},{title:"2001: A Space Odyssey",year:1968},{title:"Singin' in the Rain",year:1952},{title:"Toy Story",year:1995},{title:"Bicycle Thieves",year:1948},{title:"The Kid",year:1921},{title:"Inglourious Basterds",year:2009},{title:"Snatch",year:2e3},{title:"3 Idiots",year:2009},{title:"Monty Python and the Holy Grail",year:1975}]},2078:function(e,t,n){"use strict";n.r(t),t.default="import * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport Stack from '@mui/material/Stack';\nimport Autocomplete from '@mui/material/Autocomplete';\n\nexport default function FreeSolo() {\n  return (\n    <Stack spacing={2} sx={{ width: 300 }}>\n      <Autocomplete\n        id=\"free-solo-demo\"\n        freeSolo\n        options={top100Films.map((option) => option.title)}\n        renderInput={(params) => <TextField {...params} label=\"freeSolo\" />}\n      />\n      <Autocomplete\n        freeSolo\n        id=\"free-solo-2-demo\"\n        disableClearable\n        options={top100Films.map((option) => option.title)}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            label=\"Search input\"\n            InputProps={{\n              ...params.InputProps,\n              type: 'search',\n            }}\n          />\n        )}\n      />\n    </Stack>\n  );\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n  { title: 'The Shawshank Redemption', year: 1994 },\n  { title: 'The Godfather', year: 1972 },\n  { title: 'The Godfather: Part II', year: 1974 },\n  { title: 'The Dark Knight', year: 2008 },\n  { title: '12 Angry Men', year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n  { title: 'Pulp Fiction', year: 1994 },\n  {\n    title: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\n  { title: 'Fight Club', year: 1999 },\n  {\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { title: 'Forrest Gump', year: 1994 },\n  { title: 'Inception', year: 2010 },\n  {\n    title: 'The Lord of the Rings: The Two Towers',\n    year: 2002,\n  },\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { title: 'Goodfellas', year: 1990 },\n  { title: 'The Matrix', year: 1999 },\n  { title: 'Seven Samurai', year: 1954 },\n  {\n    title: 'Star Wars: Episode IV - A New Hope',\n    year: 1977,\n  },\n  { title: 'City of God', year: 2002 },\n  { title: 'Se7en', year: 1995 },\n  { title: 'The Silence of the Lambs', year: 1991 },\n  { title: \"It's a Wonderful Life\", year: 1946 },\n  { title: 'Life Is Beautiful', year: 1997 },\n  { title: 'The Usual Suspects', year: 1995 },\n  { title: 'L\xe9on: The Professional', year: 1994 },\n  { title: 'Spirited Away', year: 2001 },\n  { title: 'Saving Private Ryan', year: 1998 },\n  { title: 'Once Upon a Time in the West', year: 1968 },\n  { title: 'American History X', year: 1998 },\n  { title: 'Interstellar', year: 2014 },\n  { title: 'Casablanca', year: 1942 },\n  { title: 'City Lights', year: 1931 },\n  { title: 'Psycho', year: 1960 },\n  { title: 'The Green Mile', year: 1999 },\n  { title: 'The Intouchables', year: 2011 },\n  { title: 'Modern Times', year: 1936 },\n  { title: 'Raiders of the Lost Ark', year: 1981 },\n  { title: 'Rear Window', year: 1954 },\n  { title: 'The Pianist', year: 2002 },\n  { title: 'The Departed', year: 2006 },\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\n  { title: 'Back to the Future', year: 1985 },\n  { title: 'Whiplash', year: 2014 },\n  { title: 'Gladiator', year: 2000 },\n  { title: 'Memento', year: 2000 },\n  { title: 'The Prestige', year: 2006 },\n  { title: 'The Lion King', year: 1994 },\n  { title: 'Apocalypse Now', year: 1979 },\n  { title: 'Alien', year: 1979 },\n  { title: 'Sunset Boulevard', year: 1950 },\n  {\n    title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964,\n  },\n  { title: 'The Great Dictator', year: 1940 },\n  { title: 'Cinema Paradiso', year: 1988 },\n  { title: 'The Lives of Others', year: 2006 },\n  { title: 'Grave of the Fireflies', year: 1988 },\n  { title: 'Paths of Glory', year: 1957 },\n  { title: 'Django Unchained', year: 2012 },\n  { title: 'The Shining', year: 1980 },\n  { title: 'WALL\xb7E', year: 2008 },\n  { title: 'American Beauty', year: 1999 },\n  { title: 'The Dark Knight Rises', year: 2012 },\n  { title: 'Princess Mononoke', year: 1997 },\n  { title: 'Aliens', year: 1986 },\n  { title: 'Oldboy', year: 2003 },\n  { title: 'Once Upon a Time in America', year: 1984 },\n  { title: 'Witness for the Prosecution', year: 1957 },\n  { title: 'Das Boot', year: 1981 },\n  { title: 'Citizen Kane', year: 1941 },\n  { title: 'North by Northwest', year: 1959 },\n  { title: 'Vertigo', year: 1958 },\n  {\n    title: 'Star Wars: Episode VI - Return of the Jedi',\n    year: 1983,\n  },\n  { title: 'Reservoir Dogs', year: 1992 },\n  { title: 'Braveheart', year: 1995 },\n  { title: 'M', year: 1931 },\n  { title: 'Requiem for a Dream', year: 2000 },\n  { title: 'Am\xe9lie', year: 2001 },\n  { title: 'A Clockwork Orange', year: 1971 },\n  { title: 'Like Stars on Earth', year: 2007 },\n  { title: 'Taxi Driver', year: 1976 },\n  { title: 'Lawrence of Arabia', year: 1962 },\n  { title: 'Double Indemnity', year: 1944 },\n  {\n    title: 'Eternal Sunshine of the Spotless Mind',\n    year: 2004,\n  },\n  { title: 'Amadeus', year: 1984 },\n  { title: 'To Kill a Mockingbird', year: 1962 },\n  { title: 'Toy Story 3', year: 2010 },\n  { title: 'Logan', year: 2017 },\n  { title: 'Full Metal Jacket', year: 1987 },\n  { title: 'Dangal', year: 2016 },\n  { title: 'The Sting', year: 1973 },\n  { title: '2001: A Space Odyssey', year: 1968 },\n  { title: \"Singin' in the Rain\", year: 1952 },\n  { title: 'Toy Story', year: 1995 },\n  { title: 'Bicycle Thieves', year: 1948 },\n  { title: 'The Kid', year: 1921 },\n  { title: 'Inglourious Basterds', year: 2009 },\n  { title: 'Snatch', year: 2000 },\n  { title: '3 Idiots', year: 2009 },\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\n];\n"},2079:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return y}));var a=n(8),i=n(17),r=n(1),l=n(1335),o=n(1541),s=n(1663),c=n(0),d=Object(o.a)();function y(){var e=r.useState(null),t=Object(i.a)(e,2),n=t[0],o=t[1];return Object(c.jsx)(s.a,{value:n,onChange:function(e,t){"string"===typeof t?o({title:t}):t&&t.inputValue?o({title:t.inputValue}):o(t)},filterOptions:function(e,t){var n=d(e,t),a=t.inputValue,i=e.some((function(e){return a===e.title}));return""===a||i||n.push({inputValue:a,title:'Add "'.concat(a,'"')}),n},selectOnFocus:!0,clearOnBlur:!0,handleHomeEndKeys:!0,id:"free-solo-with-text-demo",options:h,getOptionLabel:function(e){return"string"===typeof e?e:e.inputValue?e.inputValue:e.title},renderOption:function(e,t){return Object(c.jsx)("li",Object(a.a)(Object(a.a)({},e),{},{children:t.title}))},sx:{width:300},freeSolo:!0,renderInput:function(e){return Object(c.jsx)(l.a,Object(a.a)(Object(a.a)({},e),{},{label:"Free solo with text demo"}))}})}var h=[{title:"The Shawshank Redemption",year:1994},{title:"The Godfather",year:1972},{title:"The Godfather: Part II",year:1974},{title:"The Dark Knight",year:2008},{title:"12 Angry Men",year:1957},{title:"Schindler's List",year:1993},{title:"Pulp Fiction",year:1994},{title:"The Lord of the Rings: The Return of the King",year:2003},{title:"The Good, the Bad and the Ugly",year:1966},{title:"Fight Club",year:1999},{title:"The Lord of the Rings: The Fellowship of the Ring",year:2001},{title:"Star Wars: Episode V - The Empire Strikes Back",year:1980},{title:"Forrest Gump",year:1994},{title:"Inception",year:2010},{title:"The Lord of the Rings: The Two Towers",year:2002},{title:"One Flew Over the Cuckoo's Nest",year:1975},{title:"Goodfellas",year:1990},{title:"The Matrix",year:1999},{title:"Seven Samurai",year:1954},{title:"Star Wars: Episode IV - A New Hope",year:1977},{title:"City of God",year:2002},{title:"Se7en",year:1995},{title:"The Silence of the Lambs",year:1991},{title:"It's a Wonderful Life",year:1946},{title:"Life Is Beautiful",year:1997},{title:"The Usual Suspects",year:1995},{title:"L\xe9on: The Professional",year:1994},{title:"Spirited Away",year:2001},{title:"Saving Private Ryan",year:1998},{title:"Once Upon a Time in the West",year:1968},{title:"American History X",year:1998},{title:"Interstellar",year:2014},{title:"Casablanca",year:1942},{title:"City Lights",year:1931},{title:"Psycho",year:1960},{title:"The Green Mile",year:1999},{title:"The Intouchables",year:2011},{title:"Modern Times",year:1936},{title:"Raiders of the Lost Ark",year:1981},{title:"Rear Window",year:1954},{title:"The Pianist",year:2002},{title:"The Departed",year:2006},{title:"Terminator 2: Judgment Day",year:1991},{title:"Back to the Future",year:1985},{title:"Whiplash",year:2014},{title:"Gladiator",year:2e3},{title:"Memento",year:2e3},{title:"The Prestige",year:2006},{title:"The Lion King",year:1994},{title:"Apocalypse Now",year:1979},{title:"Alien",year:1979},{title:"Sunset Boulevard",year:1950},{title:"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb",year:1964},{title:"The Great Dictator",year:1940},{title:"Cinema Paradiso",year:1988},{title:"The Lives of Others",year:2006},{title:"Grave of the Fireflies",year:1988},{title:"Paths of Glory",year:1957},{title:"Django Unchained",year:2012},{title:"The Shining",year:1980},{title:"WALL\xb7E",year:2008},{title:"American Beauty",year:1999},{title:"The Dark Knight Rises",year:2012},{title:"Princess Mononoke",year:1997},{title:"Aliens",year:1986},{title:"Oldboy",year:2003},{title:"Once Upon a Time in America",year:1984},{title:"Witness for the Prosecution",year:1957},{title:"Das Boot",year:1981},{title:"Citizen Kane",year:1941},{title:"North by Northwest",year:1959},{title:"Vertigo",year:1958},{title:"Star Wars: Episode VI - Return of the Jedi",year:1983},{title:"Reservoir Dogs",year:1992},{title:"Braveheart",year:1995},{title:"M",year:1931},{title:"Requiem for a Dream",year:2e3},{title:"Am\xe9lie",year:2001},{title:"A Clockwork Orange",year:1971},{title:"Like Stars on Earth",year:2007},{title:"Taxi Driver",year:1976},{title:"Lawrence of Arabia",year:1962},{title:"Double Indemnity",year:1944},{title:"Eternal Sunshine of the Spotless Mind",year:2004},{title:"Amadeus",year:1984},{title:"To Kill a Mockingbird",year:1962},{title:"Toy Story 3",year:2010},{title:"Logan",year:2017},{title:"Full Metal Jacket",year:1987},{title:"Dangal",year:2016},{title:"The Sting",year:1973},{title:"2001: A Space Odyssey",year:1968},{title:"Singin' in the Rain",year:1952},{title:"Toy Story",year:1995},{title:"Bicycle Thieves",year:1948},{title:"The Kid",year:1921},{title:"Inglourious Basterds",year:2009},{title:"Snatch",year:2e3},{title:"3 Idiots",year:2009},{title:"Monty Python and the Holy Grail",year:1975}]},2080:function(e,t,n){"use strict";n.r(t),t.default="import * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\n\nconst filter = createFilterOptions();\n\nexport default function FreeSoloCreateOption() {\n  const [value, setValue] = React.useState(null);\n\n  return (\n    <Autocomplete\n      value={value}\n      onChange={(event, newValue) => {\n        if (typeof newValue === 'string') {\n          setValue({\n            title: newValue,\n          });\n        } else if (newValue && newValue.inputValue) {\n          // Create a new value from the user input\n          setValue({\n            title: newValue.inputValue,\n          });\n        } else {\n          setValue(newValue);\n        }\n      }}\n      filterOptions={(options, params) => {\n        const filtered = filter(options, params);\n\n        const { inputValue } = params;\n        // Suggest the creation of a new value\n        const isExisting = options.some((option) => inputValue === option.title);\n        if (inputValue !== '' && !isExisting) {\n          filtered.push({\n            inputValue,\n            title: `Add \"${inputValue}\"`,\n          });\n        }\n\n        return filtered;\n      }}\n      selectOnFocus\n      clearOnBlur\n      handleHomeEndKeys\n      id=\"free-solo-with-text-demo\"\n      options={top100Films}\n      getOptionLabel={(option) => {\n        // Value selected with enter, right from the input\n        if (typeof option === 'string') {\n          return option;\n        }\n        // Add \"xxx\" option created dynamically\n        if (option.inputValue) {\n          return option.inputValue;\n        }\n        // Regular option\n        return option.title;\n      }}\n      renderOption={(props, option) => <li {...props}>{option.title}</li>}\n      sx={{ width: 300 }}\n      freeSolo\n      renderInput={(params) => (\n        <TextField {...params} label=\"Free solo with text demo\" />\n      )}\n    />\n  );\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n  { title: 'The Shawshank Redemption', year: 1994 },\n  { title: 'The Godfather', year: 1972 },\n  { title: 'The Godfather: Part II', year: 1974 },\n  { title: 'The Dark Knight', year: 2008 },\n  { title: '12 Angry Men', year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n  { title: 'Pulp Fiction', year: 1994 },\n  {\n    title: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\n  { title: 'Fight Club', year: 1999 },\n  {\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { title: 'Forrest Gump', year: 1994 },\n  { title: 'Inception', year: 2010 },\n  {\n    title: 'The Lord of the Rings: The Two Towers',\n    year: 2002,\n  },\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { title: 'Goodfellas', year: 1990 },\n  { title: 'The Matrix', year: 1999 },\n  { title: 'Seven Samurai', year: 1954 },\n  {\n    title: 'Star Wars: Episode IV - A New Hope',\n    year: 1977,\n  },\n  { title: 'City of God', year: 2002 },\n  { title: 'Se7en', year: 1995 },\n  { title: 'The Silence of the Lambs', year: 1991 },\n  { title: \"It's a Wonderful Life\", year: 1946 },\n  { title: 'Life Is Beautiful', year: 1997 },\n  { title: 'The Usual Suspects', year: 1995 },\n  { title: 'L\xe9on: The Professional', year: 1994 },\n  { title: 'Spirited Away', year: 2001 },\n  { title: 'Saving Private Ryan', year: 1998 },\n  { title: 'Once Upon a Time in the West', year: 1968 },\n  { title: 'American History X', year: 1998 },\n  { title: 'Interstellar', year: 2014 },\n  { title: 'Casablanca', year: 1942 },\n  { title: 'City Lights', year: 1931 },\n  { title: 'Psycho', year: 1960 },\n  { title: 'The Green Mile', year: 1999 },\n  { title: 'The Intouchables', year: 2011 },\n  { title: 'Modern Times', year: 1936 },\n  { title: 'Raiders of the Lost Ark', year: 1981 },\n  { title: 'Rear Window', year: 1954 },\n  { title: 'The Pianist', year: 2002 },\n  { title: 'The Departed', year: 2006 },\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\n  { title: 'Back to the Future', year: 1985 },\n  { title: 'Whiplash', year: 2014 },\n  { title: 'Gladiator', year: 2000 },\n  { title: 'Memento', year: 2000 },\n  { title: 'The Prestige', year: 2006 },\n  { title: 'The Lion King', year: 1994 },\n  { title: 'Apocalypse Now', year: 1979 },\n  { title: 'Alien', year: 1979 },\n  { title: 'Sunset Boulevard', year: 1950 },\n  {\n    title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964,\n  },\n  { title: 'The Great Dictator', year: 1940 },\n  { title: 'Cinema Paradiso', year: 1988 },\n  { title: 'The Lives of Others', year: 2006 },\n  { title: 'Grave of the Fireflies', year: 1988 },\n  { title: 'Paths of Glory', year: 1957 },\n  { title: 'Django Unchained', year: 2012 },\n  { title: 'The Shining', year: 1980 },\n  { title: 'WALL\xb7E', year: 2008 },\n  { title: 'American Beauty', year: 1999 },\n  { title: 'The Dark Knight Rises', year: 2012 },\n  { title: 'Princess Mononoke', year: 1997 },\n  { title: 'Aliens', year: 1986 },\n  { title: 'Oldboy', year: 2003 },\n  { title: 'Once Upon a Time in America', year: 1984 },\n  { title: 'Witness for the Prosecution', year: 1957 },\n  { title: 'Das Boot', year: 1981 },\n  { title: 'Citizen Kane', year: 1941 },\n  { title: 'North by Northwest', year: 1959 },\n  { title: 'Vertigo', year: 1958 },\n  {\n    title: 'Star Wars: Episode VI - Return of the Jedi',\n    year: 1983,\n  },\n  { title: 'Reservoir Dogs', year: 1992 },\n  { title: 'Braveheart', year: 1995 },\n  { title: 'M', year: 1931 },\n  { title: 'Requiem for a Dream', year: 2000 },\n  { title: 'Am\xe9lie', year: 2001 },\n  { title: 'A Clockwork Orange', year: 1971 },\n  { title: 'Like Stars on Earth', year: 2007 },\n  { title: 'Taxi Driver', year: 1976 },\n  { title: 'Lawrence of Arabia', year: 1962 },\n  { title: 'Double Indemnity', year: 1944 },\n  {\n    title: 'Eternal Sunshine of the Spotless Mind',\n    year: 2004,\n  },\n  { title: 'Amadeus', year: 1984 },\n  { title: 'To Kill a Mockingbird', year: 1962 },\n  { title: 'Toy Story 3', year: 2010 },\n  { title: 'Logan', year: 2017 },\n  { title: 'Full Metal Jacket', year: 1987 },\n  { title: 'Dangal', year: 2016 },\n  { title: 'The Sting', year: 1973 },\n  { title: '2001: A Space Odyssey', year: 1968 },\n  { title: \"Singin' in the Rain\", year: 1952 },\n  { title: 'Toy Story', year: 1995 },\n  { title: 'Bicycle Thieves', year: 1948 },\n  { title: 'The Kid', year: 1921 },\n  { title: 'Inglourious Basterds', year: 2009 },\n  { title: 'Snatch', year: 2000 },\n  { title: '3 Idiots', year: 2009 },\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\n];\n"},2081:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return f}));var a=n(8),i=n(17),r=n(1),l=n(1335),o=n(1325),s=n(1498),c=n(1466),d=n(1545),y=n(1467),h=n(1336),p=n(1541),u=n(1663),m=n(0),b=Object(p.a)();function f(){var e=r.useState(null),t=Object(i.a)(e,2),n=t[0],p=t[1],f=r.useState(!1),T=Object(i.a)(f,2),j=T[0],O=T[1],S=function(){A({title:"",year:""}),O(!1)},x=r.useState({title:"",year:""}),v=Object(i.a)(x,2),w=v[0],A=v[1];return Object(m.jsxs)(r.Fragment,{children:[Object(m.jsx)(u.a,{value:n,onChange:function(e,t){"string"===typeof t?setTimeout((function(){O(!0),A({title:t,year:""})})):t&&t.inputValue?(O(!0),A({title:t.inputValue,year:""})):p(t)},filterOptions:function(e,t){var n=b(e,t);return""!==t.inputValue&&n.push({inputValue:t.inputValue,title:'Add "'.concat(t.inputValue,'"')}),n},id:"free-solo-dialog-demo",options:g,getOptionLabel:function(e){return"string"===typeof e?e:e.inputValue?e.inputValue:e.title},selectOnFocus:!0,clearOnBlur:!0,handleHomeEndKeys:!0,renderOption:function(e,t){return Object(m.jsx)("li",Object(a.a)(Object(a.a)({},e),{},{children:t.title}))},sx:{width:300},freeSolo:!0,renderInput:function(e){return Object(m.jsx)(l.a,Object(a.a)(Object(a.a)({},e),{},{label:"Free solo dialog"}))}}),Object(m.jsx)(o.a,{open:j,onClose:S,children:Object(m.jsxs)("form",{onSubmit:function(e){e.preventDefault(),p({title:w.title,year:parseInt(w.year,10)}),S()},children:[Object(m.jsx)(s.a,{children:"Add a new film"}),Object(m.jsxs)(c.a,{children:[Object(m.jsx)(d.a,{children:"Did you miss any film in our list? Please, add it!"}),Object(m.jsx)(l.a,{autoFocus:!0,margin:"dense",id:"name",value:w.title,onChange:function(e){return A(Object(a.a)(Object(a.a)({},w),{},{title:e.target.value}))},label:"title",type:"text",variant:"standard"}),Object(m.jsx)(l.a,{margin:"dense",id:"name",value:w.year,onChange:function(e){return A(Object(a.a)(Object(a.a)({},w),{},{year:e.target.value}))},label:"year",type:"number",variant:"standard"})]}),Object(m.jsxs)(y.a,{children:[Object(m.jsx)(h.a,{onClick:S,children:"Cancel"}),Object(m.jsx)(h.a,{type:"submit",children:"Add"})]})]})})]})}var g=[{title:"The Shawshank Redemption",year:1994},{title:"The Godfather",year:1972},{title:"The Godfather: Part II",year:1974},{title:"The Dark Knight",year:2008},{title:"12 Angry Men",year:1957},{title:"Schindler's List",year:1993},{title:"Pulp Fiction",year:1994},{title:"The Lord of the Rings: The Return of the King",year:2003},{title:"The Good, the Bad and the Ugly",year:1966},{title:"Fight Club",year:1999},{title:"The Lord of the Rings: The Fellowship of the Ring",year:2001},{title:"Star Wars: Episode V - The Empire Strikes Back",year:1980},{title:"Forrest Gump",year:1994},{title:"Inception",year:2010},{title:"The Lord of the Rings: The Two Towers",year:2002},{title:"One Flew Over the Cuckoo's Nest",year:1975},{title:"Goodfellas",year:1990},{title:"The Matrix",year:1999},{title:"Seven Samurai",year:1954},{title:"Star Wars: Episode IV - A New Hope",year:1977},{title:"City of God",year:2002},{title:"Se7en",year:1995},{title:"The Silence of the Lambs",year:1991},{title:"It's a Wonderful Life",year:1946},{title:"Life Is Beautiful",year:1997},{title:"The Usual Suspects",year:1995},{title:"L\xe9on: The Professional",year:1994},{title:"Spirited Away",year:2001},{title:"Saving Private Ryan",year:1998},{title:"Once Upon a Time in the West",year:1968},{title:"American History X",year:1998},{title:"Interstellar",year:2014},{title:"Casablanca",year:1942},{title:"City Lights",year:1931},{title:"Psycho",year:1960},{title:"The Green Mile",year:1999},{title:"The Intouchables",year:2011},{title:"Modern Times",year:1936},{title:"Raiders of the Lost Ark",year:1981},{title:"Rear Window",year:1954},{title:"The Pianist",year:2002},{title:"The Departed",year:2006},{title:"Terminator 2: Judgment Day",year:1991},{title:"Back to the Future",year:1985},{title:"Whiplash",year:2014},{title:"Gladiator",year:2e3},{title:"Memento",year:2e3},{title:"The Prestige",year:2006},{title:"The Lion King",year:1994},{title:"Apocalypse Now",year:1979},{title:"Alien",year:1979},{title:"Sunset Boulevard",year:1950},{title:"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb",year:1964},{title:"The Great Dictator",year:1940},{title:"Cinema Paradiso",year:1988},{title:"The Lives of Others",year:2006},{title:"Grave of the Fireflies",year:1988},{title:"Paths of Glory",year:1957},{title:"Django Unchained",year:2012},{title:"The Shining",year:1980},{title:"WALL\xb7E",year:2008},{title:"American Beauty",year:1999},{title:"The Dark Knight Rises",year:2012},{title:"Princess Mononoke",year:1997},{title:"Aliens",year:1986},{title:"Oldboy",year:2003},{title:"Once Upon a Time in America",year:1984},{title:"Witness for the Prosecution",year:1957},{title:"Das Boot",year:1981},{title:"Citizen Kane",year:1941},{title:"North by Northwest",year:1959},{title:"Vertigo",year:1958},{title:"Star Wars: Episode VI - Return of the Jedi",year:1983},{title:"Reservoir Dogs",year:1992},{title:"Braveheart",year:1995},{title:"M",year:1931},{title:"Requiem for a Dream",year:2e3},{title:"Am\xe9lie",year:2001},{title:"A Clockwork Orange",year:1971},{title:"Like Stars on Earth",year:2007},{title:"Taxi Driver",year:1976},{title:"Lawrence of Arabia",year:1962},{title:"Double Indemnity",year:1944},{title:"Eternal Sunshine of the Spotless Mind",year:2004},{title:"Amadeus",year:1984},{title:"To Kill a Mockingbird",year:1962},{title:"Toy Story 3",year:2010},{title:"Logan",year:2017},{title:"Full Metal Jacket",year:1987},{title:"Dangal",year:2016},{title:"The Sting",year:1973},{title:"2001: A Space Odyssey",year:1968},{title:"Singin' in the Rain",year:1952},{title:"Toy Story",year:1995},{title:"Bicycle Thieves",year:1948},{title:"The Kid",year:1921},{title:"Inglourious Basterds",year:2009},{title:"Snatch",year:2e3},{title:"3 Idiots",year:2009},{title:"Monty Python and the Holy Grail",year:1975}]},2082:function(e,t,n){"use strict";n.r(t),t.default="import * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogActions from '@mui/material/DialogActions';\nimport Button from '@mui/material/Button';\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\n\nconst filter = createFilterOptions();\n\nexport default function FreeSoloCreateOptionDialog() {\n  const [value, setValue] = React.useState(null);\n  const [open, toggleOpen] = React.useState(false);\n\n  const handleClose = () => {\n    setDialogValue({\n      title: '',\n      year: '',\n    });\n\n    toggleOpen(false);\n  };\n\n  const [dialogValue, setDialogValue] = React.useState({\n    title: '',\n    year: '',\n  });\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setValue({\n      title: dialogValue.title,\n      year: parseInt(dialogValue.year, 10),\n    });\n\n    handleClose();\n  };\n\n  return (\n    <React.Fragment>\n      <Autocomplete\n        value={value}\n        onChange={(event, newValue) => {\n          if (typeof newValue === 'string') {\n            // timeout to avoid instant validation of the dialog's form.\n            setTimeout(() => {\n              toggleOpen(true);\n              setDialogValue({\n                title: newValue,\n                year: '',\n              });\n            });\n          } else if (newValue && newValue.inputValue) {\n            toggleOpen(true);\n            setDialogValue({\n              title: newValue.inputValue,\n              year: '',\n            });\n          } else {\n            setValue(newValue);\n          }\n        }}\n        filterOptions={(options, params) => {\n          const filtered = filter(options, params);\n\n          if (params.inputValue !== '') {\n            filtered.push({\n              inputValue: params.inputValue,\n              title: `Add \"${params.inputValue}\"`,\n            });\n          }\n\n          return filtered;\n        }}\n        id=\"free-solo-dialog-demo\"\n        options={top100Films}\n        getOptionLabel={(option) => {\n          // e.g value selected with enter, right from the input\n          if (typeof option === 'string') {\n            return option;\n          }\n          if (option.inputValue) {\n            return option.inputValue;\n          }\n          return option.title;\n        }}\n        selectOnFocus\n        clearOnBlur\n        handleHomeEndKeys\n        renderOption={(props, option) => <li {...props}>{option.title}</li>}\n        sx={{ width: 300 }}\n        freeSolo\n        renderInput={(params) => <TextField {...params} label=\"Free solo dialog\" />}\n      />\n      <Dialog open={open} onClose={handleClose}>\n        <form onSubmit={handleSubmit}>\n          <DialogTitle>Add a new film</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Did you miss any film in our list? Please, add it!\n            </DialogContentText>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              value={dialogValue.title}\n              onChange={(event) =>\n                setDialogValue({\n                  ...dialogValue,\n                  title: event.target.value,\n                })\n              }\n              label=\"title\"\n              type=\"text\"\n              variant=\"standard\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"name\"\n              value={dialogValue.year}\n              onChange={(event) =>\n                setDialogValue({\n                  ...dialogValue,\n                  year: event.target.value,\n                })\n              }\n              label=\"year\"\n              type=\"number\"\n              variant=\"standard\"\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose}>Cancel</Button>\n            <Button type=\"submit\">Add</Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </React.Fragment>\n  );\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n  { title: 'The Shawshank Redemption', year: 1994 },\n  { title: 'The Godfather', year: 1972 },\n  { title: 'The Godfather: Part II', year: 1974 },\n  { title: 'The Dark Knight', year: 2008 },\n  { title: '12 Angry Men', year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n  { title: 'Pulp Fiction', year: 1994 },\n  {\n    title: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\n  { title: 'Fight Club', year: 1999 },\n  {\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { title: 'Forrest Gump', year: 1994 },\n  { title: 'Inception', year: 2010 },\n  {\n    title: 'The Lord of the Rings: The Two Towers',\n    year: 2002,\n  },\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { title: 'Goodfellas', year: 1990 },\n  { title: 'The Matrix', year: 1999 },\n  { title: 'Seven Samurai', year: 1954 },\n  {\n    title: 'Star Wars: Episode IV - A New Hope',\n    year: 1977,\n  },\n  { title: 'City of God', year: 2002 },\n  { title: 'Se7en', year: 1995 },\n  { title: 'The Silence of the Lambs', year: 1991 },\n  { title: \"It's a Wonderful Life\", year: 1946 },\n  { title: 'Life Is Beautiful', year: 1997 },\n  { title: 'The Usual Suspects', year: 1995 },\n  { title: 'L\xe9on: The Professional', year: 1994 },\n  { title: 'Spirited Away', year: 2001 },\n  { title: 'Saving Private Ryan', year: 1998 },\n  { title: 'Once Upon a Time in the West', year: 1968 },\n  { title: 'American History X', year: 1998 },\n  { title: 'Interstellar', year: 2014 },\n  { title: 'Casablanca', year: 1942 },\n  { title: 'City Lights', year: 1931 },\n  { title: 'Psycho', year: 1960 },\n  { title: 'The Green Mile', year: 1999 },\n  { title: 'The Intouchables', year: 2011 },\n  { title: 'Modern Times', year: 1936 },\n  { title: 'Raiders of the Lost Ark', year: 1981 },\n  { title: 'Rear Window', year: 1954 },\n  { title: 'The Pianist', year: 2002 },\n  { title: 'The Departed', year: 2006 },\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\n  { title: 'Back to the Future', year: 1985 },\n  { title: 'Whiplash', year: 2014 },\n  { title: 'Gladiator', year: 2000 },\n  { title: 'Memento', year: 2000 },\n  { title: 'The Prestige', year: 2006 },\n  { title: 'The Lion King', year: 1994 },\n  { title: 'Apocalypse Now', year: 1979 },\n  { title: 'Alien', year: 1979 },\n  { title: 'Sunset Boulevard', year: 1950 },\n  {\n    title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964,\n  },\n  { title: 'The Great Dictator', year: 1940 },\n  { title: 'Cinema Paradiso', year: 1988 },\n  { title: 'The Lives of Others', year: 2006 },\n  { title: 'Grave of the Fireflies', year: 1988 },\n  { title: 'Paths of Glory', year: 1957 },\n  { title: 'Django Unchained', year: 2012 },\n  { title: 'The Shining', year: 1980 },\n  { title: 'WALL\xb7E', year: 2008 },\n  { title: 'American Beauty', year: 1999 },\n  { title: 'The Dark Knight Rises', year: 2012 },\n  { title: 'Princess Mononoke', year: 1997 },\n  { title: 'Aliens', year: 1986 },\n  { title: 'Oldboy', year: 2003 },\n  { title: 'Once Upon a Time in America', year: 1984 },\n  { title: 'Witness for the Prosecution', year: 1957 },\n  { title: 'Das Boot', year: 1981 },\n  { title: 'Citizen Kane', year: 1941 },\n  { title: 'North by Northwest', year: 1959 },\n  { title: 'Vertigo', year: 1958 },\n  {\n    title: 'Star Wars: Episode VI - Return of the Jedi',\n    year: 1983,\n  },\n  { title: 'Reservoir Dogs', year: 1992 },\n  { title: 'Braveheart', year: 1995 },\n  { title: 'M', year: 1931 },\n  { title: 'Requiem for a Dream', year: 2000 },\n  { title: 'Am\xe9lie', year: 2001 },\n  { title: 'A Clockwork Orange', year: 1971 },\n  { title: 'Like Stars on Earth', year: 2007 },\n  { title: 'Taxi Driver', year: 1976 },\n  { title: 'Lawrence of Arabia', year: 1962 },\n  { title: 'Double Indemnity', year: 1944 },\n  {\n    title: 'Eternal Sunshine of the Spotless Mind',\n    year: 2004,\n  },\n  { title: 'Amadeus', year: 1984 },\n  { title: 'To Kill a Mockingbird', year: 1962 },\n  { title: 'Toy Story 3', year: 2010 },\n  { title: 'Logan', year: 2017 },\n  { title: 'Full Metal Jacket', year: 1987 },\n  { title: 'Dangal', year: 2016 },\n  { title: 'The Sting', year: 1973 },\n  { title: '2001: A Space Odyssey', year: 1968 },\n  { title: \"Singin' in the Rain\", year: 1952 },\n  { title: 'Toy Story', year: 1995 },\n  { title: 'Bicycle Thieves', year: 1948 },\n  { title: 'The Kid', year: 1921 },\n  { title: 'Inglourious Basterds', year: 2009 },\n  { title: 'Snatch', year: 2000 },\n  { title: '3 Idiots', year: 2009 },\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\n];\n"},2083:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return o}));var a=n(8),i=(n(1),n(1335)),r=n(1663),l=n(0);function o(){var e=s.map((function(e){var t=e.title[0].toUpperCase();return Object(a.a)({firstLetter:/[0-9]/.test(t)?"0-9":t},e)}));return Object(l.jsx)(r.a,{id:"grouped-demo",options:e.sort((function(e,t){return-t.firstLetter.localeCompare(e.firstLetter)})),groupBy:function(e){return e.firstLetter},getOptionLabel:function(e){return e.title},sx:{width:300},renderInput:function(e){return Object(l.jsx)(i.a,Object(a.a)(Object(a.a)({},e),{},{label:"With categories"}))}})}var s=[{title:"The Shawshank Redemption",year:1994},{title:"The Godfather",year:1972},{title:"The Godfather: Part II",year:1974},{title:"The Dark Knight",year:2008},{title:"12 Angry Men",year:1957},{title:"Schindler's List",year:1993},{title:"Pulp Fiction",year:1994},{title:"The Lord of the Rings: The Return of the King",year:2003},{title:"The Good, the Bad and the Ugly",year:1966},{title:"Fight Club",year:1999},{title:"The Lord of the Rings: The Fellowship of the Ring",year:2001},{title:"Star Wars: Episode V - The Empire Strikes Back",year:1980},{title:"Forrest Gump",year:1994},{title:"Inception",year:2010},{title:"The Lord of the Rings: The Two Towers",year:2002},{title:"One Flew Over the Cuckoo's Nest",year:1975},{title:"Goodfellas",year:1990},{title:"The Matrix",year:1999},{title:"Seven Samurai",year:1954},{title:"Star Wars: Episode IV - A New Hope",year:1977},{title:"City of God",year:2002},{title:"Se7en",year:1995},{title:"The Silence of the Lambs",year:1991},{title:"It's a Wonderful Life",year:1946},{title:"Life Is Beautiful",year:1997},{title:"The Usual Suspects",year:1995},{title:"L\xe9on: The Professional",year:1994},{title:"Spirited Away",year:2001},{title:"Saving Private Ryan",year:1998},{title:"Once Upon a Time in the West",year:1968},{title:"American History X",year:1998},{title:"Interstellar",year:2014},{title:"Casablanca",year:1942},{title:"City Lights",year:1931},{title:"Psycho",year:1960},{title:"The Green Mile",year:1999},{title:"The Intouchables",year:2011},{title:"Modern Times",year:1936},{title:"Raiders of the Lost Ark",year:1981},{title:"Rear Window",year:1954},{title:"The Pianist",year:2002},{title:"The Departed",year:2006},{title:"Terminator 2: Judgment Day",year:1991},{title:"Back to the Future",year:1985},{title:"Whiplash",year:2014},{title:"Gladiator",year:2e3},{title:"Memento",year:2e3},{title:"The Prestige",year:2006},{title:"The Lion King",year:1994},{title:"Apocalypse Now",year:1979},{title:"Alien",year:1979},{title:"Sunset Boulevard",year:1950},{title:"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb",year:1964},{title:"The Great Dictator",year:1940},{title:"Cinema Paradiso",year:1988},{title:"The Lives of Others",year:2006},{title:"Grave of the Fireflies",year:1988},{title:"Paths of Glory",year:1957},{title:"Django Unchained",year:2012},{title:"The Shining",year:1980},{title:"WALL\xb7E",year:2008},{title:"American Beauty",year:1999},{title:"The Dark Knight Rises",year:2012},{title:"Princess Mononoke",year:1997},{title:"Aliens",year:1986},{title:"Oldboy",year:2003},{title:"Once Upon a Time in America",year:1984},{title:"Witness for the Prosecution",year:1957},{title:"Das Boot",year:1981},{title:"Citizen Kane",year:1941},{title:"North by Northwest",year:1959},{title:"Vertigo",year:1958},{title:"Star Wars: Episode VI - Return of the Jedi",year:1983},{title:"Reservoir Dogs",year:1992},{title:"Braveheart",year:1995},{title:"M",year:1931},{title:"Requiem for a Dream",year:2e3},{title:"Am\xe9lie",year:2001},{title:"A Clockwork Orange",year:1971},{title:"Like Stars on Earth",year:2007},{title:"Taxi Driver",year:1976},{title:"Lawrence of Arabia",year:1962},{title:"Double Indemnity",year:1944},{title:"Eternal Sunshine of the Spotless Mind",year:2004},{title:"Amadeus",year:1984},{title:"To Kill a Mockingbird",year:1962},{title:"Toy Story 3",year:2010},{title:"Logan",year:2017},{title:"Full Metal Jacket",year:1987},{title:"Dangal",year:2016},{title:"The Sting",year:1973},{title:"2001: A Space Odyssey",year:1968},{title:"Singin' in the Rain",year:1952},{title:"Toy Story",year:1995},{title:"Bicycle Thieves",year:1948},{title:"The Kid",year:1921},{title:"Inglourious Basterds",year:2009},{title:"Snatch",year:2e3},{title:"3 Idiots",year:2009},{title:"Monty Python and the Holy Grail",year:1975}]},2084:function(e,t,n){"use strict";n.r(t),t.default="import * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\n\nexport default function Grouped() {\n  const options = top100Films.map((option) => {\n    const firstLetter = option.title[0].toUpperCase();\n    return {\n      firstLetter: /[0-9]/.test(firstLetter) ? '0-9' : firstLetter,\n      ...option,\n    };\n  });\n\n  return (\n    <Autocomplete\n      id=\"grouped-demo\"\n      options={options.sort((a, b) => -b.firstLetter.localeCompare(a.firstLetter))}\n      groupBy={(option) => option.firstLetter}\n      getOptionLabel={(option) => option.title}\n      sx={{ width: 300 }}\n      renderInput={(params) => <TextField {...params} label=\"With categories\" />}\n    />\n  );\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n  { title: 'The Shawshank Redemption', year: 1994 },\n  { title: 'The Godfather', year: 1972 },\n  { title: 'The Godfather: Part II', year: 1974 },\n  { title: 'The Dark Knight', year: 2008 },\n  { title: '12 Angry Men', year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n  { title: 'Pulp Fiction', year: 1994 },\n  {\n    title: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\n  { title: 'Fight Club', year: 1999 },\n  {\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { title: 'Forrest Gump', year: 1994 },\n  { title: 'Inception', year: 2010 },\n  {\n    title: 'The Lord of the Rings: The Two Towers',\n    year: 2002,\n  },\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { title: 'Goodfellas', year: 1990 },\n  { title: 'The Matrix', year: 1999 },\n  { title: 'Seven Samurai', year: 1954 },\n  {\n    title: 'Star Wars: Episode IV - A New Hope',\n    year: 1977,\n  },\n  { title: 'City of God', year: 2002 },\n  { title: 'Se7en', year: 1995 },\n  { title: 'The Silence of the Lambs', year: 1991 },\n  { title: \"It's a Wonderful Life\", year: 1946 },\n  { title: 'Life Is Beautiful', year: 1997 },\n  { title: 'The Usual Suspects', year: 1995 },\n  { title: 'L\xe9on: The Professional', year: 1994 },\n  { title: 'Spirited Away', year: 2001 },\n  { title: 'Saving Private Ryan', year: 1998 },\n  { title: 'Once Upon a Time in the West', year: 1968 },\n  { title: 'American History X', year: 1998 },\n  { title: 'Interstellar', year: 2014 },\n  { title: 'Casablanca', year: 1942 },\n  { title: 'City Lights', year: 1931 },\n  { title: 'Psycho', year: 1960 },\n  { title: 'The Green Mile', year: 1999 },\n  { title: 'The Intouchables', year: 2011 },\n  { title: 'Modern Times', year: 1936 },\n  { title: 'Raiders of the Lost Ark', year: 1981 },\n  { title: 'Rear Window', year: 1954 },\n  { title: 'The Pianist', year: 2002 },\n  { title: 'The Departed', year: 2006 },\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\n  { title: 'Back to the Future', year: 1985 },\n  { title: 'Whiplash', year: 2014 },\n  { title: 'Gladiator', year: 2000 },\n  { title: 'Memento', year: 2000 },\n  { title: 'The Prestige', year: 2006 },\n  { title: 'The Lion King', year: 1994 },\n  { title: 'Apocalypse Now', year: 1979 },\n  { title: 'Alien', year: 1979 },\n  { title: 'Sunset Boulevard', year: 1950 },\n  {\n    title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964,\n  },\n  { title: 'The Great Dictator', year: 1940 },\n  { title: 'Cinema Paradiso', year: 1988 },\n  { title: 'The Lives of Others', year: 2006 },\n  { title: 'Grave of the Fireflies', year: 1988 },\n  { title: 'Paths of Glory', year: 1957 },\n  { title: 'Django Unchained', year: 2012 },\n  { title: 'The Shining', year: 1980 },\n  { title: 'WALL\xb7E', year: 2008 },\n  { title: 'American Beauty', year: 1999 },\n  { title: 'The Dark Knight Rises', year: 2012 },\n  { title: 'Princess Mononoke', year: 1997 },\n  { title: 'Aliens', year: 1986 },\n  { title: 'Oldboy', year: 2003 },\n  { title: 'Once Upon a Time in America', year: 1984 },\n  { title: 'Witness for the Prosecution', year: 1957 },\n  { title: 'Das Boot', year: 1981 },\n  { title: 'Citizen Kane', year: 1941 },\n  { title: 'North by Northwest', year: 1959 },\n  { title: 'Vertigo', year: 1958 },\n  {\n    title: 'Star Wars: Episode VI - Return of the Jedi',\n    year: 1983,\n  },\n  { title: 'Reservoir Dogs', year: 1992 },\n  { title: 'Braveheart', year: 1995 },\n  { title: 'M', year: 1931 },\n  { title: 'Requiem for a Dream', year: 2000 },\n  { title: 'Am\xe9lie', year: 2001 },\n  { title: 'A Clockwork Orange', year: 1971 },\n  { title: 'Like Stars on Earth', year: 2007 },\n  { title: 'Taxi Driver', year: 1976 },\n  { title: 'Lawrence of Arabia', year: 1962 },\n  { title: 'Double Indemnity', year: 1944 },\n  {\n    title: 'Eternal Sunshine of the Spotless Mind',\n    year: 2004,\n  },\n  { title: 'Amadeus', year: 1984 },\n  { title: 'To Kill a Mockingbird', year: 1962 },\n  { title: 'Toy Story 3', year: 2010 },\n  { title: 'Logan', year: 2017 },\n  { title: 'Full Metal Jacket', year: 1987 },\n  { title: 'Dangal', year: 2016 },\n  { title: 'The Sting', year: 1973 },\n  { title: '2001: A Space Odyssey', year: 1968 },\n  { title: \"Singin' in the Rain\", year: 1952 },\n  { title: 'Toy Story', year: 1995 },\n  { title: 'Bicycle Thieves', year: 1948 },\n  { title: 'The Kid', year: 1921 },\n  { title: 'Inglourious Basterds', year: 2009 },\n  { title: 'Snatch', year: 2000 },\n  { title: '3 Idiots', year: 2009 },\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\n];\n"},2085:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return o}));var a=n(8),i=(n(1),n(1335)),r=n(1663),l=n(0);function o(){return Object(l.jsx)(r.a,{id:"disabled-options-demo",options:s,getOptionDisabled:function(e){return e===s[0]||e===s[2]},sx:{width:300},renderInput:function(e){return Object(l.jsx)(i.a,Object(a.a)(Object(a.a)({},e),{},{label:"Disabled options"}))}})}var s=Array.from(new Array(48)).map((function(e,t){return"".concat(t<20?"0":"").concat(Math.floor(t/2),":").concat(t%2===0?"00":"30")}))},2086:function(e,t,n){"use strict";n.r(t),t.default="import * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\n\nexport default function DisabledOptions() {\n  return (\n    <Autocomplete\n      id=\"disabled-options-demo\"\n      options={timeSlots}\n      getOptionDisabled={(option) =>\n        option === timeSlots[0] || option === timeSlots[2]\n      }\n      sx={{ width: 300 }}\n      renderInput={(params) => <TextField {...params} label=\"Disabled options\" />}\n    />\n  );\n}\n\n// One time slot every 30 minutes.\nconst timeSlots = Array.from(new Array(24 * 2)).map(\n  (_, index) =>\n    `${index < 20 ? '0' : ''}${Math.floor(index / 2)}:${\n      index % 2 === 0 ? '00' : '30'\n    }`,\n);\n"},2087:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return d}));var a=n(8),i=(n(1),n(1541)),r=n(14),l=n(0),o=Object(r.a)("label")({display:"block"}),s=Object(r.a)("input")((function(e){var t=e.theme;return{width:200,backgroundColor:t.palette.background.paper,color:t.palette.getContrastText(t.palette.background.paper)}})),c=Object(r.a)("ul")((function(e){return{width:200,margin:0,padding:0,zIndex:1,position:"absolute",listStyle:"none",backgroundColor:e.theme.palette.background.paper,overflow:"auto",maxHeight:200,border:"1px solid rgba(0,0,0,.25)",'& li[data-focus="true"]':{backgroundColor:"#4a8df6",color:"white",cursor:"pointer"},"& li:active":{backgroundColor:"#2977f5",color:"white"}}}));function d(){var e=Object(i.b)({id:"use-autocomplete-demo",options:y,getOptionLabel:function(e){return e.title}}),t=e.getRootProps,n=e.getInputLabelProps,r=e.getInputProps,d=e.getListboxProps,h=e.getOptionProps,p=e.groupedOptions;return Object(l.jsxs)("div",{children:[Object(l.jsxs)("div",Object(a.a)(Object(a.a)({},t()),{},{children:[Object(l.jsx)(o,Object(a.a)(Object(a.a)({},n()),{},{children:"useAutocomplete"})),Object(l.jsx)(s,Object(a.a)({},r()))]})),p.length>0?Object(l.jsx)(c,Object(a.a)(Object(a.a)({},d()),{},{children:p.map((function(e,t){return Object(l.jsx)("li",Object(a.a)(Object(a.a)({},h({option:e,index:t})),{},{children:e.title}))}))})):null]})}var y=[{title:"The Shawshank Redemption",year:1994},{title:"The Godfather",year:1972},{title:"The Godfather: Part II",year:1974},{title:"The Dark Knight",year:2008},{title:"12 Angry Men",year:1957},{title:"Schindler's List",year:1993},{title:"Pulp Fiction",year:1994},{title:"The Lord of the Rings: The Return of the King",year:2003},{title:"The Good, the Bad and the Ugly",year:1966},{title:"Fight Club",year:1999},{title:"The Lord of the Rings: The Fellowship of the Ring",year:2001},{title:"Star Wars: Episode V - The Empire Strikes Back",year:1980},{title:"Forrest Gump",year:1994},{title:"Inception",year:2010},{title:"The Lord of the Rings: The Two Towers",year:2002},{title:"One Flew Over the Cuckoo's Nest",year:1975},{title:"Goodfellas",year:1990},{title:"The Matrix",year:1999},{title:"Seven Samurai",year:1954},{title:"Star Wars: Episode IV - A New Hope",year:1977},{title:"City of God",year:2002},{title:"Se7en",year:1995},{title:"The Silence of the Lambs",year:1991},{title:"It's a Wonderful Life",year:1946},{title:"Life Is Beautiful",year:1997},{title:"The Usual Suspects",year:1995},{title:"L\xe9on: The Professional",year:1994},{title:"Spirited Away",year:2001},{title:"Saving Private Ryan",year:1998},{title:"Once Upon a Time in the West",year:1968},{title:"American History X",year:1998},{title:"Interstellar",year:2014},{title:"Casablanca",year:1942},{title:"City Lights",year:1931},{title:"Psycho",year:1960},{title:"The Green Mile",year:1999},{title:"The Intouchables",year:2011},{title:"Modern Times",year:1936},{title:"Raiders of the Lost Ark",year:1981},{title:"Rear Window",year:1954},{title:"The Pianist",year:2002},{title:"The Departed",year:2006},{title:"Terminator 2: Judgment Day",year:1991},{title:"Back to the Future",year:1985},{title:"Whiplash",year:2014},{title:"Gladiator",year:2e3},{title:"Memento",year:2e3},{title:"The Prestige",year:2006},{title:"The Lion King",year:1994},{title:"Apocalypse Now",year:1979},{title:"Alien",year:1979},{title:"Sunset Boulevard",year:1950},{title:"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb",year:1964},{title:"The Great Dictator",year:1940},{title:"Cinema Paradiso",year:1988},{title:"The Lives of Others",year:2006},{title:"Grave of the Fireflies",year:1988},{title:"Paths of Glory",year:1957},{title:"Django Unchained",year:2012},{title:"The Shining",year:1980},{title:"WALL\xb7E",year:2008},{title:"American Beauty",year:1999},{title:"The Dark Knight Rises",year:2012},{title:"Princess Mononoke",year:1997},{title:"Aliens",year:1986},{title:"Oldboy",year:2003},{title:"Once Upon a Time in America",year:1984},{title:"Witness for the Prosecution",year:1957},{title:"Das Boot",year:1981},{title:"Citizen Kane",year:1941},{title:"North by Northwest",year:1959},{title:"Vertigo",year:1958},{title:"Star Wars: Episode VI - Return of the Jedi",year:1983},{title:"Reservoir Dogs",year:1992},{title:"Braveheart",year:1995},{title:"M",year:1931},{title:"Requiem for a Dream",year:2e3},{title:"Am\xe9lie",year:2001},{title:"A Clockwork Orange",year:1971},{title:"Like Stars on Earth",year:2007},{title:"Taxi Driver",year:1976},{title:"Lawrence of Arabia",year:1962},{title:"Double Indemnity",year:1944},{title:"Eternal Sunshine of the Spotless Mind",year:2004},{title:"Amadeus",year:1984},{title:"To Kill a Mockingbird",year:1962},{title:"Toy Story 3",year:2010},{title:"Logan",year:2017},{title:"Full Metal Jacket",year:1987},{title:"Dangal",year:2016},{title:"The Sting",year:1973},{title:"2001: A Space Odyssey",year:1968},{title:"Singin' in the Rain",year:1952},{title:"Toy Story",year:1995},{title:"Bicycle Thieves",year:1948},{title:"The Kid",year:1921},{title:"Inglourious Basterds",year:2009},{title:"Snatch",year:2e3},{title:"3 Idiots",year:2009},{title:"Monty Python and the Holy Grail",year:1975}]},2088:function(e,t,n){"use strict";n.r(t),t.default="import * as React from 'react';\nimport { useAutocomplete } from '@mui/core/AutocompleteUnstyled';\nimport { styled } from '@mui/material/styles';\n\nconst Label = styled('label')({\n  display: 'block',\n});\n\nconst Input = styled('input')(({ theme }) => ({\n  width: 200,\n  backgroundColor: theme.palette.background.paper,\n  color: theme.palette.getContrastText(theme.palette.background.paper),\n}));\n\nconst Listbox = styled('ul')(({ theme }) => ({\n  width: 200,\n  margin: 0,\n  padding: 0,\n  zIndex: 1,\n  position: 'absolute',\n  listStyle: 'none',\n  backgroundColor: theme.palette.background.paper,\n  overflow: 'auto',\n  maxHeight: 200,\n  border: '1px solid rgba(0,0,0,.25)',\n  '& li[data-focus=\"true\"]': {\n    backgroundColor: '#4a8df6',\n    color: 'white',\n    cursor: 'pointer',\n  },\n  '& li:active': {\n    backgroundColor: '#2977f5',\n    color: 'white',\n  },\n}));\n\nexport default function UseAutocomplete() {\n  const {\n    getRootProps,\n    getInputLabelProps,\n    getInputProps,\n    getListboxProps,\n    getOptionProps,\n    groupedOptions,\n  } = useAutocomplete({\n    id: 'use-autocomplete-demo',\n    options: top100Films,\n    getOptionLabel: (option) => option.title,\n  });\n\n  return (\n    <div>\n      <div {...getRootProps()}>\n        <Label {...getInputLabelProps()}>useAutocomplete</Label>\n        <Input {...getInputProps()} />\n      </div>\n      {groupedOptions.length > 0 ? (\n        <Listbox {...getListboxProps()}>\n          {groupedOptions.map((option, index) => (\n            <li {...getOptionProps({ option, index })}>{option.title}</li>\n          ))}\n        </Listbox>\n      ) : null}\n    </div>\n  );\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n  { title: 'The Shawshank Redemption', year: 1994 },\n  { title: 'The Godfather', year: 1972 },\n  { title: 'The Godfather: Part II', year: 1974 },\n  { title: 'The Dark Knight', year: 2008 },\n  { title: '12 Angry Men', year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n  { title: 'Pulp Fiction', year: 1994 },\n  {\n    title: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\n  { title: 'Fight Club', year: 1999 },\n  {\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { title: 'Forrest Gump', year: 1994 },\n  { title: 'Inception', year: 2010 },\n  {\n    title: 'The Lord of the Rings: The Two Towers',\n    year: 2002,\n  },\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { title: 'Goodfellas', year: 1990 },\n  { title: 'The Matrix', year: 1999 },\n  { title: 'Seven Samurai', year: 1954 },\n  {\n    title: 'Star Wars: Episode IV - A New Hope',\n    year: 1977,\n  },\n  { title: 'City of God', year: 2002 },\n  { title: 'Se7en', year: 1995 },\n  { title: 'The Silence of the Lambs', year: 1991 },\n  { title: \"It's a Wonderful Life\", year: 1946 },\n  { title: 'Life Is Beautiful', year: 1997 },\n  { title: 'The Usual Suspects', year: 1995 },\n  { title: 'L\xe9on: The Professional', year: 1994 },\n  { title: 'Spirited Away', year: 2001 },\n  { title: 'Saving Private Ryan', year: 1998 },\n  { title: 'Once Upon a Time in the West', year: 1968 },\n  { title: 'American History X', year: 1998 },\n  { title: 'Interstellar', year: 2014 },\n  { title: 'Casablanca', year: 1942 },\n  { title: 'City Lights', year: 1931 },\n  { title: 'Psycho', year: 1960 },\n  { title: 'The Green Mile', year: 1999 },\n  { title: 'The Intouchables', year: 2011 },\n  { title: 'Modern Times', year: 1936 },\n  { title: 'Raiders of the Lost Ark', year: 1981 },\n  { title: 'Rear Window', year: 1954 },\n  { title: 'The Pianist', year: 2002 },\n  { title: 'The Departed', year: 2006 },\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\n  { title: 'Back to the Future', year: 1985 },\n  { title: 'Whiplash', year: 2014 },\n  { title: 'Gladiator', year: 2000 },\n  { title: 'Memento', year: 2000 },\n  { title: 'The Prestige', year: 2006 },\n  { title: 'The Lion King', year: 1994 },\n  { title: 'Apocalypse Now', year: 1979 },\n  { title: 'Alien', year: 1979 },\n  { title: 'Sunset Boulevard', year: 1950 },\n  {\n    title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964,\n  },\n  { title: 'The Great Dictator', year: 1940 },\n  { title: 'Cinema Paradiso', year: 1988 },\n  { title: 'The Lives of Others', year: 2006 },\n  { title: 'Grave of the Fireflies', year: 1988 },\n  { title: 'Paths of Glory', year: 1957 },\n  { title: 'Django Unchained', year: 2012 },\n  { title: 'The Shining', year: 1980 },\n  { title: 'WALL\xb7E', year: 2008 },\n  { title: 'American Beauty', year: 1999 },\n  { title: 'The Dark Knight Rises', year: 2012 },\n  { title: 'Princess Mononoke', year: 1997 },\n  { title: 'Aliens', year: 1986 },\n  { title: 'Oldboy', year: 2003 },\n  { title: 'Once Upon a Time in America', year: 1984 },\n  { title: 'Witness for the Prosecution', year: 1957 },\n  { title: 'Das Boot', year: 1981 },\n  { title: 'Citizen Kane', year: 1941 },\n  { title: 'North by Northwest', year: 1959 },\n  { title: 'Vertigo', year: 1958 },\n  {\n    title: 'Star Wars: Episode VI - Return of the Jedi',\n    year: 1983,\n  },\n  { title: 'Reservoir Dogs', year: 1992 },\n  { title: 'Braveheart', year: 1995 },\n  { title: 'M', year: 1931 },\n  { title: 'Requiem for a Dream', year: 2000 },\n  { title: 'Am\xe9lie', year: 2001 },\n  { title: 'A Clockwork Orange', year: 1971 },\n  { title: 'Like Stars on Earth', year: 2007 },\n  { title: 'Taxi Driver', year: 1976 },\n  { title: 'Lawrence of Arabia', year: 1962 },\n  { title: 'Double Indemnity', year: 1944 },\n  {\n    title: 'Eternal Sunshine of the Spotless Mind',\n    year: 2004,\n  },\n  { title: 'Amadeus', year: 1984 },\n  { title: 'To Kill a Mockingbird', year: 1962 },\n  { title: 'Toy Story 3', year: 2010 },\n  { title: 'Logan', year: 2017 },\n  { title: 'Full Metal Jacket', year: 1987 },\n  { title: 'Dangal', year: 2016 },\n  { title: 'The Sting', year: 1973 },\n  { title: '2001: A Space Odyssey', year: 1968 },\n  { title: \"Singin' in the Rain\", year: 1952 },\n  { title: 'Toy Story', year: 1995 },\n  { title: 'Bicycle Thieves', year: 1948 },\n  { title: 'The Kid', year: 1921 },\n  { title: 'Inglourious Basterds', year: 2009 },\n  { title: 'Snatch', year: 2000 },\n  { title: '3 Idiots', year: 2009 },\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\n];\n"},2089:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return j}));var a,i=n(8),r=n(127),l=n(98),o=(n(1),n(1541)),s=n(1573),c=n.n(s),d=n(1590),y=n.n(d),h=n(14),p=n(0),u=["label","onDelete"],m=Object(h.a)("div")((function(e){var t=e.theme;return"\n  color: ".concat("dark"===t.palette.mode?"rgba(255,255,255,0.65)":"rgba(0,0,0,.85)",";\n  font-size: 14px;\n")})),b=Object(h.a)("label")(a||(a=Object(l.a)(["\n  padding: 0 0 4px;\n  line-height: 1.5;\n  display: block;\n"]))),f=Object(h.a)("div")((function(e){var t=e.theme;return"\n  width: 300px;\n  border: 1px solid ".concat("dark"===t.palette.mode?"#434343":"#d9d9d9",";\n  background-color: ").concat("dark"===t.palette.mode?"#141414":"#fff",";\n  border-radius: 4px;\n  padding: 1px;\n  display: flex;\n  flex-wrap: wrap;\n\n  &:hover {\n    border-color: ").concat("dark"===t.palette.mode?"#177ddc":"#40a9ff",";\n  }\n\n  &.focused {\n    border-color: ").concat("dark"===t.palette.mode?"#177ddc":"#40a9ff",";\n    box-shadow: 0 0 0 2px rgba(24, 144, 255, 0.2);\n  }\n\n  & input {\n    background-color: ").concat("dark"===t.palette.mode?"#141414":"#fff",";\n    color: ").concat("dark"===t.palette.mode?"rgba(255,255,255,0.65)":"rgba(0,0,0,.85)",";\n    height: 30px;\n    box-sizing: border-box;\n    padding: 4px 6px;\n    width: 0;\n    min-width: 30px;\n    flex-grow: 1;\n    border: 0;\n    margin: 0;\n    outline: 0;\n  }\n")}));var g=Object(h.a)((function(e){var t=e.label,n=e.onDelete,a=Object(r.a)(e,u);return Object(p.jsxs)("div",Object(i.a)(Object(i.a)({},a),{},{children:[Object(p.jsx)("span",{children:t}),Object(p.jsx)(y.a,{onClick:n})]}))}))((function(e){var t=e.theme;return"\n  display: flex;\n  align-items: center;\n  height: 24px;\n  margin: 2px;\n  line-height: 22px;\n  background-color: ".concat("dark"===t.palette.mode?"rgba(255,255,255,0.08)":"#fafafa",";\n  border: 1px solid ").concat("dark"===t.palette.mode?"#303030":"#e8e8e8",";\n  border-radius: 2px;\n  box-sizing: content-box;\n  padding: 0 4px 0 10px;\n  outline: 0;\n  overflow: hidden;\n\n  &:focus {\n    border-color: ").concat("dark"===t.palette.mode?"#177ddc":"#40a9ff",";\n    background-color: ").concat("dark"===t.palette.mode?"#003b57":"#e6f7ff",";\n  }\n\n  & span {\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n  }\n\n  & svg {\n    font-size: 12px;\n    cursor: pointer;\n    padding: 4px;\n  }\n")})),T=Object(h.a)("ul")((function(e){var t=e.theme;return"\n  width: 300px;\n  margin: 2px 0 0;\n  padding: 0;\n  position: absolute;\n  list-style: none;\n  background-color: ".concat("dark"===t.palette.mode?"#141414":"#fff",";\n  overflow: auto;\n  max-height: 250px;\n  border-radius: 4px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\n  z-index: 1;\n\n  & li {\n    padding: 5px 12px;\n    display: flex;\n\n    & span {\n      flex-grow: 1;\n    }\n\n    & svg {\n      color: transparent;\n    }\n  }\n\n  & li[aria-selected='true'] {\n    background-color: ").concat("dark"===t.palette.mode?"#2b2b2b":"#fafafa",";\n    font-weight: 600;\n\n    & svg {\n      color: #1890ff;\n    }\n  }\n\n  & li[data-focus='true'] {\n    background-color: ").concat("dark"===t.palette.mode?"#003b57":"#e6f7ff",";\n    cursor: pointer;\n\n    & svg {\n      color: currentColor;\n    }\n  }\n")}));function j(){var e=Object(o.b)({id:"customized-hook-demo",defaultValue:[O[1]],multiple:!0,options:O,getOptionLabel:function(e){return e.title}}),t=e.getRootProps,n=e.getInputLabelProps,a=e.getInputProps,r=e.getTagProps,l=e.getListboxProps,s=e.getOptionProps,d=e.groupedOptions,y=e.value,h=e.focused,u=e.setAnchorEl;return Object(p.jsxs)(m,{children:[Object(p.jsxs)("div",Object(i.a)(Object(i.a)({},t()),{},{children:[Object(p.jsx)(b,Object(i.a)(Object(i.a)({},n()),{},{children:"Customized hook"})),Object(p.jsxs)(f,{ref:u,className:h?"focused":"",children:[y.map((function(e,t){return Object(p.jsx)(g,Object(i.a)({label:e.title},r({index:t})))})),Object(p.jsx)("input",Object(i.a)({},a()))]})]})),d.length>0?Object(p.jsx)(T,Object(i.a)(Object(i.a)({},l()),{},{children:d.map((function(e,t){return Object(p.jsxs)("li",Object(i.a)(Object(i.a)({},s({option:e,index:t})),{},{children:[Object(p.jsx)("span",{children:e.title}),Object(p.jsx)(c.a,{fontSize:"small"})]}))}))})):null]})}var O=[{title:"The Shawshank Redemption",year:1994},{title:"The Godfather",year:1972},{title:"The Godfather: Part II",year:1974},{title:"The Dark Knight",year:2008},{title:"12 Angry Men",year:1957},{title:"Schindler's List",year:1993},{title:"Pulp Fiction",year:1994},{title:"The Lord of the Rings: The Return of the King",year:2003},{title:"The Good, the Bad and the Ugly",year:1966},{title:"Fight Club",year:1999},{title:"The Lord of the Rings: The Fellowship of the Ring",year:2001},{title:"Star Wars: Episode V - The Empire Strikes Back",year:1980},{title:"Forrest Gump",year:1994},{title:"Inception",year:2010},{title:"The Lord of the Rings: The Two Towers",year:2002},{title:"One Flew Over the Cuckoo's Nest",year:1975},{title:"Goodfellas",year:1990},{title:"The Matrix",year:1999},{title:"Seven Samurai",year:1954},{title:"Star Wars: Episode IV - A New Hope",year:1977},{title:"City of God",year:2002},{title:"Se7en",year:1995},{title:"The Silence of the Lambs",year:1991},{title:"It's a Wonderful Life",year:1946},{title:"Life Is Beautiful",year:1997},{title:"The Usual Suspects",year:1995},{title:"L\xe9on: The Professional",year:1994},{title:"Spirited Away",year:2001},{title:"Saving Private Ryan",year:1998},{title:"Once Upon a Time in the West",year:1968},{title:"American History X",year:1998},{title:"Interstellar",year:2014},{title:"Casablanca",year:1942},{title:"City Lights",year:1931},{title:"Psycho",year:1960},{title:"The Green Mile",year:1999},{title:"The Intouchables",year:2011},{title:"Modern Times",year:1936},{title:"Raiders of the Lost Ark",year:1981},{title:"Rear Window",year:1954},{title:"The Pianist",year:2002},{title:"The Departed",year:2006},{title:"Terminator 2: Judgment Day",year:1991},{title:"Back to the Future",year:1985},{title:"Whiplash",year:2014},{title:"Gladiator",year:2e3},{title:"Memento",year:2e3},{title:"The Prestige",year:2006},{title:"The Lion King",year:1994},{title:"Apocalypse Now",year:1979},{title:"Alien",year:1979},{title:"Sunset Boulevard",year:1950},{title:"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb",year:1964},{title:"The Great Dictator",year:1940},{title:"Cinema Paradiso",year:1988},{title:"The Lives of Others",year:2006},{title:"Grave of the Fireflies",year:1988},{title:"Paths of Glory",year:1957},{title:"Django Unchained",year:2012},{title:"The Shining",year:1980},{title:"WALL\xb7E",year:2008},{title:"American Beauty",year:1999},{title:"The Dark Knight Rises",year:2012},{title:"Princess Mononoke",year:1997},{title:"Aliens",year:1986},{title:"Oldboy",year:2003},{title:"Once Upon a Time in America",year:1984},{title:"Witness for the Prosecution",year:1957},{title:"Das Boot",year:1981},{title:"Citizen Kane",year:1941},{title:"North by Northwest",year:1959},{title:"Vertigo",year:1958},{title:"Star Wars: Episode VI - Return of the Jedi",year:1983},{title:"Reservoir Dogs",year:1992},{title:"Braveheart",year:1995},{title:"M",year:1931},{title:"Requiem for a Dream",year:2e3},{title:"Am\xe9lie",year:2001},{title:"A Clockwork Orange",year:1971},{title:"Like Stars on Earth",year:2007},{title:"Taxi Driver",year:1976},{title:"Lawrence of Arabia",year:1962},{title:"Double Indemnity",year:1944},{title:"Eternal Sunshine of the Spotless Mind",year:2004},{title:"Amadeus",year:1984},{title:"To Kill a Mockingbird",year:1962},{title:"Toy Story 3",year:2010},{title:"Logan",year:2017},{title:"Full Metal Jacket",year:1987},{title:"Dangal",year:2016},{title:"The Sting",year:1973},{title:"2001: A Space Odyssey",year:1968},{title:"Singin' in the Rain",year:1952},{title:"Toy Story",year:1995},{title:"Bicycle Thieves",year:1948},{title:"The Kid",year:1921},{title:"Inglourious Basterds",year:2009},{title:"Snatch",year:2e3},{title:"3 Idiots",year:2009},{title:"Monty Python and the Holy Grail",year:1975}]},2090:function(e,t,n){"use strict";n.r(t),t.default="import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useAutocomplete } from '@mui/core/AutocompleteUnstyled';\nimport CheckIcon from '@mui/icons-material/Check';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { styled } from '@mui/material/styles';\n\nconst Root = styled('div')(\n  ({ theme }) => `\n  color: ${\n    theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.65)' : 'rgba(0,0,0,.85)'\n  };\n  font-size: 14px;\n`,\n);\n\nconst Label = styled('label')`\n  padding: 0 0 4px;\n  line-height: 1.5;\n  display: block;\n`;\n\nconst InputWrapper = styled('div')(\n  ({ theme }) => `\n  width: 300px;\n  border: 1px solid ${theme.palette.mode === 'dark' ? '#434343' : '#d9d9d9'};\n  background-color: ${theme.palette.mode === 'dark' ? '#141414' : '#fff'};\n  border-radius: 4px;\n  padding: 1px;\n  display: flex;\n  flex-wrap: wrap;\n\n  &:hover {\n    border-color: ${theme.palette.mode === 'dark' ? '#177ddc' : '#40a9ff'};\n  }\n\n  &.focused {\n    border-color: ${theme.palette.mode === 'dark' ? '#177ddc' : '#40a9ff'};\n    box-shadow: 0 0 0 2px rgba(24, 144, 255, 0.2);\n  }\n\n  & input {\n    background-color: ${theme.palette.mode === 'dark' ? '#141414' : '#fff'};\n    color: ${\n      theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.65)' : 'rgba(0,0,0,.85)'\n    };\n    height: 30px;\n    box-sizing: border-box;\n    padding: 4px 6px;\n    width: 0;\n    min-width: 30px;\n    flex-grow: 1;\n    border: 0;\n    margin: 0;\n    outline: 0;\n  }\n`,\n);\n\nfunction Tag(props) {\n  const { label, onDelete, ...other } = props;\n  return (\n    <div {...other}>\n      <span>{label}</span>\n      <CloseIcon onClick={onDelete} />\n    </div>\n  );\n}\n\nTag.propTypes = {\n  label: PropTypes.string.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nconst StyledTag = styled(Tag)(\n  ({ theme }) => `\n  display: flex;\n  align-items: center;\n  height: 24px;\n  margin: 2px;\n  line-height: 22px;\n  background-color: ${\n    theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.08)' : '#fafafa'\n  };\n  border: 1px solid ${theme.palette.mode === 'dark' ? '#303030' : '#e8e8e8'};\n  border-radius: 2px;\n  box-sizing: content-box;\n  padding: 0 4px 0 10px;\n  outline: 0;\n  overflow: hidden;\n\n  &:focus {\n    border-color: ${theme.palette.mode === 'dark' ? '#177ddc' : '#40a9ff'};\n    background-color: ${theme.palette.mode === 'dark' ? '#003b57' : '#e6f7ff'};\n  }\n\n  & span {\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n  }\n\n  & svg {\n    font-size: 12px;\n    cursor: pointer;\n    padding: 4px;\n  }\n`,\n);\n\nconst Listbox = styled('ul')(\n  ({ theme }) => `\n  width: 300px;\n  margin: 2px 0 0;\n  padding: 0;\n  position: absolute;\n  list-style: none;\n  background-color: ${theme.palette.mode === 'dark' ? '#141414' : '#fff'};\n  overflow: auto;\n  max-height: 250px;\n  border-radius: 4px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\n  z-index: 1;\n\n  & li {\n    padding: 5px 12px;\n    display: flex;\n\n    & span {\n      flex-grow: 1;\n    }\n\n    & svg {\n      color: transparent;\n    }\n  }\n\n  & li[aria-selected='true'] {\n    background-color: ${theme.palette.mode === 'dark' ? '#2b2b2b' : '#fafafa'};\n    font-weight: 600;\n\n    & svg {\n      color: #1890ff;\n    }\n  }\n\n  & li[data-focus='true'] {\n    background-color: ${theme.palette.mode === 'dark' ? '#003b57' : '#e6f7ff'};\n    cursor: pointer;\n\n    & svg {\n      color: currentColor;\n    }\n  }\n`,\n);\n\nexport default function CustomizedHook() {\n  const {\n    getRootProps,\n    getInputLabelProps,\n    getInputProps,\n    getTagProps,\n    getListboxProps,\n    getOptionProps,\n    groupedOptions,\n    value,\n    focused,\n    setAnchorEl,\n  } = useAutocomplete({\n    id: 'customized-hook-demo',\n    defaultValue: [top100Films[1]],\n    multiple: true,\n    options: top100Films,\n    getOptionLabel: (option) => option.title,\n  });\n\n  return (\n    <Root>\n      <div {...getRootProps()}>\n        <Label {...getInputLabelProps()}>Customized hook</Label>\n        <InputWrapper ref={setAnchorEl} className={focused ? 'focused' : ''}>\n          {value.map((option, index) => (\n            <StyledTag label={option.title} {...getTagProps({ index })} />\n          ))}\n\n          <input {...getInputProps()} />\n        </InputWrapper>\n      </div>\n      {groupedOptions.length > 0 ? (\n        <Listbox {...getListboxProps()}>\n          {groupedOptions.map((option, index) => (\n            <li {...getOptionProps({ option, index })}>\n              <span>{option.title}</span>\n              <CheckIcon fontSize=\"small\" />\n            </li>\n          ))}\n        </Listbox>\n      ) : null}\n    </Root>\n  );\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n  { title: 'The Shawshank Redemption', year: 1994 },\n  { title: 'The Godfather', year: 1972 },\n  { title: 'The Godfather: Part II', year: 1974 },\n  { title: 'The Dark Knight', year: 2008 },\n  { title: '12 Angry Men', year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n  { title: 'Pulp Fiction', year: 1994 },\n  {\n    title: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\n  { title: 'Fight Club', year: 1999 },\n  {\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { title: 'Forrest Gump', year: 1994 },\n  { title: 'Inception', year: 2010 },\n  {\n    title: 'The Lord of the Rings: The Two Towers',\n    year: 2002,\n  },\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { title: 'Goodfellas', year: 1990 },\n  { title: 'The Matrix', year: 1999 },\n  { title: 'Seven Samurai', year: 1954 },\n  {\n    title: 'Star Wars: Episode IV - A New Hope',\n    year: 1977,\n  },\n  { title: 'City of God', year: 2002 },\n  { title: 'Se7en', year: 1995 },\n  { title: 'The Silence of the Lambs', year: 1991 },\n  { title: \"It's a Wonderful Life\", year: 1946 },\n  { title: 'Life Is Beautiful', year: 1997 },\n  { title: 'The Usual Suspects', year: 1995 },\n  { title: 'L\xe9on: The Professional', year: 1994 },\n  { title: 'Spirited Away', year: 2001 },\n  { title: 'Saving Private Ryan', year: 1998 },\n  { title: 'Once Upon a Time in the West', year: 1968 },\n  { title: 'American History X', year: 1998 },\n  { title: 'Interstellar', year: 2014 },\n  { title: 'Casablanca', year: 1942 },\n  { title: 'City Lights', year: 1931 },\n  { title: 'Psycho', year: 1960 },\n  { title: 'The Green Mile', year: 1999 },\n  { title: 'The Intouchables', year: 2011 },\n  { title: 'Modern Times', year: 1936 },\n  { title: 'Raiders of the Lost Ark', year: 1981 },\n  { title: 'Rear Window', year: 1954 },\n  { title: 'The Pianist', year: 2002 },\n  { title: 'The Departed', year: 2006 },\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\n  { title: 'Back to the Future', year: 1985 },\n  { title: 'Whiplash', year: 2014 },\n  { title: 'Gladiator', year: 2000 },\n  { title: 'Memento', year: 2000 },\n  { title: 'The Prestige', year: 2006 },\n  { title: 'The Lion King', year: 1994 },\n  { title: 'Apocalypse Now', year: 1979 },\n  { title: 'Alien', year: 1979 },\n  { title: 'Sunset Boulevard', year: 1950 },\n  {\n    title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964,\n  },\n  { title: 'The Great Dictator', year: 1940 },\n  { title: 'Cinema Paradiso', year: 1988 },\n  { title: 'The Lives of Others', year: 2006 },\n  { title: 'Grave of the Fireflies', year: 1988 },\n  { title: 'Paths of Glory', year: 1957 },\n  { title: 'Django Unchained', year: 2012 },\n  { title: 'The Shining', year: 1980 },\n  { title: 'WALL\xb7E', year: 2008 },\n  { title: 'American Beauty', year: 1999 },\n  { title: 'The Dark Knight Rises', year: 2012 },\n  { title: 'Princess Mononoke', year: 1997 },\n  { title: 'Aliens', year: 1986 },\n  { title: 'Oldboy', year: 2003 },\n  { title: 'Once Upon a Time in America', year: 1984 },\n  { title: 'Witness for the Prosecution', year: 1957 },\n  { title: 'Das Boot', year: 1981 },\n  { title: 'Citizen Kane', year: 1941 },\n  { title: 'North by Northwest', year: 1959 },\n  { title: 'Vertigo', year: 1958 },\n  {\n    title: 'Star Wars: Episode VI - Return of the Jedi',\n    year: 1983,\n  },\n  { title: 'Reservoir Dogs', year: 1992 },\n  { title: 'Braveheart', year: 1995 },\n  { title: 'M', year: 1931 },\n  { title: 'Requiem for a Dream', year: 2000 },\n  { title: 'Am\xe9lie', year: 2001 },\n  { title: 'A Clockwork Orange', year: 1971 },\n  { title: 'Like Stars on Earth', year: 2007 },\n  { title: 'Taxi Driver', year: 1976 },\n  { title: 'Lawrence of Arabia', year: 1962 },\n  { title: 'Double Indemnity', year: 1944 },\n  {\n    title: 'Eternal Sunshine of the Spotless Mind',\n    year: 2004,\n  },\n  { title: 'Amadeus', year: 1984 },\n  { title: 'To Kill a Mockingbird', year: 1962 },\n  { title: 'Toy Story 3', year: 2010 },\n  { title: 'Logan', year: 2017 },\n  { title: 'Full Metal Jacket', year: 1987 },\n  { title: 'Dangal', year: 2016 },\n  { title: 'The Sting', year: 1973 },\n  { title: '2001: A Space Odyssey', year: 1968 },\n  { title: \"Singin' in the Rain\", year: 1952 },\n  { title: 'Toy Story', year: 1995 },\n  { title: 'Bicycle Thieves', year: 1948 },\n  { title: 'The Kid', year: 1921 },\n  { title: 'Inglourious Basterds', year: 2009 },\n  { title: 'Snatch', year: 2000 },\n  { title: '3 Idiots', year: 2009 },\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\n];\n"},2091:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return u}));var a=n(8),i=n(3),r=n.n(i),l=n(7),o=n(17),s=n(1),c=n(1335),d=n(1663),y=n(1513),h=n(0);function p(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;return new Promise((function(t){setTimeout(t,e)}))}function u(){var e=s.useState(!1),t=Object(o.a)(e,2),n=t[0],i=t[1],u=s.useState([]),b=Object(o.a)(u,2),f=b[0],g=b[1],T=n&&0===f.length;return s.useEffect((function(){var e=!0;if(T)return Object(l.a)(r.a.mark((function t(){return r.a.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,p(1e3);case 2:e&&g([].concat(m));case 3:case"end":return t.stop()}}),t)})))(),function(){e=!1}}),[T]),s.useEffect((function(){n||g([])}),[n]),Object(h.jsx)(d.a,{id:"asynchronous-demo",sx:{width:300},open:n,onOpen:function(){i(!0)},onClose:function(){i(!1)},isOptionEqualToValue:function(e,t){return e.title===t.title},getOptionLabel:function(e){return e.title},options:f,loading:T,renderInput:function(e){return Object(h.jsx)(c.a,Object(a.a)(Object(a.a)({},e),{},{label:"Asynchronous",InputProps:Object(a.a)(Object(a.a)({},e.InputProps),{},{endAdornment:Object(h.jsxs)(s.Fragment,{children:[T?Object(h.jsx)(y.a,{color:"inherit",size:20}):null,e.InputProps.endAdornment]})})}))}})}var m=[{title:"The Shawshank Redemption",year:1994},{title:"The Godfather",year:1972},{title:"The Godfather: Part II",year:1974},{title:"The Dark Knight",year:2008},{title:"12 Angry Men",year:1957},{title:"Schindler's List",year:1993},{title:"Pulp Fiction",year:1994},{title:"The Lord of the Rings: The Return of the King",year:2003},{title:"The Good, the Bad and the Ugly",year:1966},{title:"Fight Club",year:1999},{title:"The Lord of the Rings: The Fellowship of the Ring",year:2001},{title:"Star Wars: Episode V - The Empire Strikes Back",year:1980},{title:"Forrest Gump",year:1994},{title:"Inception",year:2010},{title:"The Lord of the Rings: The Two Towers",year:2002},{title:"One Flew Over the Cuckoo's Nest",year:1975},{title:"Goodfellas",year:1990},{title:"The Matrix",year:1999},{title:"Seven Samurai",year:1954},{title:"Star Wars: Episode IV - A New Hope",year:1977},{title:"City of God",year:2002},{title:"Se7en",year:1995},{title:"The Silence of the Lambs",year:1991},{title:"It's a Wonderful Life",year:1946},{title:"Life Is Beautiful",year:1997},{title:"The Usual Suspects",year:1995},{title:"L\xe9on: The Professional",year:1994},{title:"Spirited Away",year:2001},{title:"Saving Private Ryan",year:1998},{title:"Once Upon a Time in the West",year:1968},{title:"American History X",year:1998},{title:"Interstellar",year:2014}]},2092:function(e,t,n){"use strict";n.r(t),t.default="import * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nfunction sleep(delay = 0) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n}\n\nexport default function Asynchronous() {\n  const [open, setOpen] = React.useState(false);\n  const [options, setOptions] = React.useState([]);\n  const loading = open && options.length === 0;\n\n  React.useEffect(() => {\n    let active = true;\n\n    if (!loading) {\n      return undefined;\n    }\n\n    (async () => {\n      await sleep(1e3); // For demo purposes.\n\n      if (active) {\n        setOptions([...topFilms]);\n      }\n    })();\n\n    return () => {\n      active = false;\n    };\n  }, [loading]);\n\n  React.useEffect(() => {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n\n  return (\n    <Autocomplete\n      id=\"asynchronous-demo\"\n      sx={{ width: 300 }}\n      open={open}\n      onOpen={() => {\n        setOpen(true);\n      }}\n      onClose={() => {\n        setOpen(false);\n      }}\n      isOptionEqualToValue={(option, value) => option.title === value.title}\n      getOptionLabel={(option) => option.title}\n      options={options}\n      loading={loading}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label=\"Asynchronous\"\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <React.Fragment>\n                {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\n                {params.InputProps.endAdornment}\n              </React.Fragment>\n            ),\n          }}\n        />\n      )}\n    />\n  );\n}\n\n// Top films as rated by IMDb users. http://www.imdb.com/chart/top\nconst topFilms = [\n  { title: 'The Shawshank Redemption', year: 1994 },\n  { title: 'The Godfather', year: 1972 },\n  { title: 'The Godfather: Part II', year: 1974 },\n  { title: 'The Dark Knight', year: 2008 },\n  { title: '12 Angry Men', year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n  { title: 'Pulp Fiction', year: 1994 },\n  {\n    title: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\n  { title: 'Fight Club', year: 1999 },\n  {\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { title: 'Forrest Gump', year: 1994 },\n  { title: 'Inception', year: 2010 },\n  {\n    title: 'The Lord of the Rings: The Two Towers',\n    year: 2002,\n  },\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { title: 'Goodfellas', year: 1990 },\n  { title: 'The Matrix', year: 1999 },\n  { title: 'Seven Samurai', year: 1954 },\n  {\n    title: 'Star Wars: Episode IV - A New Hope',\n    year: 1977,\n  },\n  { title: 'City of God', year: 2002 },\n  { title: 'Se7en', year: 1995 },\n  { title: 'The Silence of the Lambs', year: 1991 },\n  { title: \"It's a Wonderful Life\", year: 1946 },\n  { title: 'Life Is Beautiful', year: 1997 },\n  { title: 'The Usual Suspects', year: 1995 },\n  { title: 'L\xe9on: The Professional', year: 1994 },\n  { title: 'Spirited Away', year: 2001 },\n  { title: 'Saving Private Ryan', year: 1998 },\n  { title: 'Once Upon a Time in the West', year: 1968 },\n  { title: 'American History X', year: 1998 },\n  { title: 'Interstellar', year: 2014 },\n];\n"},2093:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return j}));var a=n(8),i=n(20),r=n(17),l=n(1),o=n(1389),s=n(1335),c=n(1663),d=n(1728),y=n.n(d),h=n(1457),p=n(222),u=n(553),m=n.n(u),b=n(2094),f=n.n(b),g=n(0);var T={current:null};function j(){var e=l.useState(null),t=Object(r.a)(e,2),n=t[0],d=t[1],u=l.useState(""),b=Object(r.a)(u,2),j=b[0],O=b[1],S=l.useState([]),x=Object(r.a)(S,2),v=x[0],w=x[1],A=l.useRef(!1);"undefined"===typeof window||A.current||(document.querySelector("#google-maps")||function(e,t,n){if(t){var a=document.createElement("script");a.setAttribute("async",""),a.setAttribute("id",n),a.src=e,t.appendChild(a)}}("https://maps.googleapis.com/maps/api/js?key=AIzaSyBwRp1e12ec1vOTtGiA4fcCt2sCUS78UYc&libraries=places",document.querySelector("head"),"google-maps"),A.current=!0);var L=l.useMemo((function(){return f()((function(e,t){T.current.getPlacePredictions(e,t)}),200)}),[]);return l.useEffect((function(){var e=!0;if(!T.current&&window.google&&(T.current=new window.google.maps.places.AutocompleteService),T.current){if(""!==j)return L({input:j},(function(t){if(e){var a=[];n&&(a=[n]),t&&(a=[].concat(Object(i.a)(a),Object(i.a)(t))),w(a)}})),function(){e=!1};w(n?[n]:[])}}),[n,j,L]),Object(g.jsx)(c.a,{id:"google-map-demo",sx:{width:300},getOptionLabel:function(e){return"string"===typeof e?e:e.description},filterOptions:function(e){return e},options:v,autoComplete:!0,includeInputInList:!0,filterSelectedOptions:!0,value:n,onChange:function(e,t){w(t?[t].concat(Object(i.a)(v)):v),d(t)},onInputChange:function(e,t){O(t)},renderInput:function(e){return Object(g.jsx)(s.a,Object(a.a)(Object(a.a)({},e),{},{label:"Add a location",fullWidth:!0}))},renderOption:function(e,t){var n=t.structured_formatting.main_text_matched_substrings,i=m()(t.structured_formatting.main_text,n.map((function(e){return[e.offset,e.offset+e.length]})));return Object(g.jsx)("li",Object(a.a)(Object(a.a)({},e),{},{children:Object(g.jsxs)(h.a,{container:!0,alignItems:"center",children:[Object(g.jsx)(h.a,{item:!0,children:Object(g.jsx)(o.a,{component:y.a,sx:{color:"text.secondary",mr:2}})}),Object(g.jsxs)(h.a,{item:!0,xs:!0,children:[i.map((function(e,t){return Object(g.jsx)("span",{style:{fontWeight:e.highlight?700:400},children:e.text},t)})),Object(g.jsx)(p.a,{variant:"body2",color:"text.secondary",children:t.structured_formatting.secondary_text})]})]})}))}})}},2100:function(e,t,n){"use strict";n.r(t),t.default="import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport parse from 'autosuggest-highlight/parse';\nimport throttle from 'lodash/throttle';\n\nfunction loadScript(src, position, id) {\n  if (!position) {\n    return;\n  }\n\n  const script = document.createElement('script');\n  script.setAttribute('async', '');\n  script.setAttribute('id', id);\n  script.src = src;\n  position.appendChild(script);\n}\n\nconst autocompleteService = { current: null };\n\nexport default function GoogleMaps() {\n  const [value, setValue] = React.useState(null);\n  const [inputValue, setInputValue] = React.useState('');\n  const [options, setOptions] = React.useState([]);\n  const loaded = React.useRef(false);\n\n  if (typeof window !== 'undefined' && !loaded.current) {\n    if (!document.querySelector('#google-maps')) {\n      loadScript(\n        'https://maps.googleapis.com/maps/api/js?key=AIzaSyBwRp1e12ec1vOTtGiA4fcCt2sCUS78UYc&libraries=places',\n        document.querySelector('head'),\n        'google-maps',\n      );\n    }\n\n    loaded.current = true;\n  }\n\n  const fetch = React.useMemo(\n    () =>\n      throttle((request, callback) => {\n        autocompleteService.current.getPlacePredictions(request, callback);\n      }, 200),\n    [],\n  );\n\n  React.useEffect(() => {\n    let active = true;\n\n    if (!autocompleteService.current && window.google) {\n      autocompleteService.current =\n        new window.google.maps.places.AutocompleteService();\n    }\n    if (!autocompleteService.current) {\n      return undefined;\n    }\n\n    if (inputValue === '') {\n      setOptions(value ? [value] : []);\n      return undefined;\n    }\n\n    fetch({ input: inputValue }, (results) => {\n      if (active) {\n        let newOptions = [];\n\n        if (value) {\n          newOptions = [value];\n        }\n\n        if (results) {\n          newOptions = [...newOptions, ...results];\n        }\n\n        setOptions(newOptions);\n      }\n    });\n\n    return () => {\n      active = false;\n    };\n  }, [value, inputValue, fetch]);\n\n  return (\n    <Autocomplete\n      id=\"google-map-demo\"\n      sx={{ width: 300 }}\n      getOptionLabel={(option) =>\n        typeof option === 'string' ? option : option.description\n      }\n      filterOptions={(x) => x}\n      options={options}\n      autoComplete\n      includeInputInList\n      filterSelectedOptions\n      value={value}\n      onChange={(event, newValue) => {\n        setOptions(newValue ? [newValue, ...options] : options);\n        setValue(newValue);\n      }}\n      onInputChange={(event, newInputValue) => {\n        setInputValue(newInputValue);\n      }}\n      renderInput={(params) => (\n        <TextField {...params} label=\"Add a location\" fullWidth />\n      )}\n      renderOption={(props, option) => {\n        const matches = option.structured_formatting.main_text_matched_substrings;\n        const parts = parse(\n          option.structured_formatting.main_text,\n          matches.map((match) => [match.offset, match.offset + match.length]),\n        );\n\n        return (\n          <li {...props}>\n            <Grid container alignItems=\"center\">\n              <Grid item>\n                <Box\n                  component={LocationOnIcon}\n                  sx={{ color: 'text.secondary', mr: 2 }}\n                />\n              </Grid>\n              <Grid item xs>\n                {parts.map((part, index) => (\n                  <span\n                    key={index}\n                    style={{\n                      fontWeight: part.highlight ? 700 : 400,\n                    }}\n                  >\n                    {part.text}\n                  </span>\n                ))}\n\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  {option.structured_formatting.secondary_text}\n                </Typography>\n              </Grid>\n            </Grid>\n          </li>\n        );\n      }}\n    />\n  );\n}\n"},2101:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return c}));var a=n(8),i=(n(1),n(1564)),r=n(1663),l=n(1335),o=n(1422),s=n(0);function c(){return Object(s.jsxs)(o.a,{spacing:3,sx:{width:500},children:[Object(s.jsx)(r.a,{multiple:!0,id:"tags-standard",options:d,getOptionLabel:function(e){return e.title},defaultValue:[d[13]],renderInput:function(e){return Object(s.jsx)(l.a,Object(a.a)(Object(a.a)({},e),{},{variant:"standard",label:"Multiple values",placeholder:"Favorites"}))}}),Object(s.jsx)(r.a,{multiple:!0,id:"tags-outlined",options:d,getOptionLabel:function(e){return e.title},defaultValue:[d[13]],filterSelectedOptions:!0,renderInput:function(e){return Object(s.jsx)(l.a,Object(a.a)(Object(a.a)({},e),{},{label:"filterSelectedOptions",placeholder:"Favorites"}))}}),Object(s.jsx)(r.a,{multiple:!0,id:"tags-filled",options:d.map((function(e){return e.title})),defaultValue:[d[13].title],freeSolo:!0,renderTags:function(e,t){return e.map((function(e,n){return Object(s.jsx)(i.a,Object(a.a)({variant:"outlined",label:e},t({index:n})))}))},renderInput:function(e){return Object(s.jsx)(l.a,Object(a.a)(Object(a.a)({},e),{},{variant:"filled",label:"freeSolo",placeholder:"Favorites"}))}})]})}var d=[{title:"The Shawshank Redemption",year:1994},{title:"The Godfather",year:1972},{title:"The Godfather: Part II",year:1974},{title:"The Dark Knight",year:2008},{title:"12 Angry Men",year:1957},{title:"Schindler's List",year:1993},{title:"Pulp Fiction",year:1994},{title:"The Lord of the Rings: The Return of the King",year:2003},{title:"The Good, the Bad and the Ugly",year:1966},{title:"Fight Club",year:1999},{title:"The Lord of the Rings: The Fellowship of the Ring",year:2001},{title:"Star Wars: Episode V - The Empire Strikes Back",year:1980},{title:"Forrest Gump",year:1994},{title:"Inception",year:2010},{title:"The Lord of the Rings: The Two Towers",year:2002},{title:"One Flew Over the Cuckoo's Nest",year:1975},{title:"Goodfellas",year:1990},{title:"The Matrix",year:1999},{title:"Seven Samurai",year:1954},{title:"Star Wars: Episode IV - A New Hope",year:1977},{title:"City of God",year:2002},{title:"Se7en",year:1995},{title:"The Silence of the Lambs",year:1991},{title:"It's a Wonderful Life",year:1946},{title:"Life Is Beautiful",year:1997},{title:"The Usual Suspects",year:1995},{title:"L\xe9on: The Professional",year:1994},{title:"Spirited Away",year:2001},{title:"Saving Private Ryan",year:1998},{title:"Once Upon a Time in the West",year:1968},{title:"American History X",year:1998},{title:"Interstellar",year:2014},{title:"Casablanca",year:1942},{title:"City Lights",year:1931},{title:"Psycho",year:1960},{title:"The Green Mile",year:1999},{title:"The Intouchables",year:2011},{title:"Modern Times",year:1936},{title:"Raiders of the Lost Ark",year:1981},{title:"Rear Window",year:1954},{title:"The Pianist",year:2002},{title:"The Departed",year:2006},{title:"Terminator 2: Judgment Day",year:1991},{title:"Back to the Future",year:1985},{title:"Whiplash",year:2014},{title:"Gladiator",year:2e3},{title:"Memento",year:2e3},{title:"The Prestige",year:2006},{title:"The Lion King",year:1994},{title:"Apocalypse Now",year:1979},{title:"Alien",year:1979},{title:"Sunset Boulevard",year:1950},{title:"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb",year:1964},{title:"The Great Dictator",year:1940},{title:"Cinema Paradiso",year:1988},{title:"The Lives of Others",year:2006},{title:"Grave of the Fireflies",year:1988},{title:"Paths of Glory",year:1957},{title:"Django Unchained",year:2012},{title:"The Shining",year:1980},{title:"WALL\xb7E",year:2008},{title:"American Beauty",year:1999},{title:"The Dark Knight Rises",year:2012},{title:"Princess Mononoke",year:1997},{title:"Aliens",year:1986},{title:"Oldboy",year:2003},{title:"Once Upon a Time in America",year:1984},{title:"Witness for the Prosecution",year:1957},{title:"Das Boot",year:1981},{title:"Citizen Kane",year:1941},{title:"North by Northwest",year:1959},{title:"Vertigo",year:1958},{title:"Star Wars: Episode VI - Return of the Jedi",year:1983},{title:"Reservoir Dogs",year:1992},{title:"Braveheart",year:1995},{title:"M",year:1931},{title:"Requiem for a Dream",year:2e3},{title:"Am\xe9lie",year:2001},{title:"A Clockwork Orange",year:1971},{title:"Like Stars on Earth",year:2007},{title:"Taxi Driver",year:1976},{title:"Lawrence of Arabia",year:1962},{title:"Double Indemnity",year:1944},{title:"Eternal Sunshine of the Spotless Mind",year:2004},{title:"Amadeus",year:1984},{title:"To Kill a Mockingbird",year:1962},{title:"Toy Story 3",year:2010},{title:"Logan",year:2017},{title:"Full Metal Jacket",year:1987},{title:"Dangal",year:2016},{title:"The Sting",year:1973},{title:"2001: A Space Odyssey",year:1968},{title:"Singin' in the Rain",year:1952},{title:"Toy Story",year:1995},{title:"Bicycle Thieves",year:1948},{title:"The Kid",year:1921},{title:"Inglourious Basterds",year:2009},{title:"Snatch",year:2e3},{title:"3 Idiots",year:2009},{title:"Monty Python and the Holy Grail",year:1975}]},2102:function(e,t,n){"use strict";n.r(t),t.default="import * as React from 'react';\nimport Chip from '@mui/material/Chip';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport TextField from '@mui/material/TextField';\nimport Stack from '@mui/material/Stack';\n\nexport default function Tags() {\n  return (\n    <Stack spacing={3} sx={{ width: 500 }}>\n      <Autocomplete\n        multiple\n        id=\"tags-standard\"\n        options={top100Films}\n        getOptionLabel={(option) => option.title}\n        defaultValue={[top100Films[13]]}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            variant=\"standard\"\n            label=\"Multiple values\"\n            placeholder=\"Favorites\"\n          />\n        )}\n      />\n      <Autocomplete\n        multiple\n        id=\"tags-outlined\"\n        options={top100Films}\n        getOptionLabel={(option) => option.title}\n        defaultValue={[top100Films[13]]}\n        filterSelectedOptions\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            label=\"filterSelectedOptions\"\n            placeholder=\"Favorites\"\n          />\n        )}\n      />\n      <Autocomplete\n        multiple\n        id=\"tags-filled\"\n        options={top100Films.map((option) => option.title)}\n        defaultValue={[top100Films[13].title]}\n        freeSolo\n        renderTags={(value, getTagProps) =>\n          value.map((option, index) => (\n            <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n          ))\n        }\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            variant=\"filled\"\n            label=\"freeSolo\"\n            placeholder=\"Favorites\"\n          />\n        )}\n      />\n    </Stack>\n  );\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n  { title: 'The Shawshank Redemption', year: 1994 },\n  { title: 'The Godfather', year: 1972 },\n  { title: 'The Godfather: Part II', year: 1974 },\n  { title: 'The Dark Knight', year: 2008 },\n  { title: '12 Angry Men', year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n  { title: 'Pulp Fiction', year: 1994 },\n  {\n    title: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\n  { title: 'Fight Club', year: 1999 },\n  {\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { title: 'Forrest Gump', year: 1994 },\n  { title: 'Inception', year: 2010 },\n  {\n    title: 'The Lord of the Rings: The Two Towers',\n    year: 2002,\n  },\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { title: 'Goodfellas', year: 1990 },\n  { title: 'The Matrix', year: 1999 },\n  { title: 'Seven Samurai', year: 1954 },\n  {\n    title: 'Star Wars: Episode IV - A New Hope',\n    year: 1977,\n  },\n  { title: 'City of God', year: 2002 },\n  { title: 'Se7en', year: 1995 },\n  { title: 'The Silence of the Lambs', year: 1991 },\n  { title: \"It's a Wonderful Life\", year: 1946 },\n  { title: 'Life Is Beautiful', year: 1997 },\n  { title: 'The Usual Suspects', year: 1995 },\n  { title: 'L\xe9on: The Professional', year: 1994 },\n  { title: 'Spirited Away', year: 2001 },\n  { title: 'Saving Private Ryan', year: 1998 },\n  { title: 'Once Upon a Time in the West', year: 1968 },\n  { title: 'American History X', year: 1998 },\n  { title: 'Interstellar', year: 2014 },\n  { title: 'Casablanca', year: 1942 },\n  { title: 'City Lights', year: 1931 },\n  { title: 'Psycho', year: 1960 },\n  { title: 'The Green Mile', year: 1999 },\n  { title: 'The Intouchables', year: 2011 },\n  { title: 'Modern Times', year: 1936 },\n  { title: 'Raiders of the Lost Ark', year: 1981 },\n  { title: 'Rear Window', year: 1954 },\n  { title: 'The Pianist', year: 2002 },\n  { title: 'The Departed', year: 2006 },\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\n  { title: 'Back to the Future', year: 1985 },\n  { title: 'Whiplash', year: 2014 },\n  { title: 'Gladiator', year: 2000 },\n  { title: 'Memento', year: 2000 },\n  { title: 'The Prestige', year: 2006 },\n  { title: 'The Lion King', year: 1994 },\n  { title: 'Apocalypse Now', year: 1979 },\n  { title: 'Alien', year: 1979 },\n  { title: 'Sunset Boulevard', year: 1950 },\n  {\n    title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964,\n  },\n  { title: 'The Great Dictator', year: 1940 },\n  { title: 'Cinema Paradiso', year: 1988 },\n  { title: 'The Lives of Others', year: 2006 },\n  { title: 'Grave of the Fireflies', year: 1988 },\n  { title: 'Paths of Glory', year: 1957 },\n  { title: 'Django Unchained', year: 2012 },\n  { title: 'The Shining', year: 1980 },\n  { title: 'WALL\xb7E', year: 2008 },\n  { title: 'American Beauty', year: 1999 },\n  { title: 'The Dark Knight Rises', year: 2012 },\n  { title: 'Princess Mononoke', year: 1997 },\n  { title: 'Aliens', year: 1986 },\n  { title: 'Oldboy', year: 2003 },\n  { title: 'Once Upon a Time in America', year: 1984 },\n  { title: 'Witness for the Prosecution', year: 1957 },\n  { title: 'Das Boot', year: 1981 },\n  { title: 'Citizen Kane', year: 1941 },\n  { title: 'North by Northwest', year: 1959 },\n  { title: 'Vertigo', year: 1958 },\n  {\n    title: 'Star Wars: Episode VI - Return of the Jedi',\n    year: 1983,\n  },\n  { title: 'Reservoir Dogs', year: 1992 },\n  { title: 'Braveheart', year: 1995 },\n  { title: 'M', year: 1931 },\n  { title: 'Requiem for a Dream', year: 2000 },\n  { title: 'Am\xe9lie', year: 2001 },\n  { title: 'A Clockwork Orange', year: 1971 },\n  { title: 'Like Stars on Earth', year: 2007 },\n  { title: 'Taxi Driver', year: 1976 },\n  { title: 'Lawrence of Arabia', year: 1962 },\n  { title: 'Double Indemnity', year: 1944 },\n  {\n    title: 'Eternal Sunshine of the Spotless Mind',\n    year: 2004,\n  },\n  { title: 'Amadeus', year: 1984 },\n  { title: 'To Kill a Mockingbird', year: 1962 },\n  { title: 'Toy Story 3', year: 2010 },\n  { title: 'Logan', year: 2017 },\n  { title: 'Full Metal Jacket', year: 1987 },\n  { title: 'Dangal', year: 2016 },\n  { title: 'The Sting', year: 1973 },\n  { title: '2001: A Space Odyssey', year: 1968 },\n  { title: \"Singin' in the Rain\", year: 1952 },\n  { title: 'Toy Story', year: 1995 },\n  { title: 'Bicycle Thieves', year: 1948 },\n  { title: 'The Kid', year: 1921 },\n  { title: 'Inglourious Basterds', year: 2009 },\n  { title: 'Snatch', year: 2000 },\n  { title: '3 Idiots', year: 2009 },\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\n];\n"},2103:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return y}));var a=n(8),i=n(20),r=n(17),l=n(1),o=n(1564),s=n(1335),c=n(1663),d=n(0);function y(){var e=[h[6]],t=l.useState([].concat(e,[h[13]])),n=Object(r.a)(t,2),y=n[0],p=n[1];return Object(d.jsx)(c.a,{multiple:!0,id:"fixed-tags-demo",value:y,onChange:function(t,n){p([].concat(e,Object(i.a)(n.filter((function(t){return-1===e.indexOf(t)})))))},options:h,getOptionLabel:function(e){return e.title},renderTags:function(t,n){return t.map((function(t,i){return Object(d.jsx)(o.a,Object(a.a)(Object(a.a)({label:t.title},n({index:i})),{},{disabled:-1!==e.indexOf(t)}))}))},style:{width:500},renderInput:function(e){return Object(d.jsx)(s.a,Object(a.a)(Object(a.a)({},e),{},{label:"Fixed tag",placeholder:"Favorites"}))}})}var h=[{title:"The Shawshank Redemption",year:1994},{title:"The Godfather",year:1972},{title:"The Godfather: Part II",year:1974},{title:"The Dark Knight",year:2008},{title:"12 Angry Men",year:1957},{title:"Schindler's List",year:1993},{title:"Pulp Fiction",year:1994},{title:"The Lord of the Rings: The Return of the King",year:2003},{title:"The Good, the Bad and the Ugly",year:1966},{title:"Fight Club",year:1999},{title:"The Lord of the Rings: The Fellowship of the Ring",year:2001},{title:"Star Wars: Episode V - The Empire Strikes Back",year:1980},{title:"Forrest Gump",year:1994},{title:"Inception",year:2010},{title:"The Lord of the Rings: The Two Towers",year:2002},{title:"One Flew Over the Cuckoo's Nest",year:1975},{title:"Goodfellas",year:1990},{title:"The Matrix",year:1999},{title:"Seven Samurai",year:1954},{title:"Star Wars: Episode IV - A New Hope",year:1977},{title:"City of God",year:2002},{title:"Se7en",year:1995},{title:"The Silence of the Lambs",year:1991},{title:"It's a Wonderful Life",year:1946},{title:"Life Is Beautiful",year:1997},{title:"The Usual Suspects",year:1995},{title:"L\xe9on: The Professional",year:1994},{title:"Spirited Away",year:2001},{title:"Saving Private Ryan",year:1998},{title:"Once Upon a Time in the West",year:1968},{title:"American History X",year:1998},{title:"Interstellar",year:2014},{title:"Casablanca",year:1942},{title:"City Lights",year:1931},{title:"Psycho",year:1960},{title:"The Green Mile",year:1999},{title:"The Intouchables",year:2011},{title:"Modern Times",year:1936},{title:"Raiders of the Lost Ark",year:1981},{title:"Rear Window",year:1954},{title:"The Pianist",year:2002},{title:"The Departed",year:2006},{title:"Terminator 2: Judgment Day",year:1991},{title:"Back to the Future",year:1985},{title:"Whiplash",year:2014},{title:"Gladiator",year:2e3},{title:"Memento",year:2e3},{title:"The Prestige",year:2006},{title:"The Lion King",year:1994},{title:"Apocalypse Now",year:1979},{title:"Alien",year:1979},{title:"Sunset Boulevard",year:1950},{title:"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb",year:1964},{title:"The Great Dictator",year:1940},{title:"Cinema Paradiso",year:1988},{title:"The Lives of Others",year:2006},{title:"Grave of the Fireflies",year:1988},{title:"Paths of Glory",year:1957},{title:"Django Unchained",year:2012},{title:"The Shining",year:1980},{title:"WALL\xb7E",year:2008},{title:"American Beauty",year:1999},{title:"The Dark Knight Rises",year:2012},{title:"Princess Mononoke",year:1997},{title:"Aliens",year:1986},{title:"Oldboy",year:2003},{title:"Once Upon a Time in America",year:1984},{title:"Witness for the Prosecution",year:1957},{title:"Das Boot",year:1981},{title:"Citizen Kane",year:1941},{title:"North by Northwest",year:1959},{title:"Vertigo",year:1958},{title:"Star Wars: Episode VI - Return of the Jedi",year:1983},{title:"Reservoir Dogs",year:1992},{title:"Braveheart",year:1995},{title:"M",year:1931},{title:"Requiem for a Dream",year:2e3},{title:"Am\xe9lie",year:2001},{title:"A Clockwork Orange",year:1971},{title:"Like Stars on Earth",year:2007},{title:"Taxi Driver",year:1976},{title:"Lawrence of Arabia",year:1962},{title:"Double Indemnity",year:1944},{title:"Eternal Sunshine of the Spotless Mind",year:2004},{title:"Amadeus",year:1984},{title:"To Kill a Mockingbird",year:1962},{title:"Toy Story 3",year:2010},{title:"Logan",year:2017},{title:"Full Metal Jacket",year:1987},{title:"Dangal",year:2016},{title:"The Sting",year:1973},{title:"2001: A Space Odyssey",year:1968},{title:"Singin' in the Rain",year:1952},{title:"Toy Story",year:1995},{title:"Bicycle Thieves",year:1948},{title:"The Kid",year:1921},{title:"Inglourious Basterds",year:2009},{title:"Snatch",year:2e3},{title:"3 Idiots",year:2009},{title:"Monty Python and the Holy Grail",year:1975}]},2104:function(e,t,n){"use strict";n.r(t),t.default="import * as React from 'react';\nimport Chip from '@mui/material/Chip';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\n\nexport default function FixedTags() {\n  const fixedOptions = [top100Films[6]];\n  const [value, setValue] = React.useState([...fixedOptions, top100Films[13]]);\n\n  return (\n    <Autocomplete\n      multiple\n      id=\"fixed-tags-demo\"\n      value={value}\n      onChange={(event, newValue) => {\n        setValue([\n          ...fixedOptions,\n          ...newValue.filter((option) => fixedOptions.indexOf(option) === -1),\n        ]);\n      }}\n      options={top100Films}\n      getOptionLabel={(option) => option.title}\n      renderTags={(tagValue, getTagProps) =>\n        tagValue.map((option, index) => (\n          <Chip\n            label={option.title}\n            {...getTagProps({ index })}\n            disabled={fixedOptions.indexOf(option) !== -1}\n          />\n        ))\n      }\n      style={{ width: 500 }}\n      renderInput={(params) => (\n        <TextField {...params} label=\"Fixed tag\" placeholder=\"Favorites\" />\n      )}\n    />\n  );\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n  { title: 'The Shawshank Redemption', year: 1994 },\n  { title: 'The Godfather', year: 1972 },\n  { title: 'The Godfather: Part II', year: 1974 },\n  { title: 'The Dark Knight', year: 2008 },\n  { title: '12 Angry Men', year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n  { title: 'Pulp Fiction', year: 1994 },\n  {\n    title: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\n  { title: 'Fight Club', year: 1999 },\n  {\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { title: 'Forrest Gump', year: 1994 },\n  { title: 'Inception', year: 2010 },\n  {\n    title: 'The Lord of the Rings: The Two Towers',\n    year: 2002,\n  },\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { title: 'Goodfellas', year: 1990 },\n  { title: 'The Matrix', year: 1999 },\n  { title: 'Seven Samurai', year: 1954 },\n  {\n    title: 'Star Wars: Episode IV - A New Hope',\n    year: 1977,\n  },\n  { title: 'City of God', year: 2002 },\n  { title: 'Se7en', year: 1995 },\n  { title: 'The Silence of the Lambs', year: 1991 },\n  { title: \"It's a Wonderful Life\", year: 1946 },\n  { title: 'Life Is Beautiful', year: 1997 },\n  { title: 'The Usual Suspects', year: 1995 },\n  { title: 'L\xe9on: The Professional', year: 1994 },\n  { title: 'Spirited Away', year: 2001 },\n  { title: 'Saving Private Ryan', year: 1998 },\n  { title: 'Once Upon a Time in the West', year: 1968 },\n  { title: 'American History X', year: 1998 },\n  { title: 'Interstellar', year: 2014 },\n  { title: 'Casablanca', year: 1942 },\n  { title: 'City Lights', year: 1931 },\n  { title: 'Psycho', year: 1960 },\n  { title: 'The Green Mile', year: 1999 },\n  { title: 'The Intouchables', year: 2011 },\n  { title: 'Modern Times', year: 1936 },\n  { title: 'Raiders of the Lost Ark', year: 1981 },\n  { title: 'Rear Window', year: 1954 },\n  { title: 'The Pianist', year: 2002 },\n  { title: 'The Departed', year: 2006 },\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\n  { title: 'Back to the Future', year: 1985 },\n  { title: 'Whiplash', year: 2014 },\n  { title: 'Gladiator', year: 2000 },\n  { title: 'Memento', year: 2000 },\n  { title: 'The Prestige', year: 2006 },\n  { title: 'The Lion King', year: 1994 },\n  { title: 'Apocalypse Now', year: 1979 },\n  { title: 'Alien', year: 1979 },\n  { title: 'Sunset Boulevard', year: 1950 },\n  {\n    title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964,\n  },\n  { title: 'The Great Dictator', year: 1940 },\n  { title: 'Cinema Paradiso', year: 1988 },\n  { title: 'The Lives of Others', year: 2006 },\n  { title: 'Grave of the Fireflies', year: 1988 },\n  { title: 'Paths of Glory', year: 1957 },\n  { title: 'Django Unchained', year: 2012 },\n  { title: 'The Shining', year: 1980 },\n  { title: 'WALL\xb7E', year: 2008 },\n  { title: 'American Beauty', year: 1999 },\n  { title: 'The Dark Knight Rises', year: 2012 },\n  { title: 'Princess Mononoke', year: 1997 },\n  { title: 'Aliens', year: 1986 },\n  { title: 'Oldboy', year: 2003 },\n  { title: 'Once Upon a Time in America', year: 1984 },\n  { title: 'Witness for the Prosecution', year: 1957 },\n  { title: 'Das Boot', year: 1981 },\n  { title: 'Citizen Kane', year: 1941 },\n  { title: 'North by Northwest', year: 1959 },\n  { title: 'Vertigo', year: 1958 },\n  {\n    title: 'Star Wars: Episode VI - Return of the Jedi',\n    year: 1983,\n  },\n  { title: 'Reservoir Dogs', year: 1992 },\n  { title: 'Braveheart', year: 1995 },\n  { title: 'M', year: 1931 },\n  { title: 'Requiem for a Dream', year: 2000 },\n  { title: 'Am\xe9lie', year: 2001 },\n  { title: 'A Clockwork Orange', year: 1971 },\n  { title: 'Like Stars on Earth', year: 2007 },\n  { title: 'Taxi Driver', year: 1976 },\n  { title: 'Lawrence of Arabia', year: 1962 },\n  { title: 'Double Indemnity', year: 1944 },\n  {\n    title: 'Eternal Sunshine of the Spotless Mind',\n    year: 2004,\n  },\n  { title: 'Amadeus', year: 1984 },\n  { title: 'To Kill a Mockingbird', year: 1962 },\n  { title: 'Toy Story 3', year: 2010 },\n  { title: 'Logan', year: 2017 },\n  { title: 'Full Metal Jacket', year: 1987 },\n  { title: 'Dangal', year: 2016 },\n  { title: 'The Sting', year: 1973 },\n  { title: '2001: A Space Odyssey', year: 1968 },\n  { title: \"Singin' in the Rain\", year: 1952 },\n  { title: 'Toy Story', year: 1995 },\n  { title: 'Bicycle Thieves', year: 1948 },\n  { title: 'The Kid', year: 1921 },\n  { title: 'Inglourious Basterds', year: 2009 },\n  { title: 'Snatch', year: 2000 },\n  { title: '3 Idiots', year: 2009 },\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\n];\n"},2105:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return u}));var a=n(8),i=(n(1),n(1465)),r=n(1335),l=n(1663),o=n(2106),s=n.n(o),c=n(2107),d=n.n(c),y=n(0),h=Object(y.jsx)(s.a,{fontSize:"small"}),p=Object(y.jsx)(d.a,{fontSize:"small"});function u(){return Object(y.jsx)(l.a,{multiple:!0,id:"checkboxes-tags-demo",options:m,disableCloseOnSelect:!0,getOptionLabel:function(e){return e.title},renderOption:function(e,t,n){var r=n.selected;return Object(y.jsxs)("li",Object(a.a)(Object(a.a)({},e),{},{children:[Object(y.jsx)(i.a,{icon:h,checkedIcon:p,style:{marginRight:8},checked:r}),t.title]}))},style:{width:500},renderInput:function(e){return Object(y.jsx)(r.a,Object(a.a)(Object(a.a)({},e),{},{label:"Checkboxes",placeholder:"Favorites"}))}})}var m=[{title:"The Shawshank Redemption",year:1994},{title:"The Godfather",year:1972},{title:"The Godfather: Part II",year:1974},{title:"The Dark Knight",year:2008},{title:"12 Angry Men",year:1957},{title:"Schindler's List",year:1993},{title:"Pulp Fiction",year:1994},{title:"The Lord of the Rings: The Return of the King",year:2003},{title:"The Good, the Bad and the Ugly",year:1966},{title:"Fight Club",year:1999},{title:"The Lord of the Rings: The Fellowship of the Ring",year:2001},{title:"Star Wars: Episode V - The Empire Strikes Back",year:1980},{title:"Forrest Gump",year:1994},{title:"Inception",year:2010},{title:"The Lord of the Rings: The Two Towers",year:2002},{title:"One Flew Over the Cuckoo's Nest",year:1975},{title:"Goodfellas",year:1990},{title:"The Matrix",year:1999},{title:"Seven Samurai",year:1954},{title:"Star Wars: Episode IV - A New Hope",year:1977},{title:"City of God",year:2002},{title:"Se7en",year:1995},{title:"The Silence of the Lambs",year:1991},{title:"It's a Wonderful Life",year:1946},{title:"Life Is Beautiful",year:1997},{title:"The Usual Suspects",year:1995},{title:"L\xe9on: The Professional",year:1994},{title:"Spirited Away",year:2001},{title:"Saving Private Ryan",year:1998},{title:"Once Upon a Time in the West",year:1968},{title:"American History X",year:1998},{title:"Interstellar",year:2014}]},2108:function(e,t,n){"use strict";n.r(t),t.default="import * as React from 'react';\nimport Checkbox from '@mui/material/Checkbox';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport CheckBoxOutlineBlankIcon from '@mui/icons-material/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\n\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\n\nexport default function CheckboxesTags() {\n  return (\n    <Autocomplete\n      multiple\n      id=\"checkboxes-tags-demo\"\n      options={top100Films}\n      disableCloseOnSelect\n      getOptionLabel={(option) => option.title}\n      renderOption={(props, option, { selected }) => (\n        <li {...props}>\n          <Checkbox\n            icon={icon}\n            checkedIcon={checkedIcon}\n            style={{ marginRight: 8 }}\n            checked={selected}\n          />\n          {option.title}\n        </li>\n      )}\n      style={{ width: 500 }}\n      renderInput={(params) => (\n        <TextField {...params} label=\"Checkboxes\" placeholder=\"Favorites\" />\n      )}\n    />\n  );\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n  { title: 'The Shawshank Redemption', year: 1994 },\n  { title: 'The Godfather', year: 1972 },\n  { title: 'The Godfather: Part II', year: 1974 },\n  { title: 'The Dark Knight', year: 2008 },\n  { title: '12 Angry Men', year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n  { title: 'Pulp Fiction', year: 1994 },\n  {\n    title: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\n  { title: 'Fight Club', year: 1999 },\n  {\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { title: 'Forrest Gump', year: 1994 },\n  { title: 'Inception', year: 2010 },\n  {\n    title: 'The Lord of the Rings: The Two Towers',\n    year: 2002,\n  },\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { title: 'Goodfellas', year: 1990 },\n  { title: 'The Matrix', year: 1999 },\n  { title: 'Seven Samurai', year: 1954 },\n  {\n    title: 'Star Wars: Episode IV - A New Hope',\n    year: 1977,\n  },\n  { title: 'City of God', year: 2002 },\n  { title: 'Se7en', year: 1995 },\n  { title: 'The Silence of the Lambs', year: 1991 },\n  { title: \"It's a Wonderful Life\", year: 1946 },\n  { title: 'Life Is Beautiful', year: 1997 },\n  { title: 'The Usual Suspects', year: 1995 },\n  { title: 'L\xe9on: The Professional', year: 1994 },\n  { title: 'Spirited Away', year: 2001 },\n  { title: 'Saving Private Ryan', year: 1998 },\n  { title: 'Once Upon a Time in the West', year: 1968 },\n  { title: 'American History X', year: 1998 },\n  { title: 'Interstellar', year: 2014 },\n];\n"},2109:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return o}));var a=n(8),i=(n(1),n(1663)),r=n(1335),l=n(0);function o(){return Object(l.jsx)(i.a,{multiple:!0,limitTags:2,id:"multiple-limit-tags",options:s,getOptionLabel:function(e){return e.title},defaultValue:[s[13],s[12],s[11]],renderInput:function(e){return Object(l.jsx)(r.a,Object(a.a)(Object(a.a)({},e),{},{label:"limitTags",placeholder:"Favorites"}))}})}var s=[{title:"The Shawshank Redemption",year:1994},{title:"The Godfather",year:1972},{title:"The Godfather: Part II",year:1974},{title:"The Dark Knight",year:2008},{title:"12 Angry Men",year:1957},{title:"Schindler's List",year:1993},{title:"Pulp Fiction",year:1994},{title:"The Lord of the Rings: The Return of the King",year:2003},{title:"The Good, the Bad and the Ugly",year:1966},{title:"Fight Club",year:1999},{title:"The Lord of the Rings: The Fellowship of the Ring",year:2001},{title:"Star Wars: Episode V - The Empire Strikes Back",year:1980},{title:"Forrest Gump",year:1994},{title:"Inception",year:2010},{title:"The Lord of the Rings: The Two Towers",year:2002},{title:"One Flew Over the Cuckoo's Nest",year:1975},{title:"Goodfellas",year:1990},{title:"The Matrix",year:1999},{title:"Seven Samurai",year:1954},{title:"Star Wars: Episode IV - A New Hope",year:1977},{title:"City of God",year:2002},{title:"Se7en",year:1995},{title:"The Silence of the Lambs",year:1991},{title:"It's a Wonderful Life",year:1946},{title:"Life Is Beautiful",year:1997},{title:"The Usual Suspects",year:1995},{title:"L\xe9on: The Professional",year:1994},{title:"Spirited Away",year:2001},{title:"Saving Private Ryan",year:1998},{title:"Once Upon a Time in the West",year:1968},{title:"American History X",year:1998},{title:"Interstellar",year:2014},{title:"Casablanca",year:1942},{title:"City Lights",year:1931},{title:"Psycho",year:1960},{title:"The Green Mile",year:1999},{title:"The Intouchables",year:2011},{title:"Modern Times",year:1936},{title:"Raiders of the Lost Ark",year:1981},{title:"Rear Window",year:1954},{title:"The Pianist",year:2002},{title:"The Departed",year:2006},{title:"Terminator 2: Judgment Day",year:1991},{title:"Back to the Future",year:1985},{title:"Whiplash",year:2014},{title:"Gladiator",year:2e3},{title:"Memento",year:2e3},{title:"The Prestige",year:2006},{title:"The Lion King",year:1994},{title:"Apocalypse Now",year:1979},{title:"Alien",year:1979},{title:"Sunset Boulevard",year:1950},{title:"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb",year:1964},{title:"The Great Dictator",year:1940},{title:"Cinema Paradiso",year:1988},{title:"The Lives of Others",year:2006},{title:"Grave of the Fireflies",year:1988},{title:"Paths of Glory",year:1957},{title:"Django Unchained",year:2012},{title:"The Shining",year:1980},{title:"WALL\xb7E",year:2008},{title:"American Beauty",year:1999},{title:"The Dark Knight Rises",year:2012},{title:"Princess Mononoke",year:1997},{title:"Aliens",year:1986},{title:"Oldboy",year:2003},{title:"Once Upon a Time in America",year:1984},{title:"Witness for the Prosecution",year:1957},{title:"Das Boot",year:1981},{title:"Citizen Kane",year:1941},{title:"North by Northwest",year:1959},{title:"Vertigo",year:1958},{title:"Star Wars: Episode VI - Return of the Jedi",year:1983},{title:"Reservoir Dogs",year:1992},{title:"Braveheart",year:1995},{title:"M",year:1931},{title:"Requiem for a Dream",year:2e3},{title:"Am\xe9lie",year:2001},{title:"A Clockwork Orange",year:1971},{title:"Like Stars on Earth",year:2007},{title:"Taxi Driver",year:1976},{title:"Lawrence of Arabia",year:1962},{title:"Double Indemnity",year:1944},{title:"Eternal Sunshine of the Spotless Mind",year:2004},{title:"Amadeus",year:1984},{title:"To Kill a Mockingbird",year:1962},{title:"Toy Story 3",year:2010},{title:"Logan",year:2017},{title:"Full Metal Jacket",year:1987},{title:"Dangal",year:2016},{title:"The Sting",year:1973},{title:"2001: A Space Odyssey",year:1968},{title:"Singin' in the Rain",year:1952},{title:"Toy Story",year:1995},{title:"Bicycle Thieves",year:1948},{title:"The Kid",year:1921},{title:"Inglourious Basterds",year:2009},{title:"Snatch",year:2e3},{title:"3 Idiots",year:2009},{title:"Monty Python and the Holy Grail",year:1975}]},2110:function(e,t,n){"use strict";n.r(t),t.default="import * as React from 'react';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport TextField from '@mui/material/TextField';\n\nexport default function LimitTags() {\n  return (\n    <Autocomplete\n      multiple\n      limitTags={2}\n      id=\"multiple-limit-tags\"\n      options={top100Films}\n      getOptionLabel={(option) => option.title}\n      defaultValue={[top100Films[13], top100Films[12], top100Films[11]]}\n      renderInput={(params) => (\n        <TextField {...params} label=\"limitTags\" placeholder=\"Favorites\" />\n      )}\n    />\n  );\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n  { title: 'The Shawshank Redemption', year: 1994 },\n  { title: 'The Godfather', year: 1972 },\n  { title: 'The Godfather: Part II', year: 1974 },\n  { title: 'The Dark Knight', year: 2008 },\n  { title: '12 Angry Men', year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n  { title: 'Pulp Fiction', year: 1994 },\n  {\n    title: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\n  { title: 'Fight Club', year: 1999 },\n  {\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { title: 'Forrest Gump', year: 1994 },\n  { title: 'Inception', year: 2010 },\n  {\n    title: 'The Lord of the Rings: The Two Towers',\n    year: 2002,\n  },\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { title: 'Goodfellas', year: 1990 },\n  { title: 'The Matrix', year: 1999 },\n  { title: 'Seven Samurai', year: 1954 },\n  {\n    title: 'Star Wars: Episode IV - A New Hope',\n    year: 1977,\n  },\n  { title: 'City of God', year: 2002 },\n  { title: 'Se7en', year: 1995 },\n  { title: 'The Silence of the Lambs', year: 1991 },\n  { title: \"It's a Wonderful Life\", year: 1946 },\n  { title: 'Life Is Beautiful', year: 1997 },\n  { title: 'The Usual Suspects', year: 1995 },\n  { title: 'L\xe9on: The Professional', year: 1994 },\n  { title: 'Spirited Away', year: 2001 },\n  { title: 'Saving Private Ryan', year: 1998 },\n  { title: 'Once Upon a Time in the West', year: 1968 },\n  { title: 'American History X', year: 1998 },\n  { title: 'Interstellar', year: 2014 },\n  { title: 'Casablanca', year: 1942 },\n  { title: 'City Lights', year: 1931 },\n  { title: 'Psycho', year: 1960 },\n  { title: 'The Green Mile', year: 1999 },\n  { title: 'The Intouchables', year: 2011 },\n  { title: 'Modern Times', year: 1936 },\n  { title: 'Raiders of the Lost Ark', year: 1981 },\n  { title: 'Rear Window', year: 1954 },\n  { title: 'The Pianist', year: 2002 },\n  { title: 'The Departed', year: 2006 },\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\n  { title: 'Back to the Future', year: 1985 },\n  { title: 'Whiplash', year: 2014 },\n  { title: 'Gladiator', year: 2000 },\n  { title: 'Memento', year: 2000 },\n  { title: 'The Prestige', year: 2006 },\n  { title: 'The Lion King', year: 1994 },\n  { title: 'Apocalypse Now', year: 1979 },\n  { title: 'Alien', year: 1979 },\n  { title: 'Sunset Boulevard', year: 1950 },\n  {\n    title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964,\n  },\n  { title: 'The Great Dictator', year: 1940 },\n  { title: 'Cinema Paradiso', year: 1988 },\n  { title: 'The Lives of Others', year: 2006 },\n  { title: 'Grave of the Fireflies', year: 1988 },\n  { title: 'Paths of Glory', year: 1957 },\n  { title: 'Django Unchained', year: 2012 },\n  { title: 'The Shining', year: 1980 },\n  { title: 'WALL\xb7E', year: 2008 },\n  { title: 'American Beauty', year: 1999 },\n  { title: 'The Dark Knight Rises', year: 2012 },\n  { title: 'Princess Mononoke', year: 1997 },\n  { title: 'Aliens', year: 1986 },\n  { title: 'Oldboy', year: 2003 },\n  { title: 'Once Upon a Time in America', year: 1984 },\n  { title: 'Witness for the Prosecution', year: 1957 },\n  { title: 'Das Boot', year: 1981 },\n  { title: 'Citizen Kane', year: 1941 },\n  { title: 'North by Northwest', year: 1959 },\n  { title: 'Vertigo', year: 1958 },\n  {\n    title: 'Star Wars: Episode VI - Return of the Jedi',\n    year: 1983,\n  },\n  { title: 'Reservoir Dogs', year: 1992 },\n  { title: 'Braveheart', year: 1995 },\n  { title: 'M', year: 1931 },\n  { title: 'Requiem for a Dream', year: 2000 },\n  { title: 'Am\xe9lie', year: 2001 },\n  { title: 'A Clockwork Orange', year: 1971 },\n  { title: 'Like Stars on Earth', year: 2007 },\n  { title: 'Taxi Driver', year: 1976 },\n  { title: 'Lawrence of Arabia', year: 1962 },\n  { title: 'Double Indemnity', year: 1944 },\n  {\n    title: 'Eternal Sunshine of the Spotless Mind',\n    year: 2004,\n  },\n  { title: 'Amadeus', year: 1984 },\n  { title: 'To Kill a Mockingbird', year: 1962 },\n  { title: 'Toy Story 3', year: 2010 },\n  { title: 'Logan', year: 2017 },\n  { title: 'Full Metal Jacket', year: 1987 },\n  { title: 'Dangal', year: 2016 },\n  { title: 'The Sting', year: 1973 },\n  { title: '2001: A Space Odyssey', year: 1968 },\n  { title: \"Singin' in the Rain\", year: 1952 },\n  { title: 'Toy Story', year: 1995 },\n  { title: 'Bicycle Thieves', year: 1948 },\n  { title: 'The Kid', year: 1921 },\n  { title: 'Inglourious Basterds', year: 2009 },\n  { title: 'Snatch', year: 2000 },\n  { title: '3 Idiots', year: 2009 },\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\n];\n"},2111:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return c}));var a=n(8),i=(n(1),n(1422)),r=n(1564),l=n(1663),o=n(1335),s=n(0);function c(){return Object(s.jsxs)(i.a,{spacing:2,sx:{width:500},children:[Object(s.jsx)(l.a,{id:"size-small-standard",size:"small",options:d,getOptionLabel:function(e){return e.title},defaultValue:d[13],renderInput:function(e){return Object(s.jsx)(o.a,Object(a.a)(Object(a.a)({},e),{},{variant:"standard",label:"Size small",placeholder:"Favorites"}))}}),Object(s.jsx)(l.a,{multiple:!0,id:"size-small-standard-multi",size:"small",options:d,getOptionLabel:function(e){return e.title},defaultValue:[d[13]],renderInput:function(e){return Object(s.jsx)(o.a,Object(a.a)(Object(a.a)({},e),{},{variant:"standard",label:"Size small",placeholder:"Favorites"}))}}),Object(s.jsx)(l.a,{id:"size-small-outlined",size:"small",options:d,getOptionLabel:function(e){return e.title},defaultValue:d[13],renderInput:function(e){return Object(s.jsx)(o.a,Object(a.a)(Object(a.a)({},e),{},{label:"Size small",placeholder:"Favorites"}))}}),Object(s.jsx)(l.a,{multiple:!0,id:"size-small-outlined-multi",size:"small",options:d,getOptionLabel:function(e){return e.title},defaultValue:[d[13]],renderInput:function(e){return Object(s.jsx)(o.a,Object(a.a)(Object(a.a)({},e),{},{label:"Size small",placeholder:"Favorites"}))}}),Object(s.jsx)(l.a,{id:"size-small-filled",size:"small",options:d,getOptionLabel:function(e){return e.title},defaultValue:d[13],renderTags:function(e,t){return e.map((function(e,n){return Object(s.jsx)(r.a,Object(a.a)({variant:"outlined",label:e.title,size:"small"},t({index:n})))}))},renderInput:function(e){return Object(s.jsx)(o.a,Object(a.a)(Object(a.a)({},e),{},{variant:"filled",label:"Size small",placeholder:"Favorites"}))}}),Object(s.jsx)(l.a,{multiple:!0,id:"size-small-filled-multi",size:"small",options:d,getOptionLabel:function(e){return e.title},defaultValue:[d[13]],renderTags:function(e,t){return e.map((function(e,n){return Object(s.jsx)(r.a,Object(a.a)({variant:"outlined",label:e.title,size:"small"},t({index:n})))}))},renderInput:function(e){return Object(s.jsx)(o.a,Object(a.a)(Object(a.a)({},e),{},{variant:"filled",label:"Size small",placeholder:"Favorites"}))}})]})}var d=[{title:"The Shawshank Redemption",year:1994},{title:"The Godfather",year:1972},{title:"The Godfather: Part II",year:1974},{title:"The Dark Knight",year:2008},{title:"12 Angry Men",year:1957},{title:"Schindler's List",year:1993},{title:"Pulp Fiction",year:1994},{title:"The Lord of the Rings: The Return of the King",year:2003},{title:"The Good, the Bad and the Ugly",year:1966},{title:"Fight Club",year:1999},{title:"The Lord of the Rings: The Fellowship of the Ring",year:2001},{title:"Star Wars: Episode V - The Empire Strikes Back",year:1980},{title:"Forrest Gump",year:1994},{title:"Inception",year:2010},{title:"The Lord of the Rings: The Two Towers",year:2002},{title:"One Flew Over the Cuckoo's Nest",year:1975},{title:"Goodfellas",year:1990},{title:"The Matrix",year:1999},{title:"Seven Samurai",year:1954},{title:"Star Wars: Episode IV - A New Hope",year:1977},{title:"City of God",year:2002},{title:"Se7en",year:1995},{title:"The Silence of the Lambs",year:1991},{title:"It's a Wonderful Life",year:1946},{title:"Life Is Beautiful",year:1997},{title:"The Usual Suspects",year:1995},{title:"L\xe9on: The Professional",year:1994},{title:"Spirited Away",year:2001},{title:"Saving Private Ryan",year:1998},{title:"Once Upon a Time in the West",year:1968},{title:"American History X",year:1998},{title:"Interstellar",year:2014},{title:"Casablanca",year:1942},{title:"City Lights",year:1931},{title:"Psycho",year:1960},{title:"The Green Mile",year:1999},{title:"The Intouchables",year:2011},{title:"Modern Times",year:1936},{title:"Raiders of the Lost Ark",year:1981},{title:"Rear Window",year:1954},{title:"The Pianist",year:2002},{title:"The Departed",year:2006},{title:"Terminator 2: Judgment Day",year:1991},{title:"Back to the Future",year:1985},{title:"Whiplash",year:2014},{title:"Gladiator",year:2e3},{title:"Memento",year:2e3},{title:"The Prestige",year:2006},{title:"The Lion King",year:1994},{title:"Apocalypse Now",year:1979},{title:"Alien",year:1979},{title:"Sunset Boulevard",year:1950},{title:"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb",year:1964},{title:"The Great Dictator",year:1940},{title:"Cinema Paradiso",year:1988},{title:"The Lives of Others",year:2006},{title:"Grave of the Fireflies",year:1988},{title:"Paths of Glory",year:1957},{title:"Django Unchained",year:2012},{title:"The Shining",year:1980},{title:"WALL\xb7E",year:2008},{title:"American Beauty",year:1999},{title:"The Dark Knight Rises",year:2012},{title:"Princess Mononoke",year:1997},{title:"Aliens",year:1986},{title:"Oldboy",year:2003},{title:"Once Upon a Time in America",year:1984},{title:"Witness for the Prosecution",year:1957},{title:"Das Boot",year:1981},{title:"Citizen Kane",year:1941},{title:"North by Northwest",year:1959},{title:"Vertigo",year:1958},{title:"Star Wars: Episode VI - Return of the Jedi",year:1983},{title:"Reservoir Dogs",year:1992},{title:"Braveheart",year:1995},{title:"M",year:1931},{title:"Requiem for a Dream",year:2e3},{title:"Am\xe9lie",year:2001},{title:"A Clockwork Orange",year:1971},{title:"Like Stars on Earth",year:2007},{title:"Taxi Driver",year:1976},{title:"Lawrence of Arabia",year:1962},{title:"Double Indemnity",year:1944},{title:"Eternal Sunshine of the Spotless Mind",year:2004},{title:"Amadeus",year:1984},{title:"To Kill a Mockingbird",year:1962},{title:"Toy Story 3",year:2010},{title:"Logan",year:2017},{title:"Full Metal Jacket",year:1987},{title:"Dangal",year:2016},{title:"The Sting",year:1973},{title:"2001: A Space Odyssey",year:1968},{title:"Singin' in the Rain",year:1952},{title:"Toy Story",year:1995},{title:"Bicycle Thieves",year:1948},{title:"The Kid",year:1921},{title:"Inglourious Basterds",year:2009},{title:"Snatch",year:2e3},{title:"3 Idiots",year:2009},{title:"Monty Python and the Holy Grail",year:1975}]},2112:function(e,t,n){"use strict";n.r(t),t.default="import * as React from 'react';\nimport Stack from '@mui/material/Stack';\nimport Chip from '@mui/material/Chip';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport TextField from '@mui/material/TextField';\n\nexport default function Sizes() {\n  return (\n    <Stack spacing={2} sx={{ width: 500 }}>\n      <Autocomplete\n        id=\"size-small-standard\"\n        size=\"small\"\n        options={top100Films}\n        getOptionLabel={(option) => option.title}\n        defaultValue={top100Films[13]}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            variant=\"standard\"\n            label=\"Size small\"\n            placeholder=\"Favorites\"\n          />\n        )}\n      />\n      <Autocomplete\n        multiple\n        id=\"size-small-standard-multi\"\n        size=\"small\"\n        options={top100Films}\n        getOptionLabel={(option) => option.title}\n        defaultValue={[top100Films[13]]}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            variant=\"standard\"\n            label=\"Size small\"\n            placeholder=\"Favorites\"\n          />\n        )}\n      />\n      <Autocomplete\n        id=\"size-small-outlined\"\n        size=\"small\"\n        options={top100Films}\n        getOptionLabel={(option) => option.title}\n        defaultValue={top100Films[13]}\n        renderInput={(params) => (\n          <TextField {...params} label=\"Size small\" placeholder=\"Favorites\" />\n        )}\n      />\n      <Autocomplete\n        multiple\n        id=\"size-small-outlined-multi\"\n        size=\"small\"\n        options={top100Films}\n        getOptionLabel={(option) => option.title}\n        defaultValue={[top100Films[13]]}\n        renderInput={(params) => (\n          <TextField {...params} label=\"Size small\" placeholder=\"Favorites\" />\n        )}\n      />\n      <Autocomplete\n        id=\"size-small-filled\"\n        size=\"small\"\n        options={top100Films}\n        getOptionLabel={(option) => option.title}\n        defaultValue={top100Films[13]}\n        renderTags={(value, getTagProps) =>\n          value.map((option, index) => (\n            <Chip\n              variant=\"outlined\"\n              label={option.title}\n              size=\"small\"\n              {...getTagProps({ index })}\n            />\n          ))\n        }\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            variant=\"filled\"\n            label=\"Size small\"\n            placeholder=\"Favorites\"\n          />\n        )}\n      />\n      <Autocomplete\n        multiple\n        id=\"size-small-filled-multi\"\n        size=\"small\"\n        options={top100Films}\n        getOptionLabel={(option) => option.title}\n        defaultValue={[top100Films[13]]}\n        renderTags={(value, getTagProps) =>\n          value.map((option, index) => (\n            <Chip\n              variant=\"outlined\"\n              label={option.title}\n              size=\"small\"\n              {...getTagProps({ index })}\n            />\n          ))\n        }\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            variant=\"filled\"\n            label=\"Size small\"\n            placeholder=\"Favorites\"\n          />\n        )}\n      />\n    </Stack>\n  );\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n  { title: 'The Shawshank Redemption', year: 1994 },\n  { title: 'The Godfather', year: 1972 },\n  { title: 'The Godfather: Part II', year: 1974 },\n  { title: 'The Dark Knight', year: 2008 },\n  { title: '12 Angry Men', year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n  { title: 'Pulp Fiction', year: 1994 },\n  {\n    title: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\n  { title: 'Fight Club', year: 1999 },\n  {\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { title: 'Forrest Gump', year: 1994 },\n  { title: 'Inception', year: 2010 },\n  {\n    title: 'The Lord of the Rings: The Two Towers',\n    year: 2002,\n  },\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { title: 'Goodfellas', year: 1990 },\n  { title: 'The Matrix', year: 1999 },\n  { title: 'Seven Samurai', year: 1954 },\n  {\n    title: 'Star Wars: Episode IV - A New Hope',\n    year: 1977,\n  },\n  { title: 'City of God', year: 2002 },\n  { title: 'Se7en', year: 1995 },\n  { title: 'The Silence of the Lambs', year: 1991 },\n  { title: \"It's a Wonderful Life\", year: 1946 },\n  { title: 'Life Is Beautiful', year: 1997 },\n  { title: 'The Usual Suspects', year: 1995 },\n  { title: 'L\xe9on: The Professional', year: 1994 },\n  { title: 'Spirited Away', year: 2001 },\n  { title: 'Saving Private Ryan', year: 1998 },\n  { title: 'Once Upon a Time in the West', year: 1968 },\n  { title: 'American History X', year: 1998 },\n  { title: 'Interstellar', year: 2014 },\n  { title: 'Casablanca', year: 1942 },\n  { title: 'City Lights', year: 1931 },\n  { title: 'Psycho', year: 1960 },\n  { title: 'The Green Mile', year: 1999 },\n  { title: 'The Intouchables', year: 2011 },\n  { title: 'Modern Times', year: 1936 },\n  { title: 'Raiders of the Lost Ark', year: 1981 },\n  { title: 'Rear Window', year: 1954 },\n  { title: 'The Pianist', year: 2002 },\n  { title: 'The Departed', year: 2006 },\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\n  { title: 'Back to the Future', year: 1985 },\n  { title: 'Whiplash', year: 2014 },\n  { title: 'Gladiator', year: 2000 },\n  { title: 'Memento', year: 2000 },\n  { title: 'The Prestige', year: 2006 },\n  { title: 'The Lion King', year: 1994 },\n  { title: 'Apocalypse Now', year: 1979 },\n  { title: 'Alien', year: 1979 },\n  { title: 'Sunset Boulevard', year: 1950 },\n  {\n    title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964,\n  },\n  { title: 'The Great Dictator', year: 1940 },\n  { title: 'Cinema Paradiso', year: 1988 },\n  { title: 'The Lives of Others', year: 2006 },\n  { title: 'Grave of the Fireflies', year: 1988 },\n  { title: 'Paths of Glory', year: 1957 },\n  { title: 'Django Unchained', year: 2012 },\n  { title: 'The Shining', year: 1980 },\n  { title: 'WALL\xb7E', year: 2008 },\n  { title: 'American Beauty', year: 1999 },\n  { title: 'The Dark Knight Rises', year: 2012 },\n  { title: 'Princess Mononoke', year: 1997 },\n  { title: 'Aliens', year: 1986 },\n  { title: 'Oldboy', year: 2003 },\n  { title: 'Once Upon a Time in America', year: 1984 },\n  { title: 'Witness for the Prosecution', year: 1957 },\n  { title: 'Das Boot', year: 1981 },\n  { title: 'Citizen Kane', year: 1941 },\n  { title: 'North by Northwest', year: 1959 },\n  { title: 'Vertigo', year: 1958 },\n  {\n    title: 'Star Wars: Episode VI - Return of the Jedi',\n    year: 1983,\n  },\n  { title: 'Reservoir Dogs', year: 1992 },\n  { title: 'Braveheart', year: 1995 },\n  { title: 'M', year: 1931 },\n  { title: 'Requiem for a Dream', year: 2000 },\n  { title: 'Am\xe9lie', year: 2001 },\n  { title: 'A Clockwork Orange', year: 1971 },\n  { title: 'Like Stars on Earth', year: 2007 },\n  { title: 'Taxi Driver', year: 1976 },\n  { title: 'Lawrence of Arabia', year: 1962 },\n  { title: 'Double Indemnity', year: 1944 },\n  {\n    title: 'Eternal Sunshine of the Spotless Mind',\n    year: 2004,\n  },\n  { title: 'Amadeus', year: 1984 },\n  { title: 'To Kill a Mockingbird', year: 1962 },\n  { title: 'Toy Story 3', year: 2010 },\n  { title: 'Logan', year: 2017 },\n  { title: 'Full Metal Jacket', year: 1987 },\n  { title: 'Dangal', year: 2016 },\n  { title: 'The Sting', year: 1973 },\n  { title: '2001: A Space Odyssey', year: 1968 },\n  { title: \"Singin' in the Rain\", year: 1952 },\n  { title: 'Toy Story', year: 1995 },\n  { title: 'Bicycle Thieves', year: 1948 },\n  { title: 'The Kid', year: 1921 },\n  { title: 'Inglourious Basterds', year: 2009 },\n  { title: 'Snatch', year: 2000 },\n  { title: '3 Idiots', year: 2009 },\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\n];\n"},2113:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return o}));var a=n(8),i=(n(1),n(1663)),r=n(0),l=["Option 1","Option 2"];function o(){return Object(r.jsxs)("label",{children:["Value:"," ",Object(r.jsx)(i.a,{sx:{display:"inline-block","& input":{width:200,bgcolor:"background.paper",color:function(e){return e.palette.getContrastText(e.palette.background.paper)}}},id:"custom-input-demo",options:l,renderInput:function(e){return Object(r.jsx)("div",{ref:e.InputProps.ref,children:Object(r.jsx)("input",Object(a.a)({type:"text"},e.inputProps))})}})]})}},2114:function(e,t,n){"use strict";n.r(t),t.default="import * as React from 'react';\nimport Autocomplete from '@mui/material/Autocomplete';\n\nconst options = ['Option 1', 'Option 2'];\n\nexport default function CustomInputAutocomplete() {\n  return (\n    <label>\n      Value:{' '}\n      <Autocomplete\n        sx={{\n          display: 'inline-block',\n          '& input': {\n            width: 200,\n            bgcolor: 'background.paper',\n            color: (theme) =>\n              theme.palette.getContrastText(theme.palette.background.paper),\n          },\n        }}\n        id=\"custom-input-demo\"\n        options={options}\n        renderInput={(params) => (\n          <div ref={params.InputProps.ref}>\n            <input type=\"text\" {...params.inputProps} />\n          </div>\n        )}\n      />\n    </label>\n  );\n}\n"},2115:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return R}));var a=n(17),i=n(8),r=n(127),l=n(4),o=n(1),s=n(14),c=n(50),d=n(738),y=n(733),h=n(1667),p=n.n(h),u=n(1590),m=n.n(u),b=n(1729),f=n.n(b),g=n(1540),T=n(1663),j=n(223),O=n(87),S=n(1389),x=n(0),v=["disablePortal","anchorEl","open"],w=Object(s.a)("div")((function(e){var t,n=e.theme;return t={},Object(l.a)(t,"& .".concat(g.a.paper),{boxShadow:"none",margin:0,color:"inherit",fontSize:13}),Object(l.a)(t,"& .".concat(g.a.listbox),Object(l.a)({backgroundColor:"light"===n.palette.mode?"#fff":"#1c2128",padding:0},"& .".concat(g.a.option),{minHeight:"auto",alignItems:"flex-start",padding:8,borderBottom:"1px solid  ".concat("light"===n.palette.mode?" #eaecef":"#30363d"),'&[aria-selected="true"]':{backgroundColor:"transparent"},'&[data-focus="true"], &[data-focus="true"][aria-selected="true"]':{backgroundColor:n.palette.action.hover}})),Object(l.a)(t,"&.".concat(g.a.popperDisablePortal),{position:"relative"}),t}));function A(e){e.disablePortal,e.anchorEl,e.open;var t=Object(r.a)(e,v);return Object(x.jsx)(w,Object(i.a)({},t))}var L=Object(s.a)(d.a)((function(e){var t=e.theme;return{border:"1px solid ".concat("light"===t.palette.mode?"#e1e4e8":"#30363d"),boxShadow:"0 8px 24px ".concat("light"===t.palette.mode?"rgba(149, 157, 165, 0.2)":"rgb(1, 4, 9)"),borderRadius:6,width:300,zIndex:t.zIndex.modal,fontSize:13,color:"light"===t.palette.mode?"#24292e":"#c9d1d9",backgroundColor:"light"===t.palette.mode?"#fff":"#1c2128"}})),I=Object(s.a)(O.c)((function(e){var t=e.theme;return{padding:10,width:"100%",borderBottom:"1px solid ".concat("light"===t.palette.mode?"#eaecef":"#30363d"),"& input":{borderRadius:4,backgroundColor:"light"===t.palette.mode?"#fff":"#0d1117",padding:8,transition:t.transitions.create(["border-color","box-shadow"]),border:"1px solid ".concat("light"===t.palette.mode?"#eaecef":"#30363d"),fontSize:14,"&:focus":{boxShadow:"0px 0px 0px 3px ".concat("light"===t.palette.mode?"rgba(3, 102, 214, 0.3)":"rgb(12, 45, 107)"),borderColor:"light"===t.palette.mode?"#0366d6":"#388bfd"}}}})),k=Object(s.a)(j.a)((function(e){var t=e.theme;return{fontSize:13,width:"100%",textAlign:"left",paddingBottom:8,color:"light"===t.palette.mode?"#586069":"#8b949e",fontWeight:600,"&:hover,&:focus":{color:"light"===t.palette.mode?"#0366d6":"#58a6ff"},"& span":{width:"100%"},"& svg":{width:16,height:16}}}));function R(){var e=o.useState(null),t=Object(a.a)(e,2),n=t[0],r=t[1],l=o.useState([P[1],P[11]]),s=Object(a.a)(l,2),d=s[0],h=s[1],u=o.useState([]),b=Object(a.a)(u,2),g=b[0],j=b[1],O=Object(c.a)(),v=function(){h(g),n&&n.focus(),r(null)},w=Boolean(n),R=w?"github-label":void 0;return Object(x.jsxs)(o.Fragment,{children:[Object(x.jsxs)(S.a,{sx:{width:221,fontSize:13},children:[Object(x.jsxs)(k,{disableRipple:!0,"aria-describedby":R,onClick:function(e){j(d),r(e.currentTarget)},children:[Object(x.jsx)("span",{children:"Labels"}),Object(x.jsx)(p.a,{})]}),d.map((function(e){return Object(x.jsx)(S.a,{sx:{mt:"3px",height:20,padding:".15em 4px",fontWeight:600,lineHeight:"15px",borderRadius:"2px"},style:{backgroundColor:e.color,color:O.palette.getContrastText(e.color)},children:e.name},e.name)}))]}),Object(x.jsx)(L,{id:R,open:w,anchorEl:n,placement:"bottom-start",children:Object(x.jsx)(y.a,{onClickAway:v,children:Object(x.jsxs)("div",{children:[Object(x.jsx)(S.a,{sx:{borderBottom:"1px solid ".concat("light"===O.palette.mode?"#eaecef":"#30363d"),padding:"8px 10px",fontWeight:600},children:"Apply labels to this pull request"}),Object(x.jsx)(T.a,{open:!0,multiple:!0,onClose:function(e,t){"escape"===t&&v()},value:g,onChange:function(e,t,n){"keydown"===e.type&&"Backspace"===e.key&&"removeOption"===n||j(t)},disableCloseOnSelect:!0,PopperComponent:A,renderTags:function(){return null},noOptionsText:"No labels",renderOption:function(e,t,n){var a=n.selected;return Object(x.jsxs)("li",Object(i.a)(Object(i.a)({},e),{},{children:[Object(x.jsx)(S.a,{component:f.a,sx:{width:17,height:17,mr:"5px",ml:"-2px"},style:{visibility:a?"visible":"hidden"}}),Object(x.jsx)(S.a,{component:"span",sx:{width:14,height:14,flexShrink:0,borderRadius:"3px",mr:1,mt:"2px"},style:{backgroundColor:t.color}}),Object(x.jsxs)(S.a,{sx:{flexGrow:1,"& span":{color:"light"===O.palette.mode?"#586069":"#8b949e"}},children:[t.name,Object(x.jsx)("br",{}),Object(x.jsx)("span",{children:t.description})]}),Object(x.jsx)(S.a,{component:m.a,sx:{opacity:.6,width:18,height:18},style:{visibility:a?"visible":"hidden"}})]}))},options:[].concat(P).sort((function(e,t){var n=d.indexOf(e);n=-1===n?d.length+P.indexOf(e):n;var a=d.indexOf(t);return n-(a=-1===a?d.length+P.indexOf(t):a)})),getOptionLabel:function(e){return e.name},renderInput:function(e){return Object(x.jsx)(I,{ref:e.InputProps.ref,inputProps:e.inputProps,autoFocus:!0,placeholder:"Filter labels"})}})]})})})]})}var P=[{name:"good first issue",color:"#7057ff",description:"Good for newcomers"},{name:"help wanted",color:"#008672",description:"Extra attention is needed"},{name:"priority: critical",color:"#b60205",description:""},{name:"priority: high",color:"#d93f0b",description:""},{name:"priority: low",color:"#0e8a16",description:""},{name:"priority: medium",color:"#fbca04",description:""},{name:"status: can't reproduce",color:"#fec1c1",description:""},{name:"status: confirmed",color:"#215cea",description:""},{name:"status: duplicate",color:"#cfd3d7",description:"This issue or pull request already exists"},{name:"status: needs information",color:"#fef2c0",description:""},{name:"status: wont do/fix",color:"#eeeeee",description:"This will not be worked on"},{name:"type: bug",color:"#d73a4a",description:"Something isn't working"},{name:"type: discussion",color:"#d4c5f9",description:""},{name:"type: documentation",color:"#006b75",description:""},{name:"type: enhancement",color:"#84b6eb",description:""},{name:"type: epic",color:"#3e4b9e",description:"A theme of work that contain sub-tasks"},{name:"type: feature request",color:"#fbca04",description:"New feature or request"},{name:"type: question",color:"#d876e3",description:"Further information is requested"}]},2116:function(e,t,n){"use strict";n.r(t),t.default="import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTheme, styled } from '@mui/material/styles';\nimport Popper from '@mui/material/Popper';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport CloseIcon from '@mui/icons-material/Close';\nimport DoneIcon from '@mui/icons-material/Done';\nimport Autocomplete, { autocompleteClasses } from '@mui/material/Autocomplete';\nimport ButtonBase from '@mui/material/ButtonBase';\nimport InputBase from '@mui/material/InputBase';\nimport Box from '@mui/material/Box';\n\nconst StyledAutocompletePopper = styled('div')(({ theme }) => ({\n  [`& .${autocompleteClasses.paper}`]: {\n    boxShadow: 'none',\n    margin: 0,\n    color: 'inherit',\n    fontSize: 13,\n  },\n  [`& .${autocompleteClasses.listbox}`]: {\n    backgroundColor: theme.palette.mode === 'light' ? '#fff' : '#1c2128',\n    padding: 0,\n    [`& .${autocompleteClasses.option}`]: {\n      minHeight: 'auto',\n      alignItems: 'flex-start',\n      padding: 8,\n      borderBottom: `1px solid  ${\n        theme.palette.mode === 'light' ? ' #eaecef' : '#30363d'\n      }`,\n      '&[aria-selected=\"true\"]': {\n        backgroundColor: 'transparent',\n      },\n      '&[data-focus=\"true\"], &[data-focus=\"true\"][aria-selected=\"true\"]': {\n        backgroundColor: theme.palette.action.hover,\n      },\n    },\n  },\n  [`&.${autocompleteClasses.popperDisablePortal}`]: {\n    position: 'relative',\n  },\n}));\n\nfunction PopperComponent(props) {\n  const { disablePortal, anchorEl, open, ...other } = props;\n  return <StyledAutocompletePopper {...other} />;\n}\n\nPopperComponent.propTypes = {\n  anchorEl: PropTypes.any,\n  disablePortal: PropTypes.bool,\n  open: PropTypes.bool.isRequired,\n};\n\nconst StyledPopper = styled(Popper)(({ theme }) => ({\n  border: `1px solid ${theme.palette.mode === 'light' ? '#e1e4e8' : '#30363d'}`,\n  boxShadow: `0 8px 24px ${\n    theme.palette.mode === 'light' ? 'rgba(149, 157, 165, 0.2)' : 'rgb(1, 4, 9)'\n  }`,\n  borderRadius: 6,\n  width: 300,\n  zIndex: theme.zIndex.modal,\n  fontSize: 13,\n  color: theme.palette.mode === 'light' ? '#24292e' : '#c9d1d9',\n  backgroundColor: theme.palette.mode === 'light' ? '#fff' : '#1c2128',\n}));\n\nconst StyledInput = styled(InputBase)(({ theme }) => ({\n  padding: 10,\n  width: '100%',\n  borderBottom: `1px solid ${\n    theme.palette.mode === 'light' ? '#eaecef' : '#30363d'\n  }`,\n  '& input': {\n    borderRadius: 4,\n    backgroundColor: theme.palette.mode === 'light' ? '#fff' : '#0d1117',\n    padding: 8,\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    border: `1px solid ${theme.palette.mode === 'light' ? '#eaecef' : '#30363d'}`,\n    fontSize: 14,\n    '&:focus': {\n      boxShadow: `0px 0px 0px 3px ${\n        theme.palette.mode === 'light'\n          ? 'rgba(3, 102, 214, 0.3)'\n          : 'rgb(12, 45, 107)'\n      }`,\n      borderColor: theme.palette.mode === 'light' ? '#0366d6' : '#388bfd',\n    },\n  },\n}));\n\nconst Button = styled(ButtonBase)(({ theme }) => ({\n  fontSize: 13,\n  width: '100%',\n  textAlign: 'left',\n  paddingBottom: 8,\n  color: theme.palette.mode === 'light' ? '#586069' : '#8b949e',\n  fontWeight: 600,\n  '&:hover,&:focus': {\n    color: theme.palette.mode === 'light' ? '#0366d6' : '#58a6ff',\n  },\n  '& span': {\n    width: '100%',\n  },\n  '& svg': {\n    width: 16,\n    height: 16,\n  },\n}));\n\nexport default function GitHubLabel() {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [value, setValue] = React.useState([labels[1], labels[11]]);\n  const [pendingValue, setPendingValue] = React.useState([]);\n  const theme = useTheme();\n\n  const handleClick = (event) => {\n    setPendingValue(value);\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setValue(pendingValue);\n    if (anchorEl) {\n      anchorEl.focus();\n    }\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'github-label' : undefined;\n\n  return (\n    <React.Fragment>\n      <Box sx={{ width: 221, fontSize: 13 }}>\n        <Button disableRipple aria-describedby={id} onClick={handleClick}>\n          <span>Labels</span>\n          <SettingsIcon />\n        </Button>\n        {value.map((label) => (\n          <Box\n            key={label.name}\n            sx={{\n              mt: '3px',\n              height: 20,\n              padding: '.15em 4px',\n              fontWeight: 600,\n              lineHeight: '15px',\n              borderRadius: '2px',\n            }}\n            style={{\n              backgroundColor: label.color,\n              color: theme.palette.getContrastText(label.color),\n            }}\n          >\n            {label.name}\n          </Box>\n        ))}\n      </Box>\n      <StyledPopper id={id} open={open} anchorEl={anchorEl} placement=\"bottom-start\">\n        <ClickAwayListener onClickAway={handleClose}>\n          <div>\n            <Box\n              sx={{\n                borderBottom: `1px solid ${\n                  theme.palette.mode === 'light' ? '#eaecef' : '#30363d'\n                }`,\n                padding: '8px 10px',\n                fontWeight: 600,\n              }}\n            >\n              Apply labels to this pull request\n            </Box>\n            <Autocomplete\n              open\n              multiple\n              onClose={(event, reason) => {\n                if (reason === 'escape') {\n                  handleClose();\n                }\n              }}\n              value={pendingValue}\n              onChange={(event, newValue, reason) => {\n                if (\n                  event.type === 'keydown' &&\n                  event.key === 'Backspace' &&\n                  reason === 'removeOption'\n                ) {\n                  return;\n                }\n                setPendingValue(newValue);\n              }}\n              disableCloseOnSelect\n              PopperComponent={PopperComponent}\n              renderTags={() => null}\n              noOptionsText=\"No labels\"\n              renderOption={(props, option, { selected }) => (\n                <li {...props}>\n                  <Box\n                    component={DoneIcon}\n                    sx={{ width: 17, height: 17, mr: '5px', ml: '-2px' }}\n                    style={{\n                      visibility: selected ? 'visible' : 'hidden',\n                    }}\n                  />\n                  <Box\n                    component=\"span\"\n                    sx={{\n                      width: 14,\n                      height: 14,\n                      flexShrink: 0,\n                      borderRadius: '3px',\n                      mr: 1,\n                      mt: '2px',\n                    }}\n                    style={{ backgroundColor: option.color }}\n                  />\n                  <Box\n                    sx={{\n                      flexGrow: 1,\n                      '& span': {\n                        color:\n                          theme.palette.mode === 'light' ? '#586069' : '#8b949e',\n                      },\n                    }}\n                  >\n                    {option.name}\n                    <br />\n                    <span>{option.description}</span>\n                  </Box>\n                  <Box\n                    component={CloseIcon}\n                    sx={{ opacity: 0.6, width: 18, height: 18 }}\n                    style={{\n                      visibility: selected ? 'visible' : 'hidden',\n                    }}\n                  />\n                </li>\n              )}\n              options={[...labels].sort((a, b) => {\n                // Display the selected labels first.\n                let ai = value.indexOf(a);\n                ai = ai === -1 ? value.length + labels.indexOf(a) : ai;\n                let bi = value.indexOf(b);\n                bi = bi === -1 ? value.length + labels.indexOf(b) : bi;\n                return ai - bi;\n              })}\n              getOptionLabel={(option) => option.name}\n              renderInput={(params) => (\n                <StyledInput\n                  ref={params.InputProps.ref}\n                  inputProps={params.inputProps}\n                  autoFocus\n                  placeholder=\"Filter labels\"\n                />\n              )}\n            />\n          </div>\n        </ClickAwayListener>\n      </StyledPopper>\n    </React.Fragment>\n  );\n}\n\n// From https://github.com/abdonrd/github-labels\nconst labels = [\n  {\n    name: 'good first issue',\n    color: '#7057ff',\n    description: 'Good for newcomers',\n  },\n  {\n    name: 'help wanted',\n    color: '#008672',\n    description: 'Extra attention is needed',\n  },\n  {\n    name: 'priority: critical',\n    color: '#b60205',\n    description: '',\n  },\n  {\n    name: 'priority: high',\n    color: '#d93f0b',\n    description: '',\n  },\n  {\n    name: 'priority: low',\n    color: '#0e8a16',\n    description: '',\n  },\n  {\n    name: 'priority: medium',\n    color: '#fbca04',\n    description: '',\n  },\n  {\n    name: \"status: can't reproduce\",\n    color: '#fec1c1',\n    description: '',\n  },\n  {\n    name: 'status: confirmed',\n    color: '#215cea',\n    description: '',\n  },\n  {\n    name: 'status: duplicate',\n    color: '#cfd3d7',\n    description: 'This issue or pull request already exists',\n  },\n  {\n    name: 'status: needs information',\n    color: '#fef2c0',\n    description: '',\n  },\n  {\n    name: 'status: wont do/fix',\n    color: '#eeeeee',\n    description: 'This will not be worked on',\n  },\n  {\n    name: 'type: bug',\n    color: '#d73a4a',\n    description: \"Something isn't working\",\n  },\n  {\n    name: 'type: discussion',\n    color: '#d4c5f9',\n    description: '',\n  },\n  {\n    name: 'type: documentation',\n    color: '#006b75',\n    description: '',\n  },\n  {\n    name: 'type: enhancement',\n    color: '#84b6eb',\n    description: '',\n  },\n  {\n    name: 'type: epic',\n    color: '#3e4b9e',\n    description: 'A theme of work that contain sub-tasks',\n  },\n  {\n    name: 'type: feature request',\n    color: '#fbca04',\n    description: 'New feature or request',\n  },\n  {\n    name: 'type: question',\n    color: '#d876e3',\n    description: 'Further information is requested',\n  },\n];\n"},2117:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return y}));var a=n(8),i=(n(1),n(1335)),r=n(1663),l=n(553),o=n.n(l),s=n(489),c=n.n(s),d=n(0);function y(){return Object(d.jsx)(r.a,{id:"highlights-demo",sx:{width:300},options:h,getOptionLabel:function(e){return e.title},renderInput:function(e){return Object(d.jsx)(i.a,Object(a.a)(Object(a.a)({},e),{},{label:"Highlights",margin:"normal"}))},renderOption:function(e,t,n){var i=n.inputValue,r=c()(t.title,i),l=o()(t.title,r);return Object(d.jsx)("li",Object(a.a)(Object(a.a)({},e),{},{children:Object(d.jsx)("div",{children:l.map((function(e,t){return Object(d.jsx)("span",{style:{fontWeight:e.highlight?700:400},children:e.text},t)}))})}))}})}var h=[{title:"The Shawshank Redemption",year:1994},{title:"The Godfather",year:1972},{title:"The Godfather: Part II",year:1974},{title:"The Dark Knight",year:2008},{title:"12 Angry Men",year:1957},{title:"Schindler's List",year:1993},{title:"Pulp Fiction",year:1994},{title:"The Lord of the Rings: The Return of the King",year:2003},{title:"The Good, the Bad and the Ugly",year:1966},{title:"Fight Club",year:1999},{title:"The Lord of the Rings: The Fellowship of the Ring",year:2001},{title:"Star Wars: Episode V - The Empire Strikes Back",year:1980},{title:"Forrest Gump",year:1994},{title:"Inception",year:2010},{title:"The Lord of the Rings: The Two Towers",year:2002},{title:"One Flew Over the Cuckoo's Nest",year:1975},{title:"Goodfellas",year:1990},{title:"The Matrix",year:1999},{title:"Seven Samurai",year:1954},{title:"Star Wars: Episode IV - A New Hope",year:1977},{title:"City of God",year:2002},{title:"Se7en",year:1995},{title:"The Silence of the Lambs",year:1991},{title:"It's a Wonderful Life",year:1946},{title:"Life Is Beautiful",year:1997},{title:"The Usual Suspects",year:1995},{title:"L\xe9on: The Professional",year:1994},{title:"Spirited Away",year:2001},{title:"Saving Private Ryan",year:1998},{title:"Once Upon a Time in the West",year:1968},{title:"American History X",year:1998},{title:"Interstellar",year:2014},{title:"Casablanca",year:1942},{title:"City Lights",year:1931},{title:"Psycho",year:1960},{title:"The Green Mile",year:1999},{title:"The Intouchables",year:2011},{title:"Modern Times",year:1936},{title:"Raiders of the Lost Ark",year:1981},{title:"Rear Window",year:1954},{title:"The Pianist",year:2002},{title:"The Departed",year:2006},{title:"Terminator 2: Judgment Day",year:1991},{title:"Back to the Future",year:1985},{title:"Whiplash",year:2014},{title:"Gladiator",year:2e3},{title:"Memento",year:2e3},{title:"The Prestige",year:2006},{title:"The Lion King",year:1994},{title:"Apocalypse Now",year:1979},{title:"Alien",year:1979},{title:"Sunset Boulevard",year:1950},{title:"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb",year:1964},{title:"The Great Dictator",year:1940},{title:"Cinema Paradiso",year:1988},{title:"The Lives of Others",year:2006},{title:"Grave of the Fireflies",year:1988},{title:"Paths of Glory",year:1957},{title:"Django Unchained",year:2012},{title:"The Shining",year:1980},{title:"WALL\xb7E",year:2008},{title:"American Beauty",year:1999},{title:"The Dark Knight Rises",year:2012},{title:"Princess Mononoke",year:1997},{title:"Aliens",year:1986},{title:"Oldboy",year:2003},{title:"Once Upon a Time in America",year:1984},{title:"Witness for the Prosecution",year:1957},{title:"Das Boot",year:1981},{title:"Citizen Kane",year:1941},{title:"North by Northwest",year:1959},{title:"Vertigo",year:1958},{title:"Star Wars: Episode VI - Return of the Jedi",year:1983},{title:"Reservoir Dogs",year:1992},{title:"Braveheart",year:1995},{title:"M",year:1931},{title:"Requiem for a Dream",year:2e3},{title:"Am\xe9lie",year:2001},{title:"A Clockwork Orange",year:1971},{title:"Like Stars on Earth",year:2007},{title:"Taxi Driver",year:1976},{title:"Lawrence of Arabia",year:1962},{title:"Double Indemnity",year:1944},{title:"Eternal Sunshine of the Spotless Mind",year:2004},{title:"Amadeus",year:1984},{title:"To Kill a Mockingbird",year:1962},{title:"Toy Story 3",year:2010},{title:"Logan",year:2017},{title:"Full Metal Jacket",year:1987},{title:"Dangal",year:2016},{title:"The Sting",year:1973},{title:"2001: A Space Odyssey",year:1968},{title:"Singin' in the Rain",year:1952},{title:"Toy Story",year:1995},{title:"Bicycle Thieves",year:1948},{title:"The Kid",year:1921},{title:"Inglourious Basterds",year:2009},{title:"Snatch",year:2e3},{title:"3 Idiots",year:2009},{title:"Monty Python and the Holy Grail",year:1975}]},2118:function(e,t,n){"use strict";n.r(t),t.default="import * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport parse from 'autosuggest-highlight/parse';\nimport match from 'autosuggest-highlight/match';\n\nexport default function Highlights() {\n  return (\n    <Autocomplete\n      id=\"highlights-demo\"\n      sx={{ width: 300 }}\n      options={top100Films}\n      getOptionLabel={(option) => option.title}\n      renderInput={(params) => (\n        <TextField {...params} label=\"Highlights\" margin=\"normal\" />\n      )}\n      renderOption={(props, option, { inputValue }) => {\n        const matches = match(option.title, inputValue);\n        const parts = parse(option.title, matches);\n\n        return (\n          <li {...props}>\n            <div>\n              {parts.map((part, index) => (\n                <span\n                  key={index}\n                  style={{\n                    fontWeight: part.highlight ? 700 : 400,\n                  }}\n                >\n                  {part.text}\n                </span>\n              ))}\n            </div>\n          </li>\n        );\n      }}\n    />\n  );\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n  { title: 'The Shawshank Redemption', year: 1994 },\n  { title: 'The Godfather', year: 1972 },\n  { title: 'The Godfather: Part II', year: 1974 },\n  { title: 'The Dark Knight', year: 2008 },\n  { title: '12 Angry Men', year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n  { title: 'Pulp Fiction', year: 1994 },\n  {\n    title: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\n  { title: 'Fight Club', year: 1999 },\n  {\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { title: 'Forrest Gump', year: 1994 },\n  { title: 'Inception', year: 2010 },\n  {\n    title: 'The Lord of the Rings: The Two Towers',\n    year: 2002,\n  },\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { title: 'Goodfellas', year: 1990 },\n  { title: 'The Matrix', year: 1999 },\n  { title: 'Seven Samurai', year: 1954 },\n  {\n    title: 'Star Wars: Episode IV - A New Hope',\n    year: 1977,\n  },\n  { title: 'City of God', year: 2002 },\n  { title: 'Se7en', year: 1995 },\n  { title: 'The Silence of the Lambs', year: 1991 },\n  { title: \"It's a Wonderful Life\", year: 1946 },\n  { title: 'Life Is Beautiful', year: 1997 },\n  { title: 'The Usual Suspects', year: 1995 },\n  { title: 'L\xe9on: The Professional', year: 1994 },\n  { title: 'Spirited Away', year: 2001 },\n  { title: 'Saving Private Ryan', year: 1998 },\n  { title: 'Once Upon a Time in the West', year: 1968 },\n  { title: 'American History X', year: 1998 },\n  { title: 'Interstellar', year: 2014 },\n  { title: 'Casablanca', year: 1942 },\n  { title: 'City Lights', year: 1931 },\n  { title: 'Psycho', year: 1960 },\n  { title: 'The Green Mile', year: 1999 },\n  { title: 'The Intouchables', year: 2011 },\n  { title: 'Modern Times', year: 1936 },\n  { title: 'Raiders of the Lost Ark', year: 1981 },\n  { title: 'Rear Window', year: 1954 },\n  { title: 'The Pianist', year: 2002 },\n  { title: 'The Departed', year: 2006 },\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\n  { title: 'Back to the Future', year: 1985 },\n  { title: 'Whiplash', year: 2014 },\n  { title: 'Gladiator', year: 2000 },\n  { title: 'Memento', year: 2000 },\n  { title: 'The Prestige', year: 2006 },\n  { title: 'The Lion King', year: 1994 },\n  { title: 'Apocalypse Now', year: 1979 },\n  { title: 'Alien', year: 1979 },\n  { title: 'Sunset Boulevard', year: 1950 },\n  {\n    title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964,\n  },\n  { title: 'The Great Dictator', year: 1940 },\n  { title: 'Cinema Paradiso', year: 1988 },\n  { title: 'The Lives of Others', year: 2006 },\n  { title: 'Grave of the Fireflies', year: 1988 },\n  { title: 'Paths of Glory', year: 1957 },\n  { title: 'Django Unchained', year: 2012 },\n  { title: 'The Shining', year: 1980 },\n  { title: 'WALL\xb7E', year: 2008 },\n  { title: 'American Beauty', year: 1999 },\n  { title: 'The Dark Knight Rises', year: 2012 },\n  { title: 'Princess Mononoke', year: 1997 },\n  { title: 'Aliens', year: 1986 },\n  { title: 'Oldboy', year: 2003 },\n  { title: 'Once Upon a Time in America', year: 1984 },\n  { title: 'Witness for the Prosecution', year: 1957 },\n  { title: 'Das Boot', year: 1981 },\n  { title: 'Citizen Kane', year: 1941 },\n  { title: 'North by Northwest', year: 1959 },\n  { title: 'Vertigo', year: 1958 },\n  {\n    title: 'Star Wars: Episode VI - Return of the Jedi',\n    year: 1983,\n  },\n  { title: 'Reservoir Dogs', year: 1992 },\n  { title: 'Braveheart', year: 1995 },\n  { title: 'M', year: 1931 },\n  { title: 'Requiem for a Dream', year: 2000 },\n  { title: 'Am\xe9lie', year: 2001 },\n  { title: 'A Clockwork Orange', year: 1971 },\n  { title: 'Like Stars on Earth', year: 2007 },\n  { title: 'Taxi Driver', year: 1976 },\n  { title: 'Lawrence of Arabia', year: 1962 },\n  { title: 'Double Indemnity', year: 1944 },\n  {\n    title: 'Eternal Sunshine of the Spotless Mind',\n    year: 2004,\n  },\n  { title: 'Amadeus', year: 1984 },\n  { title: 'To Kill a Mockingbird', year: 1962 },\n  { title: 'Toy Story 3', year: 2010 },\n  { title: 'Logan', year: 2017 },\n  { title: 'Full Metal Jacket', year: 1987 },\n  { title: 'Dangal', year: 2016 },\n  { title: 'The Sting', year: 1973 },\n  { title: '2001: A Space Odyssey', year: 1968 },\n  { title: \"Singin' in the Rain\", year: 1952 },\n  { title: 'Toy Story', year: 1995 },\n  { title: 'Bicycle Thieves', year: 1948 },\n  { title: 'The Kid', year: 1921 },\n  { title: 'Inglourious Basterds', year: 2009 },\n  { title: 'Snatch', year: 2000 },\n  { title: '3 Idiots', year: 2009 },\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\n];\n"},2119:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return c}));var a=n(8),i=(n(1),n(1335)),r=n(1541),l=n(1663),o=n(0),s=Object(r.a)({matchFrom:"start",stringify:function(e){return e.title}});function c(){return Object(o.jsx)(l.a,{id:"filter-demo",options:d,getOptionLabel:function(e){return e.title},filterOptions:s,sx:{width:300},renderInput:function(e){return Object(o.jsx)(i.a,Object(a.a)(Object(a.a)({},e),{},{label:"Custom filter"}))}})}var d=[{title:"The Shawshank Redemption",year:1994},{title:"The Godfather",year:1972},{title:"The Godfather: Part II",year:1974},{title:"The Dark Knight",year:2008},{title:"12 Angry Men",year:1957},{title:"Schindler's List",year:1993},{title:"Pulp Fiction",year:1994},{title:"The Lord of the Rings: The Return of the King",year:2003},{title:"The Good, the Bad and the Ugly",year:1966},{title:"Fight Club",year:1999},{title:"The Lord of the Rings: The Fellowship of the Ring",year:2001},{title:"Star Wars: Episode V - The Empire Strikes Back",year:1980},{title:"Forrest Gump",year:1994},{title:"Inception",year:2010},{title:"The Lord of the Rings: The Two Towers",year:2002},{title:"One Flew Over the Cuckoo's Nest",year:1975},{title:"Goodfellas",year:1990},{title:"The Matrix",year:1999},{title:"Seven Samurai",year:1954},{title:"Star Wars: Episode IV - A New Hope",year:1977},{title:"City of God",year:2002},{title:"Se7en",year:1995},{title:"The Silence of the Lambs",year:1991},{title:"It's a Wonderful Life",year:1946},{title:"Life Is Beautiful",year:1997},{title:"The Usual Suspects",year:1995},{title:"L\xe9on: The Professional",year:1994},{title:"Spirited Away",year:2001},{title:"Saving Private Ryan",year:1998},{title:"Once Upon a Time in the West",year:1968},{title:"American History X",year:1998},{title:"Interstellar",year:2014},{title:"Casablanca",year:1942},{title:"City Lights",year:1931},{title:"Psycho",year:1960},{title:"The Green Mile",year:1999},{title:"The Intouchables",year:2011},{title:"Modern Times",year:1936},{title:"Raiders of the Lost Ark",year:1981},{title:"Rear Window",year:1954},{title:"The Pianist",year:2002},{title:"The Departed",year:2006},{title:"Terminator 2: Judgment Day",year:1991},{title:"Back to the Future",year:1985},{title:"Whiplash",year:2014},{title:"Gladiator",year:2e3},{title:"Memento",year:2e3},{title:"The Prestige",year:2006},{title:"The Lion King",year:1994},{title:"Apocalypse Now",year:1979},{title:"Alien",year:1979},{title:"Sunset Boulevard",year:1950},{title:"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb",year:1964},{title:"The Great Dictator",year:1940},{title:"Cinema Paradiso",year:1988},{title:"The Lives of Others",year:2006},{title:"Grave of the Fireflies",year:1988},{title:"Paths of Glory",year:1957},{title:"Django Unchained",year:2012},{title:"The Shining",year:1980},{title:"WALL\xb7E",year:2008},{title:"American Beauty",year:1999},{title:"The Dark Knight Rises",year:2012},{title:"Princess Mononoke",year:1997},{title:"Aliens",year:1986},{title:"Oldboy",year:2003},{title:"Once Upon a Time in America",year:1984},{title:"Witness for the Prosecution",year:1957},{title:"Das Boot",year:1981},{title:"Citizen Kane",year:1941},{title:"North by Northwest",year:1959},{title:"Vertigo",year:1958},{title:"Star Wars: Episode VI - Return of the Jedi",year:1983},{title:"Reservoir Dogs",year:1992},{title:"Braveheart",year:1995},{title:"M",year:1931},{title:"Requiem for a Dream",year:2e3},{title:"Am\xe9lie",year:2001},{title:"A Clockwork Orange",year:1971},{title:"Like Stars on Earth",year:2007},{title:"Taxi Driver",year:1976},{title:"Lawrence of Arabia",year:1962},{title:"Double Indemnity",year:1944},{title:"Eternal Sunshine of the Spotless Mind",year:2004},{title:"Amadeus",year:1984},{title:"To Kill a Mockingbird",year:1962},{title:"Toy Story 3",year:2010},{title:"Logan",year:2017},{title:"Full Metal Jacket",year:1987},{title:"Dangal",year:2016},{title:"The Sting",year:1973},{title:"2001: A Space Odyssey",year:1968},{title:"Singin' in the Rain",year:1952},{title:"Toy Story",year:1995},{title:"Bicycle Thieves",year:1948},{title:"The Kid",year:1921},{title:"Inglourious Basterds",year:2009},{title:"Snatch",year:2e3},{title:"3 Idiots",year:2009},{title:"Monty Python and the Holy Grail",year:1975}]},2120:function(e,t,n){"use strict";n.r(t),t.default="import * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\n\nconst filterOptions = createFilterOptions({\n  matchFrom: 'start',\n  stringify: (option) => option.title,\n});\n\nexport default function Filter() {\n  return (\n    <Autocomplete\n      id=\"filter-demo\"\n      options={top100Films}\n      getOptionLabel={(option) => option.title}\n      filterOptions={filterOptions}\n      sx={{ width: 300 }}\n      renderInput={(params) => <TextField {...params} label=\"Custom filter\" />}\n    />\n  );\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n  { title: 'The Shawshank Redemption', year: 1994 },\n  { title: 'The Godfather', year: 1972 },\n  { title: 'The Godfather: Part II', year: 1974 },\n  { title: 'The Dark Knight', year: 2008 },\n  { title: '12 Angry Men', year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n  { title: 'Pulp Fiction', year: 1994 },\n  {\n    title: 'The Lord of the Rings: The Return of the King',\n    year: 2003,\n  },\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\n  { title: 'Fight Club', year: 1999 },\n  {\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001,\n  },\n  {\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980,\n  },\n  { title: 'Forrest Gump', year: 1994 },\n  { title: 'Inception', year: 2010 },\n  {\n    title: 'The Lord of the Rings: The Two Towers',\n    year: 2002,\n  },\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { title: 'Goodfellas', year: 1990 },\n  { title: 'The Matrix', year: 1999 },\n  { title: 'Seven Samurai', year: 1954 },\n  {\n    title: 'Star Wars: Episode IV - A New Hope',\n    year: 1977,\n  },\n  { title: 'City of God', year: 2002 },\n  { title: 'Se7en', year: 1995 },\n  { title: 'The Silence of the Lambs', year: 1991 },\n  { title: \"It's a Wonderful Life\", year: 1946 },\n  { title: 'Life Is Beautiful', year: 1997 },\n  { title: 'The Usual Suspects', year: 1995 },\n  { title: 'L\xe9on: The Professional', year: 1994 },\n  { title: 'Spirited Away', year: 2001 },\n  { title: 'Saving Private Ryan', year: 1998 },\n  { title: 'Once Upon a Time in the West', year: 1968 },\n  { title: 'American History X', year: 1998 },\n  { title: 'Interstellar', year: 2014 },\n  { title: 'Casablanca', year: 1942 },\n  { title: 'City Lights', year: 1931 },\n  { title: 'Psycho', year: 1960 },\n  { title: 'The Green Mile', year: 1999 },\n  { title: 'The Intouchables', year: 2011 },\n  { title: 'Modern Times', year: 1936 },\n  { title: 'Raiders of the Lost Ark', year: 1981 },\n  { title: 'Rear Window', year: 1954 },\n  { title: 'The Pianist', year: 2002 },\n  { title: 'The Departed', year: 2006 },\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\n  { title: 'Back to the Future', year: 1985 },\n  { title: 'Whiplash', year: 2014 },\n  { title: 'Gladiator', year: 2000 },\n  { title: 'Memento', year: 2000 },\n  { title: 'The Prestige', year: 2006 },\n  { title: 'The Lion King', year: 1994 },\n  { title: 'Apocalypse Now', year: 1979 },\n  { title: 'Alien', year: 1979 },\n  { title: 'Sunset Boulevard', year: 1950 },\n  {\n    title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964,\n  },\n  { title: 'The Great Dictator', year: 1940 },\n  { title: 'Cinema Paradiso', year: 1988 },\n  { title: 'The Lives of Others', year: 2006 },\n  { title: 'Grave of the Fireflies', year: 1988 },\n  { title: 'Paths of Glory', year: 1957 },\n  { title: 'Django Unchained', year: 2012 },\n  { title: 'The Shining', year: 1980 },\n  { title: 'WALL\xb7E', year: 2008 },\n  { title: 'American Beauty', year: 1999 },\n  { title: 'The Dark Knight Rises', year: 2012 },\n  { title: 'Princess Mononoke', year: 1997 },\n  { title: 'Aliens', year: 1986 },\n  { title: 'Oldboy', year: 2003 },\n  { title: 'Once Upon a Time in America', year: 1984 },\n  { title: 'Witness for the Prosecution', year: 1957 },\n  { title: 'Das Boot', year: 1981 },\n  { title: 'Citizen Kane', year: 1941 },\n  { title: 'North by Northwest', year: 1959 },\n  { title: 'Vertigo', year: 1958 },\n  {\n    title: 'Star Wars: Episode VI - Return of the Jedi',\n    year: 1983,\n  },\n  { title: 'Reservoir Dogs', year: 1992 },\n  { title: 'Braveheart', year: 1995 },\n  { title: 'M', year: 1931 },\n  { title: 'Requiem for a Dream', year: 2000 },\n  { title: 'Am\xe9lie', year: 2001 },\n  { title: 'A Clockwork Orange', year: 1971 },\n  { title: 'Like Stars on Earth', year: 2007 },\n  { title: 'Taxi Driver', year: 1976 },\n  { title: 'Lawrence of Arabia', year: 1962 },\n  { title: 'Double Indemnity', year: 1944 },\n  {\n    title: 'Eternal Sunshine of the Spotless Mind',\n    year: 2004,\n  },\n  { title: 'Amadeus', year: 1984 },\n  { title: 'To Kill a Mockingbird', year: 1962 },\n  { title: 'Toy Story 3', year: 2010 },\n  { title: 'Logan', year: 2017 },\n  { title: 'Full Metal Jacket', year: 1987 },\n  { title: 'Dangal', year: 2016 },\n  { title: 'The Sting', year: 1973 },\n  { title: '2001: A Space Odyssey', year: 1968 },\n  { title: \"Singin' in the Rain\", year: 1952 },\n  { title: 'Toy Story', year: 1995 },\n  { title: 'Bicycle Thieves', year: 1948 },\n  { title: 'The Kid', year: 1921 },\n  { title: 'Inglourious Basterds', year: 2009 },\n  { title: 'Snatch', year: 2000 },\n  { title: '3 Idiots', year: 2009 },\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\n];\n"},2121:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return A}));var a=n(4),i=n(20),r=n(127),l=n(8),o=n(1),s=n(1335),c=n(1540),d=n(1663),y=n(1366),h=n(1343),p=n(738),u=n(50),m=n(14),b=n(1863),f=n(222),g=n(0),T=["children"];function j(e){var t=e.data,n=e.index,a=e.style,i=t[n],r=Object(l.a)(Object(l.a)({},a),{},{top:a.top+8});return i.hasOwnProperty("group")?Object(g.jsx)(h.a,{component:"div",style:r,children:i.group},i.key):Object(g.jsx)(f.a,Object(l.a)(Object(l.a)({component:"li"},i[0]),{},{noWrap:!0,style:r,children:i[1]}))}var O=o.createContext({}),S=o.forwardRef((function(e,t){var n=o.useContext(O);return Object(g.jsx)("div",Object(l.a)(Object(l.a)({ref:t},e),n))}));var x=o.forwardRef((function(e,t){var n=e.children,a=Object(r.a)(e,T),l=[];n.forEach((function(e){l.push(e),l.push.apply(l,Object(i.a)(e.children||[]))}));var s=Object(u.a)(),c=Object(y.a)(s.breakpoints.up("sm"),{noSsr:!0}),d=l.length,h=c?36:48,p=function(e){return e.hasOwnProperty("group")?48:h},m=function(e){var t=o.useRef(null);return o.useEffect((function(){null!=t.current&&t.current.resetAfterIndex(0,!0)}),[e]),t}(d);return Object(g.jsx)("div",{ref:t,children:Object(g.jsx)(O.Provider,{value:a,children:Object(g.jsx)(b.b,{itemData:l,height:(d>8?8*h:l.map(p).reduce((function(e,t){return e+t}),0))+16,width:"100%",ref:m,outerElementType:S,innerElementType:"ul",itemSize:function(e){return p(l[e])},overscanCount:5,itemCount:d,children:j})})})}));var v=Object(m.a)(p.a)(Object(a.a)({},"& .".concat(c.a.listbox),{boxSizing:"border-box","& ul":{padding:0,margin:0}})),w=Array.from(new Array(1e4)).map((function(){return function(e){for(var t="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",n="",a=0;a<e;a+=1)n+=t.charAt(Math.floor(Math.random()*t.length));return n}(10+Math.ceil(20*Math.random()))})).sort((function(e,t){return e.toUpperCase().localeCompare(t.toUpperCase())}));function A(){return Object(g.jsx)(d.a,{id:"virtualize-demo",sx:{width:300},disableListWrap:!0,PopperComponent:v,ListboxComponent:x,options:w,groupBy:function(e){return e[0].toUpperCase()},renderInput:function(e){return Object(g.jsx)(s.a,Object(l.a)(Object(l.a)({},e),{},{label:"10,000 options"}))},renderOption:function(e,t){return[e,t]},renderGroup:function(e){return e}})}},2122:function(e,t,n){"use strict";n.r(t),t.default="import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete, { autocompleteClasses } from '@mui/material/Autocomplete';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport ListSubheader from '@mui/material/ListSubheader';\nimport Popper from '@mui/material/Popper';\nimport { useTheme, styled } from '@mui/material/styles';\nimport { VariableSizeList } from 'react-window';\nimport Typography from '@mui/material/Typography';\n\nconst LISTBOX_PADDING = 8; // px\n\nfunction renderRow(props) {\n  const { data, index, style } = props;\n  const dataSet = data[index];\n  const inlineStyle = {\n    ...style,\n    top: style.top + LISTBOX_PADDING,\n  };\n\n  if (dataSet.hasOwnProperty('group')) {\n    return (\n      <ListSubheader key={dataSet.key} component=\"div\" style={inlineStyle}>\n        {dataSet.group}\n      </ListSubheader>\n    );\n  }\n\n  return (\n    <Typography component=\"li\" {...dataSet[0]} noWrap style={inlineStyle}>\n      {dataSet[1]}\n    </Typography>\n  );\n}\n\nconst OuterElementContext = React.createContext({});\n\nconst OuterElementType = React.forwardRef((props, ref) => {\n  const outerProps = React.useContext(OuterElementContext);\n  return <div ref={ref} {...props} {...outerProps} />;\n});\n\nfunction useResetCache(data) {\n  const ref = React.useRef(null);\n  React.useEffect(() => {\n    if (ref.current != null) {\n      ref.current.resetAfterIndex(0, true);\n    }\n  }, [data]);\n  return ref;\n}\n\n// Adapter for react-window\nconst ListboxComponent = React.forwardRef(function ListboxComponent(props, ref) {\n  const { children, ...other } = props;\n  const itemData = [];\n  children.forEach((item) => {\n    itemData.push(item);\n    itemData.push(...(item.children || []));\n  });\n\n  const theme = useTheme();\n  const smUp = useMediaQuery(theme.breakpoints.up('sm'), {\n    noSsr: true,\n  });\n\n  const itemCount = itemData.length;\n  const itemSize = smUp ? 36 : 48;\n\n  const getChildSize = (child) => {\n    if (child.hasOwnProperty('group')) {\n      return 48;\n    }\n\n    return itemSize;\n  };\n\n  const getHeight = () => {\n    if (itemCount > 8) {\n      return 8 * itemSize;\n    }\n    return itemData.map(getChildSize).reduce((a, b) => a + b, 0);\n  };\n\n  const gridRef = useResetCache(itemCount);\n\n  return (\n    <div ref={ref}>\n      <OuterElementContext.Provider value={other}>\n        <VariableSizeList\n          itemData={itemData}\n          height={getHeight() + 2 * LISTBOX_PADDING}\n          width=\"100%\"\n          ref={gridRef}\n          outerElementType={OuterElementType}\n          innerElementType=\"ul\"\n          itemSize={(index) => getChildSize(itemData[index])}\n          overscanCount={5}\n          itemCount={itemCount}\n        >\n          {renderRow}\n        </VariableSizeList>\n      </OuterElementContext.Provider>\n    </div>\n  );\n});\n\nListboxComponent.propTypes = {\n  children: PropTypes.node,\n};\n\nfunction random(length) {\n  const characters =\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  let result = '';\n\n  for (let i = 0; i < length; i += 1) {\n    result += characters.charAt(Math.floor(Math.random() * characters.length));\n  }\n\n  return result;\n}\n\nconst StyledPopper = styled(Popper)({\n  [`& .${autocompleteClasses.listbox}`]: {\n    boxSizing: 'border-box',\n    '& ul': {\n      padding: 0,\n      margin: 0,\n    },\n  },\n});\n\nconst OPTIONS = Array.from(new Array(10000))\n  .map(() => random(10 + Math.ceil(Math.random() * 20)))\n  .sort((a, b) => a.toUpperCase().localeCompare(b.toUpperCase()));\n\nexport default function Virtualize() {\n  return (\n    <Autocomplete\n      id=\"virtualize-demo\"\n      sx={{ width: 300 }}\n      disableListWrap\n      PopperComponent={StyledPopper}\n      ListboxComponent={ListboxComponent}\n      options={OPTIONS}\n      groupBy={(option) => option[0].toUpperCase()}\n      renderInput={(params) => <TextField {...params} label=\"10,000 options\" />}\n      renderOption={(props, option) => [props, option]}\n      renderGroup={(params) => params}\n    />\n  );\n}\n"},3249:function(e,t,n){"use strict";n.r(t);var a=n(1383),i=n(168),r=n(1336),l=n(1327),o=n(222),s=n(0);t.default=function(e){return Object(s.jsxs)(s.Fragment,{children:[Object(s.jsx)("div",{className:"flex flex-1 flex-grow-0 items-center justify-end",children:Object(s.jsxs)(r.a,{className:"normal-case",variant:"contained",color:"secondary",component:"a",href:"https://mui.com/components/autocomplete",target:"_blank",role:"button",children:[Object(s.jsx)(l.a,{children:"link"}),Object(s.jsx)("span",{className:"mx-4",children:"Reference"})]})}),Object(s.jsx)(o.a,{className:"text-40 my-16 font-700",component:"h1",children:"Autocomplete"}),Object(s.jsx)(o.a,{className:"description",children:"The autocomplete is a normal text input enhanced by a panel of suggested options."}),Object(s.jsx)(o.a,{className:"mb-40",component:"div",children:"The widget is useful for setting the value of a single-line textbox in one of two types of scenarios:"}),Object(s.jsxs)("ol",{children:[Object(s.jsxs)("li",{children:["The value for the textbox must be chosen from a predefined set of allowed values, e.g., a location field must contain a valid location name: ",Object(s.jsx)("a",{href:"#combo-box",children:"combo box"}),"."]}),Object(s.jsxs)("li",{children:["The textbox may contain any arbitrary value, but it is advantageous to suggest possible values to the user, e.g., a search field may suggest similar or previous searches to save the user time: ",Object(s.jsx)("a",{href:"#free-solo",children:"free solo"}),"."]})]}),Object(s.jsx)(o.a,{className:"mb-40",component:"div",children:'It\'s meant to be an improved version of the "react-select" and "downshift" packages.'}),Object(s.jsx)(o.a,{className:"text-32 mt-40 mb-10 font-700",component:"h2",children:"Combo box"}),Object(s.jsx)(o.a,{className:"mb-40",component:"div",children:"The value must be chosen from a predefined set of allowed values."}),Object(s.jsx)(o.a,{className:"mb-40",component:"div",children:Object(s.jsx)(a.a,{className:"my-24",iframe:!1,component:n(2069).default,raw:n(2070)})}),Object(s.jsx)(o.a,{className:"text-20 mt-20 mb-10 font-700",component:"h3",children:"Options structure"}),Object(s.jsx)(o.a,{className:"mb-40",component:"div",children:"By default, the component accepts the following options structures:"}),Object(s.jsx)(i.a,{component:"pre",className:"language-ts",children:" \ninterface AutocompleteOption {\n  label: string;\n}\n// or\ntype AutocompleteOption = string;\n"}),Object(s.jsx)(o.a,{className:"mb-40",component:"div",children:"for instance:"}),Object(s.jsx)(i.a,{component:"pre",className:"language-js",children:" \nconst options = [\n  { label: 'The Godfather', id: 1 },\n  { label: 'Pulp Fiction', id: 2 },\n];\n// or\nconst options = ['The Godfather', 'Pulp Fiction'];\n"}),Object(s.jsxs)(o.a,{className:"mb-40",component:"div",children:["However, you can use different structures by providing a ",Object(s.jsx)("code",{children:"getOptionLabel"})," prop."]}),Object(s.jsx)(o.a,{className:"text-20 mt-20 mb-10 font-700",component:"h3",children:"Playground"}),Object(s.jsx)(o.a,{className:"mb-40",component:"div",children:"Each of the following examples demonstrates one feature of the Autocomplete component."}),Object(s.jsx)(o.a,{className:"mb-40",component:"div",children:Object(s.jsx)(a.a,{className:"my-24",iframe:!1,component:n(2071).default,raw:n(2072)})}),Object(s.jsx)(o.a,{className:"text-20 mt-20 mb-10 font-700",component:"h3",children:"Country select"}),Object(s.jsx)(o.a,{className:"mb-40",component:"div",children:"Choose one of the 248 countries."}),Object(s.jsx)(o.a,{className:"mb-40",component:"div",children:Object(s.jsx)(a.a,{className:"my-24",iframe:!1,component:n(2073).default,raw:n(2074)})}),Object(s.jsx)(o.a,{className:"text-20 mt-20 mb-10 font-700",component:"h3",children:"Controlled states"}),Object(s.jsx)(o.a,{className:"mb-40",component:"div",children:"The component has two states that can be controlled:"}),Object(s.jsxs)("ol",{children:[Object(s.jsxs)("li",{children:['the "value" state with the ',Object(s.jsx)("code",{children:"value"}),"/",Object(s.jsx)("code",{children:"onChange"})," props combination. This state represents the value selected by the user, for instance when pressing ",Object(s.jsx)("kbd",{className:"key",children:"Enter"}),"."]}),Object(s.jsxs)("li",{children:['the "input value" state with the ',Object(s.jsx)("code",{children:"inputValue"}),"/",Object(s.jsx)("code",{children:"onInputChange"})," props combination. This state represents the value displayed in the textbox."]})]}),Object(s.jsx)("blockquote",{children:Object(s.jsx)(o.a,{className:"mb-40",component:"div",children:"\u26a0\ufe0f These two states are isolated, they should be controlled independently."})}),Object(s.jsx)(o.a,{className:"mb-40",component:"div",children:Object(s.jsx)(a.a,{className:"my-24",iframe:!1,component:n(2075).default,raw:n(2076)})}),Object(s.jsx)(o.a,{className:"text-32 mt-40 mb-10 font-700",component:"h2",children:"Free solo"}),Object(s.jsxs)(o.a,{className:"mb-40",component:"div",children:["Set ",Object(s.jsx)("code",{children:"freeSolo"})," to true so the textbox can contain any arbitrary value."]}),Object(s.jsx)(o.a,{className:"text-20 mt-20 mb-10 font-700",component:"h3",children:"Search input"}),Object(s.jsxs)(o.a,{className:"mb-40",component:"div",children:["The prop is designed to cover the primary use case of a ",Object(s.jsx)("strong",{children:"search input"})," with suggestions, e.g. Google search or react-autowhatever."]}),Object(s.jsx)(o.a,{className:"mb-40",component:"div",children:Object(s.jsx)(a.a,{className:"my-24",iframe:!1,component:n(2077).default,raw:n(2078)})}),Object(s.jsx)(o.a,{className:"text-20 mt-20 mb-10 font-700",component:"h3",children:"Creatable"}),Object(s.jsxs)(o.a,{className:"mb-40",component:"div",children:["If you intend to use this mode for a ",Object(s.jsx)("a",{href:"#combo-box",children:"combo box"})," like experience (an enhanced version of a select element) we recommend setting:"]}),Object(s.jsxs)("ul",{children:[Object(s.jsxs)("li",{children:[Object(s.jsx)("code",{children:"selectOnFocus"})," to helps the user clear the selected value."]}),Object(s.jsxs)("li",{children:[Object(s.jsx)("code",{children:"clearOnBlur"})," to helps the user to enter a new value."]}),Object(s.jsxs)("li",{children:[Object(s.jsx)("code",{children:"handleHomeEndKeys"})," to move focus inside the popup with the"," ",Object(s.jsx)("kbd",{className:"key",children:"Home"})," and ",Object(s.jsx)("kbd",{className:"key",children:"End"})," keys."]}),Object(s.jsxs)("li",{children:["A last option, for instance ",Object(s.jsx)("code",{children:'Add "YOUR SEARCH"'}),"."]})]}),Object(s.jsx)(o.a,{className:"mb-40",component:"div",children:Object(s.jsx)(a.a,{className:"my-24",iframe:!1,component:n(2079).default,raw:n(2080)})}),Object(s.jsx)(o.a,{className:"mb-40",component:"div",children:"You could also display a dialog when the user wants to add a new value."}),Object(s.jsx)(o.a,{className:"mb-40",component:"div",children:Object(s.jsx)(a.a,{className:"my-24",iframe:!1,component:n(2081).default,raw:n(2082)})}),Object(s.jsx)(o.a,{className:"text-32 mt-40 mb-10 font-700",component:"h2",children:"Grouped"}),Object(s.jsxs)(o.a,{className:"mb-40",component:"div",children:["You can group the options with the ",Object(s.jsx)("code",{children:"groupBy"})," prop. If you do so, make sure that the options are also sorted with the same dimension that they are grouped by, otherwise you will notice duplicate headers."]}),Object(s.jsx)(o.a,{className:"mb-40",component:"div",children:Object(s.jsx)(a.a,{className:"my-24",iframe:!1,component:n(2083).default,raw:n(2084)})}),Object(s.jsx)(o.a,{className:"text-32 mt-40 mb-10 font-700",component:"h2",children:"Disabled options"}),Object(s.jsx)(o.a,{className:"mb-40",component:"div",children:Object(s.jsx)(a.a,{className:"my-24",iframe:!1,component:n(2085).default,raw:n(2086)})}),Object(s.jsx)(o.a,{className:"text-32 mt-40 mb-10 font-700",component:"h2",children:Object(s.jsx)("code",{children:"useAutocomplete"})}),Object(s.jsxs)(o.a,{className:"mb-40",component:"div",children:["For advanced customization use cases, a headless ",Object(s.jsx)("code",{children:"useAutocomplete()"})," hook is exposed. It accepts almost the same options as the Autocomplete component minus all the props related to the rendering of JSX. The Autocomplete component is built on this hook."]}),Object(s.jsx)(i.a,{component:"pre",className:"language-tsx",children:" \nimport { useAutocomplete } from '@mui/core/AutocompleteUnstyled';\n"}),Object(s.jsxs)(o.a,{className:"mb-40",component:"div",children:["The ",Object(s.jsx)("code",{children:"useAutocomplete"})," hook is also reexported from @mui/material for convenience and backward compatibility."]}),Object(s.jsx)(i.a,{component:"pre",className:"language-tsx",children:" \nimport useAutocomplete from '@mui/material/useAutocomplete';\n"}),Object(s.jsx)("ul",{children:Object(s.jsxs)("li",{children:["\ud83d\udce6 ",Object(s.jsx)("a",{href:"/size-snapshot",children:"4.5 kB gzipped"}),"."]})}),Object(s.jsx)(o.a,{className:"mb-40",component:"div",children:Object(s.jsx)(a.a,{className:"my-24",iframe:!1,component:n(2087).default,raw:n(2088)})}),Object(s.jsx)(o.a,{className:"text-20 mt-20 mb-10 font-700",component:"h3",children:"Customized hook"}),Object(s.jsx)(o.a,{className:"mb-40",component:"div",children:Object(s.jsx)(a.a,{className:"my-24",iframe:!1,component:n(2089).default,raw:n(2090)})}),Object(s.jsxs)(o.a,{className:"mb-40",component:"div",children:["Head to the ",Object(s.jsx)("a",{href:"#customization",children:"customization"})," section for an example with the"," ",Object(s.jsx)("code",{children:"Autocomplete"})," component instead of the hook."]}),Object(s.jsx)(o.a,{className:"text-32 mt-40 mb-10 font-700",component:"h2",children:"Asynchronous requests"}),Object(s.jsx)(o.a,{className:"mb-40",component:"div",children:"The component supports two different asynchronous use-cases:"}),Object(s.jsxs)("ul",{children:[Object(s.jsxs)("li",{children:[Object(s.jsx)("a",{href:"#load-on-open",children:"Load on open"}),": it waits for the component to be interacted with to load the options."]}),Object(s.jsxs)("li",{children:[Object(s.jsx)("a",{href:"#search-as-you-type",children:"Search as you type"}),": a new request is made for each keystroke."]})]}),Object(s.jsx)(o.a,{className:"text-20 mt-20 mb-10 font-700",component:"h3",children:"Load on open"}),Object(s.jsx)(o.a,{className:"mb-40",component:"div",children:"It displays a progress state as long as the network request is pending."}),Object(s.jsx)(o.a,{className:"mb-40",component:"div",children:Object(s.jsx)(a.a,{className:"my-24",iframe:!1,component:n(2091).default,raw:n(2092)})}),Object(s.jsx)(o.a,{className:"text-20 mt-20 mb-10 font-700",component:"h3",children:"Search as you type"}),Object(s.jsx)(o.a,{className:"mb-40",component:"div",children:"If your logic is fetching new options on each keystroke and using the current value of the textbox to filter on the server, you may want to consider throttling requests."}),Object(s.jsxs)(o.a,{className:"mb-40",component:"div",children:["Additionally, you will need to disable the built-in filtering of the"," ",Object(s.jsx)("code",{children:"Autocomplete"})," component by overriding the ",Object(s.jsx)("code",{children:"filterOptions"})," prop:"]}),Object(s.jsx)(i.a,{component:"pre",className:"language-jsx",children:" \n<Autocomplete filterOptions={(x) => x} />\n"}),Object(s.jsx)(o.a,{className:"text-20 mt-20 mb-10 font-700",component:"h3",children:"Google Maps place"}),Object(s.jsx)(o.a,{className:"mb-40",component:"div",children:"A customized UI for Google Maps Places Autocomplete."}),Object(s.jsx)(o.a,{className:"mb-40",component:"div",children:Object(s.jsx)(a.a,{className:"my-24",iframe:!1,component:n(2093).default,raw:n(2100)})}),Object(s.jsxs)(o.a,{className:"mb-40",component:"div",children:["For this demo, we need to load the"," ",Object(s.jsx)("a",{href:"https://developers.google.com/maps/documentation/javascript/tutorial",children:"Google Maps JavaScript"})," ","API."]}),Object(s.jsx)("blockquote",{children:Object(s.jsx)(o.a,{className:"mb-40",component:"div",children:"\u26a0\ufe0f Before you can start using the Google Maps JavaScript API, you must sign up and create a billing account."})}),Object(s.jsx)(o.a,{className:"text-32 mt-40 mb-10 font-700",component:"h2",children:"Multiple values"}),Object(s.jsx)(o.a,{className:"mb-40",component:"div",children:"Also known as tags, the user is allowed to enter more than one value."}),Object(s.jsx)(o.a,{className:"mb-40",component:"div",children:Object(s.jsx)(a.a,{className:"my-24",iframe:!1,component:n(2101).default,raw:n(2102)})}),Object(s.jsx)(o.a,{className:"text-20 mt-20 mb-10 font-700",component:"h3",children:"Fixed options"}),Object(s.jsx)(o.a,{className:"mb-40",component:"div",children:"In the event that you need to lock certain tag so that they can't be removed in the interface, you can set the chips disabled."}),Object(s.jsx)(o.a,{className:"mb-40",component:"div",children:Object(s.jsx)(a.a,{className:"my-24",iframe:!1,component:n(2103).default,raw:n(2104)})}),Object(s.jsx)(o.a,{className:"text-20 mt-20 mb-10 font-700",component:"h3",children:"Checkboxes"}),Object(s.jsx)(o.a,{className:"mb-40",component:"div",children:Object(s.jsx)(a.a,{className:"my-24",iframe:!1,component:n(2105).default,raw:n(2108)})}),Object(s.jsx)(o.a,{className:"text-20 mt-20 mb-10 font-700",component:"h3",children:"Limit tags"}),Object(s.jsxs)(o.a,{className:"mb-40",component:"div",children:["You can use the ",Object(s.jsx)("code",{children:"limitTags"})," prop to limit the number of displayed options when not focused."]}),Object(s.jsx)(o.a,{className:"mb-40",component:"div",children:Object(s.jsx)(a.a,{className:"my-24",iframe:!1,component:n(2109).default,raw:n(2110)})}),Object(s.jsx)(o.a,{className:"text-32 mt-40 mb-10 font-700",component:"h2",children:"Sizes"}),Object(s.jsxs)(o.a,{className:"mb-40",component:"div",children:["Fancy smaller inputs? Use the ",Object(s.jsx)("code",{children:"size"})," prop."]}),Object(s.jsx)(o.a,{className:"mb-40",component:"div",children:Object(s.jsx)(a.a,{className:"my-24",iframe:!1,component:n(2111).default,raw:n(2112)})}),Object(s.jsx)(o.a,{className:"text-32 mt-40 mb-10 font-700",component:"h2",children:"Customization"}),Object(s.jsx)(o.a,{className:"text-20 mt-20 mb-10 font-700",component:"h3",children:"Custom input"}),Object(s.jsxs)(o.a,{className:"mb-40",component:"div",children:["The ",Object(s.jsx)("code",{children:"renderInput"})," prop allows you to customize the rendered input. The first argument of this render prop contains props that you need to forward. Pay specific attention to the ",Object(s.jsx)("code",{children:"ref"})," and ",Object(s.jsx)("code",{children:"inputProps"})," keys."]}),Object(s.jsx)(o.a,{className:"mb-40",component:"div",children:Object(s.jsx)(a.a,{className:"my-24",iframe:!1,component:n(2113).default,raw:n(2114)})}),Object(s.jsx)(o.a,{className:"text-20 mt-20 mb-10 font-700",component:"h3",children:"GitHub's picker"}),Object(s.jsx)(o.a,{className:"mb-40",component:"div",children:"This demo reproduces the GitHub's label picker:"}),Object(s.jsx)(o.a,{className:"mb-40",component:"div",children:Object(s.jsx)(a.a,{className:"my-24",iframe:!1,component:n(2115).default,raw:n(2116)})}),Object(s.jsxs)(o.a,{className:"mb-40",component:"div",children:["Head to the ",Object(s.jsx)("a",{href:"#customized-hook",children:"Customized hook"})," section for a customization example with the ",Object(s.jsx)("code",{children:"useAutocomplete"})," hook instead of the component."]}),Object(s.jsx)(o.a,{className:"text-32 mt-40 mb-10 font-700",component:"h2",children:"Highlights"}),Object(s.jsxs)(o.a,{className:"mb-40",component:"div",children:["The following demo relies on"," ",Object(s.jsx)("a",{href:"https://github.com/moroshko/autosuggest-highlight",children:"autosuggest-highlight"}),", a small (1 kB) utility for highlighting text in autosuggest and autocomplete components."]}),Object(s.jsx)(o.a,{className:"mb-40",component:"div",children:Object(s.jsx)(a.a,{className:"my-24",iframe:!1,component:n(2117).default,raw:n(2118)})}),Object(s.jsx)(o.a,{className:"text-32 mt-40 mb-10 font-700",component:"h2",children:"Custom filter"}),Object(s.jsxs)(o.a,{className:"mb-40",component:"div",children:["The component exposes a factory to create a filter method that can provided to the"," ",Object(s.jsx)("code",{children:"filterOptions"})," prop. You can use it to change the default option filter behavior."]}),Object(s.jsx)(i.a,{component:"pre",className:"language-js",children:" \nimport { createFilterOptions } from '@mui/material/Autocomplete';\n"}),Object(s.jsx)(o.a,{className:"text-20 mt-20 mb-10 font-700",component:"h3",children:Object(s.jsx)("code",{children:"createFilterOptions(config) => filterOptions"})}),Object(s.jsx)(o.a,{className:"text-16 mt-16 mb-10",component:"h4",children:"Arguments"}),Object(s.jsx)("ol",{children:Object(s.jsxs)("li",{children:[Object(s.jsx)("code",{children:"config"})," (",Object(s.jsx)("em",{children:"object"})," [optional]):"]})}),Object(s.jsxs)("ul",{children:[Object(s.jsxs)("li",{children:[Object(s.jsx)("code",{children:"config.ignoreAccents"})," (",Object(s.jsx)("em",{children:"bool"})," [optional]): Defaults to"," ",Object(s.jsx)("code",{children:"true"}),". Remove diacritics."]}),Object(s.jsxs)("li",{children:[Object(s.jsx)("code",{children:"config.ignoreCase"})," (",Object(s.jsx)("em",{children:"bool"})," [optional]): Defaults to ",Object(s.jsx)("code",{children:"true"}),". Lowercase everything."]}),Object(s.jsxs)("li",{children:[Object(s.jsx)("code",{children:"config.limit"})," (",Object(s.jsx)("em",{children:"number"})," [optional]): Default to null. Limit the number of suggested options to be shown. For example, if ",Object(s.jsx)("code",{children:"config.limit"})," is"," ",Object(s.jsx)("code",{children:"100"}),", only the first ",Object(s.jsx)("code",{children:"100"})," matching options are shown. It can be useful if a lot of options match and virtualization wasn't set up."]}),Object(s.jsxs)("li",{children:[Object(s.jsx)("code",{children:"config.matchFrom"})," (",Object(s.jsx)("em",{children:"'any' | 'start'"})," [optional]): Defaults to ",Object(s.jsx)("code",{children:"'any'"}),"."]}),Object(s.jsxs)("li",{children:[Object(s.jsx)("code",{children:"config.stringify"})," (",Object(s.jsx)("em",{children:"func"})," [optional]): Controls how an option is converted into a string so that it can be matched against the input text fragment."]}),Object(s.jsxs)("li",{children:[Object(s.jsx)("code",{children:"config.trim"})," (",Object(s.jsx)("em",{children:"bool"})," [optional]): Defaults to ",Object(s.jsx)("code",{children:"false"}),". Remove trailing spaces."]})]}),Object(s.jsx)(o.a,{className:"text-16 mt-16 mb-10",component:"h4",children:"Returns"}),Object(s.jsxs)(o.a,{className:"mb-40",component:"div",children:[Object(s.jsx)("code",{children:"filterOptions"}),": the returned filter method can be provided directly to the"," ",Object(s.jsx)("code",{children:"filterOptions"})," prop of the ",Object(s.jsx)("code",{children:"Autocomplete"})," component, or the parameter of the same name for the hook."]}),Object(s.jsx)(o.a,{className:"mb-40",component:"div",children:"In the following demo, the options need to start with the query prefix:"}),Object(s.jsx)(i.a,{component:"pre",className:"language-jsx",children:" \nconst filterOptions = createFilterOptions({\n  matchFrom: 'start',\n  stringify: (option) => option.title,\n});\n\n<Autocomplete filterOptions={filterOptions} />;\n"}),Object(s.jsx)(o.a,{className:"mb-40",component:"div",children:Object(s.jsx)(a.a,{className:"my-24",iframe:!1,component:n(2119).default,raw:n(2120)})}),Object(s.jsx)(o.a,{className:"text-20 mt-20 mb-10 font-700",component:"h3",children:"Advanced"}),Object(s.jsxs)(o.a,{className:"mb-40",component:"div",children:["For richer filtering mechanisms, like fuzzy matching, it's recommended to look at"," ",Object(s.jsx)("a",{href:"https://github.com/kentcdodds/match-sorter",children:"match-sorter"}),". For instance:"]}),Object(s.jsx)(i.a,{component:"pre",className:"language-jsx",children:" \nimport { matchSorter } from 'match-sorter';\n\nconst filterOptions = (options, { inputValue }) => matchSorter(options, inputValue);\n\n<Autocomplete filterOptions={filterOptions} />;\n"}),Object(s.jsx)(o.a,{className:"text-32 mt-40 mb-10 font-700",component:"h2",children:"Virtualization"}),Object(s.jsxs)(o.a,{className:"mb-40",component:"div",children:["Search within 10,000 randomly generated options. The list is virtualized thanks to"," ",Object(s.jsx)("a",{href:"https://github.com/bvaughn/react-window",children:"react-window"}),"."]}),Object(s.jsx)(o.a,{className:"mb-40",component:"div",children:Object(s.jsx)(a.a,{className:"my-24",iframe:!1,component:n(2121).default,raw:n(2122)})}),Object(s.jsx)(o.a,{className:"text-32 mt-40 mb-10 font-700",component:"h2",children:"Events"}),Object(s.jsxs)(o.a,{className:"mb-40",component:"div",children:["If you would like to prevent the default key handler behavior, you can set the event's"," ",Object(s.jsx)("code",{children:"defaultMuiPrevented"})," property to ",Object(s.jsx)("code",{children:"true"}),":"]}),Object(s.jsx)(i.a,{component:"pre",className:"language-jsx",children:" \n<Autocomplete\n  onKeyDown={(event) => {\n    if (event.key === 'Enter') {\n      // Prevent's default 'Enter' behavior.\n      event.defaultMuiPrevented = true;\n      // your handler code\n    }\n\n/>\n"}),Object(s.jsx)(o.a,{className:"text-32 mt-40 mb-10 font-700",component:"h2",children:"Limitations"}),Object(s.jsx)(o.a,{className:"text-20 mt-20 mb-10 font-700",component:"h3",children:"autocomplete/autofill"}),Object(s.jsx)(o.a,{className:"mb-40",component:"div",children:"Browsers have heuristics to help the user fill in form inputs. However, this can harm the UX of the component."}),Object(s.jsxs)(o.a,{className:"mb-40",component:"div",children:["By default, the component disables the input ",Object(s.jsx)("strong",{children:"autocomplete"})," feature (remembering what the user has typed for a given field in a previous session) with the"," ",Object(s.jsx)("code",{children:'autoComplete="off"'})," attribute. Google Chrome does not currently support this attribute setting (",Object(s.jsx)("a",{href:"https://bugs.chromium.org/p/chromium/issues/detail?id=587466",children:"Issue 587466"}),"). A possible workaround is to remove the ",Object(s.jsx)("code",{children:"id"})," to have the component generate a random one."]}),Object(s.jsxs)(o.a,{className:"mb-40",component:"div",children:["In addition to remembering past entered values, the browser might also propose"," ",Object(s.jsx)("strong",{children:"autofill"})," suggestions (saved login, address, or payment details). In the event you want the avoid autofill, you can try the following:"]}),Object(s.jsxs)("ul",{children:[Object(s.jsx)("li",{children:Object(s.jsxs)(o.a,{className:"mb-40",component:"div",children:["Name the input without leaking any information the browser can use. e.g."," ",Object(s.jsx)("code",{children:'id="field1"'})," instead of ",Object(s.jsx)("code",{children:'id="country"'}),". If you leave the id empty, the component uses a random id."]})}),Object(s.jsxs)("li",{children:[Object(s.jsxs)(o.a,{className:"mb-40",component:"div",children:["Set ",Object(s.jsx)("code",{children:'autoComplete="new-password"'})," (some browsers will suggest a strong password for inputs with this attribute setting):"]}),Object(s.jsx)(i.a,{component:"pre",className:"language-jsx",children:" \n<TextField\n  {...params}\n  inputProps={{\n    ...params.inputProps,\n    autoComplete: 'new-password',\n\n/>\n"})]})]}),Object(s.jsxs)(o.a,{className:"mb-40",component:"div",children:["Read"," ",Object(s.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/Security/Securing_your_site/Turning_off_form_autocompletion",children:"the guide on MDN"})," ","for more details."]}),Object(s.jsx)(o.a,{className:"text-20 mt-20 mb-10 font-700",component:"h3",children:"iOS VoiceOver"}),Object(s.jsxs)(o.a,{className:"mb-40",component:"div",children:["VoiceOver on iOS Safari doesn't support the ",Object(s.jsx)("code",{children:"aria-owns"})," attribute very well. You can work around the issue with the ",Object(s.jsx)("code",{children:"disablePortal"})," prop."]}),Object(s.jsx)(o.a,{className:"text-20 mt-20 mb-10 font-700",component:"h3",children:"ListboxComponent"}),Object(s.jsxs)(o.a,{className:"mb-40",component:"div",children:["If you provide a custom ",Object(s.jsx)("code",{children:"ListboxComponent"})," prop, you need to make sure that the intended scroll container has the ",Object(s.jsx)("code",{children:"role"})," attribute set to ",Object(s.jsx)("code",{children:"listbox"}),". This ensures the correct behavior of the scroll, for example when using the keyboard to navigate."]}),Object(s.jsx)(o.a,{className:"text-32 mt-40 mb-10 font-700",component:"h2",children:"Accessibility"}),Object(s.jsxs)(o.a,{className:"mb-40",component:"div",children:["(WAI-ARIA:"," ",Object(s.jsx)("a",{href:"https://www.w3.org/TR/wai-aria-practices/#combobox",children:"https://www.w3.org/TR/wai-aria-practices/#combobox"}),")"]}),Object(s.jsx)(o.a,{className:"mb-40",component:"div",children:"We encourage the usage of a label for the textbox. The component implements the WAI-ARIA authoring practices."})]})}}}]);